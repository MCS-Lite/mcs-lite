exports[`Storyshots A API 1`] = `
<a
  className="DvAuM"
  color="primary">
  Link
</a>
`;

exports[`Storyshots A Nested children with Heading 1`] = `
<h1
  className="cRIiEL"
  color="black">
  Heading Level 1 
  <b
    className="dbJQUp">
    <a
      className="DvAuM"
      color="primary">
      Link
    </a>
  </b>
</h1>
`;

exports[`Storyshots A With color props 1`] = `
<div>
  <a
    className="jLdAuJ"
    color="black">
    A link 
    black
  </a>
  <a
    className="kyNyjl"
    color="grayBase">
    A link 
    grayBase
  </a>
  <a
    className="ehnQkl"
    color="grayDark">
    A link 
    grayDark
  </a>
  <a
    className="gWZiGp"
    color="grayLight">
    A link 
    grayLight
  </a>
  <a
    className="dJsIUd"
    color="white">
    A link 
    white
  </a>
  <a
    className="gWZiGp"
    color="default">
    A link 
    default
  </a>
  <a
    className="DvAuM"
    color="primary">
    A link 
    primary
  </a>
  <a
    className="keSCqy"
    color="success">
    A link 
    success
  </a>
  <a
    className="gaOGFo"
    color="error">
    A link 
    error
  </a>
  <a
    className="kuEqBk"
    color="warning">
    A link 
    warning
  </a>
</div>
`;

exports[`Storyshots API [mcs-lite-theme] [JSON] kind 1`] = `
<div>
  <pre>
    [
      \"default\",
      \"primary\",
      \"success\",
      \"error\",
      \"warning\"
    ]
  </pre>
</div>
`;

exports[`Storyshots API [mcs-lite-theme] [JSON] theme 1`] = `
<div>
  <pre>
    {
      \"color\": {
        \"black\": \"#353630\",
        \"grayBase\": \"#999A94\",
        \"grayDark\": \"#D1D2D3\",
        \"grayLight\": \"#FAFAFA\",
        \"white\": \"#FFFFFF\",
        \"default\": \"#FAFAFA\",
        \"primary\": \"#00A1DE\",
        \"success\": \"#69BE28\",
        \"error\": \"#F5364E\",
        \"warning\": \"#F39A1E\"
      },
      \"base\": {
        \"bodyBackgroundColor\": \"#F1F2F7\",
        \"bodyColor\": \"#353630\",
        \"fontSize\": \"13px\",
        \"lineHeight\": 1.5,
        \"inputHeight\": \"32px\"
      },
      \"fontSize\": {
        \"small\": \"92.3%\",
        \"p\": \"1rem\",
        \"h6\": \"1rem\",
        \"h5\": \"1rem\",
        \"h4\": \"1.15rem\",
        \"h3\": \"1.38rem\",
        \"h2\": \"1.69rem\",
        \"h1\": \"2.46rem\"
      }
    }
  </pre>
</div>
`;

exports[`Storyshots B API 1`] = `
<b
  className="dbJQUp">
  Bold content
</b>
`;

exports[`Storyshots B CJK 1`] = `
<h4
  className="ezDjUV"
  color="black">
  <b
    className="dbJQUp">
    控制開關粗體字
  </b>
</h4>
`;

exports[`Storyshots B With color 1`] = `
<div
  className="hEzGry"
  color="primary">
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <b
    className="dbJQUp">
     Bold content 
  </b>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots B Within <P> 1`] = `
<div
  className="cqMgnG"
  color="black">
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="gPtzLl">
    <b
      className="dbJQUp">
       Bold content 
    </b>
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Button API 1`] = `
<button
  className="fqCsyW"
  kind="primary">
  button
</button>
`;

exports[`Storyshots Button Overriding style 1`] = `
<button
  className="ciXyyf"
  kind="primary"
  onClick={[Function]}>
  Overriding style
</button>
`;

exports[`Storyshots Button With block props 1`] = `
<div
  className="epDjBm">
  <button
    className="fqCsyW"
    kind="primary">
    Button
  </button>
  <button
    className="fqCsyW"
    kind="primary">
    Simple button
  </button>
  <button
    className="JGlsS"
    kind="primary">
    block
  </button>
</div>
`;

exports[`Storyshots Button With kind props 1`] = `
<div
  className="epDjBm">
  <button
    className="DxFsx"
    kind="default"
    onClick={[Function]}>
    default
  </button>
  <button
    className="fqCsyW"
    kind="primary"
    onClick={[Function]}>
    primary
  </button>
  <button
    className="ckvztW"
    kind="success"
    onClick={[Function]}>
    success
  </button>
  <button
    className="iDTYQb"
    kind="error"
    onClick={[Function]}>
    error
  </button>
  <button
    className="XOtSZ"
    kind="warning"
    onClick={[Function]}>
    warning
  </button>
</div>
`;

exports[`Storyshots Button With theme provider (Material) 1`] = `
<div
  className="epDjBm">
  <button
    className="bLvfpx"
    kind="default"
    onClick={[Function]}>
    default
  </button>
  <button
    className="iVupic"
    kind="primary"
    onClick={[Function]}>
    primary
  </button>
  <button
    className="jUFdjw"
    kind="success"
    onClick={[Function]}>
    success
  </button>
  <button
    className="ilWTgv"
    kind="error"
    onClick={[Function]}>
    error
  </button>
  <button
    className="gWeAuj"
    kind="warning"
    onClick={[Function]}>
    warning
  </button>
</div>
`;

exports[`Storyshots Card API 1`] = `
<div
  className="eHLExQ">
  Card Content
</div>
`;

exports[`Storyshots DataChannel ControlRange - Category, GPIO and Analog 1`] = `
<div
  className="bnxHrL">
  <div
    className="cVdXxp">
    <div
      className="fROLJM">
      <a
        href="">
        Link
      </a>
    </div>
    <div
      className="dJSrbi">
      <div
        className="ciDLcE">
        <div
          className="hWdvxO">
          <div
            className="kRwEkq">
            <p
              className="jyQfel"
              color="grayBase">
              AAAAAA
            </p>
          </div>
          <div
            className="kRwEkq">
            <p
              className="jyQfel"
              color="grayBase">
              BBBBB
            </p>
          </div>
          <div
            className="kRwEkq">
            <p
              className="jyQfel"
              color="grayBase">
              CCCCC
            </p>
          </div>
          <div
            className="kRwEkq">
            <p
              className="jyQfel"
              color="grayBase">
              DDDDD
            </p>
          </div>
          <div
            className="kRwEkq">
            <p
              className="jyQfel"
              color="grayBase">
              EEEEE
            </p>
          </div>
        </div>
        <div
          className="dLRXKm">
          <div
            className="chvbqM"
            color="grayBase">
            Current value: 
            <p
              className="eBMqlM"
              color="primary">
              DDDDD
            </p>
          </div>
          <input
            className="hdhnFx"
            kind="primary"
            max={4}
            min={0}
            onChange={[Function]}
            step={1}
            type="range"
            value={3} />
        </div>
      </div>
    </div>
    <div>
      <h4
        className="ezDjUV"
        color="black">
        Category
      </h4>
      <div
        className="jyQfel"
        color="grayBase">
        <small
          className="gPtzLl">
          Category
        </small>
      </div>
      <hr
        className="grCtyw" />
      <div
        className="bMkgFU"
        color="black">
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..." />
      </div>
    </div>
  </div>
  <div
    className="cVdXxp">
    <div
      className="fROLJM">
      <a
        href="">
        Link
      </a>
    </div>
    <div
      className="dJSrbi">
      <div
        className="ciDLcE">
        <div
          className="hxnWDy">
          <div
            className="kRwEkq">
            <p
              className="jyQfel"
              color="grayBase">
              Low
            </p>
          </div>
          <div
            className="kRwEkq">
            <p
              className="jyQfel"
              color="grayBase">
              Heigh
            </p>
          </div>
        </div>
        <div
          className="glLEWf">
          <div
            className="chvbqM"
            color="grayBase">
            Current value: 
            <p
              className="eBMqlM"
              color="primary">
              Low
            </p>
          </div>
          <input
            className="hdhnFx"
            kind="primary"
            max={1}
            min={0}
            onChange={[Function]}
            step={1}
            type="range"
            value={0} />
        </div>
      </div>
    </div>
    <div>
      <h4
        className="ezDjUV"
        color="black">
        GPIO
      </h4>
      <div
        className="jyQfel"
        color="grayBase">
        <small
          className="gPtzLl">
          123125125125125
        </small>
      </div>
      <hr
        className="grCtyw" />
      <div
        className="bMkgFU"
        color="black">
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..." />
      </div>
    </div>
  </div>
  <div
    className="cVdXxp">
    <div
      className="fROLJM">
      <a
        href="">
        Link
      </a>
    </div>
    <div
      className="dJSrbi">
      <div
        className="ciDLcE">
        <div
          className="hxnWDy">
          <div
            className="kRwEkq">
            <div
              className="jyQfel"
              color="grayBase">
              0
            </div>
          </div>
          <div
            className="kRwEkq">
            <div
              className="jyQfel"
              color="grayBase">
              100
            </div>
          </div>
        </div>
        <div
          className="glLEWf">
          <div
            className="chvbqM"
            color="grayBase">
            Current value: 
            <div
              className="eBMqlM"
              color="primary">
              33
            </div>
          </div>
          <input
            className="hdhnFx"
            kind="primary"
            max={100}
            min={0}
            onChange={[Function]}
            step={1}
            type="range"
            value={33} />
        </div>
      </div>
    </div>
    <div>
      <h4
        className="ezDjUV"
        color="black">
        Analog
      </h4>
      <div
        className="jyQfel"
        color="grayBase">
        <small
          className="gPtzLl">
          123125125125125
        </small>
      </div>
      <hr
        className="grCtyw" />
      <div
        className="bMkgFU"
        color="black">
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..." />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange - PWM 1`] = `
<div
  className="cVdXxp">
  <div
    className="fROLJM">
    <a
      href="">
      Link
    </a>
  </div>
  <div
    className="dJSrbi">
    <div
      className="ciDLcE">
      <div
        className="hxnWDy">
        <div
          className="kRwEkq">
          <div
            className="jyQfel"
            color="grayBase">
            0
          </div>
        </div>
        <div
          className="kRwEkq">
          <div
            className="jyQfel"
            color="grayBase">
            100
          </div>
        </div>
      </div>
      <div
        className="glLEWf">
        <div
          className="korPeA">
          <label
            htmlFor="input">
            <p
              className="jyQfel"
              color="grayBase">
              Period
            </p>
          </label>
          <div
            className="fystPB">
            <input
              className="jXdcCC"
              id="input"
              kind="primary"
              placeholder="Integer only"
              type="number" />
            <button
              className="fqCsyW"
              kind="primary">
              OK
            </button>
          </div>
        </div>
        <div
          className="chvbqM"
          color="grayBase">
          Current value: 
          <div
            className="eBMqlM"
            color="primary" />
        </div>
        <input
          className="hdhnFx"
          kind="primary"
          max={100}
          min={0}
          onChange={[Function]}
          step={1}
          type="range"
          value={undefined} />
      </div>
    </div>
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      ControlPWM
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        123125125125125
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange - Stateful PPAP 1`] = `
<div
  className="cVdXxp">
  <div
    className="fROLJM">
    <a
      href="">
      Link
    </a>
  </div>
  <div
    className="dJSrbi">
    <div
      className="ciDLcE">
      <div
        className="hWdvxO">
        <div
          className="kRwEkq">
          <p
            className="jyQfel"
            color="grayBase">
            Apple
          </p>
        </div>
        <div
          className="kRwEkq">
          <p
            className="jyQfel"
            color="grayBase">
            Pen
          </p>
        </div>
        <div
          className="kRwEkq">
          <p
            className="jyQfel"
            color="grayBase">
            Pineapple
          </p>
        </div>
      </div>
      <div
        className="gmgBXP">
        <div
          className="chvbqM"
          color="grayBase">
          Current value: 
          <p
            className="eBMqlM"
            color="primary">
            Pineapple
          </p>
        </div>
        <input
          className="hdhnFx"
          kind="primary"
          max={2}
          min={0}
          onChange={[Function]}
          step={1}
          type="range"
          value={2} />
      </div>
    </div>
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      Stateful PPAP
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        123125125125125
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange - Stateful number 1`] = `
<div
  className="cVdXxp">
  <div
    className="fROLJM">
    <a
      href="">
      Link
    </a>
  </div>
  <div
    className="dJSrbi">
    <div
      className="ciDLcE">
      <div
        className="hxnWDy">
        <div
          className="kRwEkq">
          <div
            className="jyQfel"
            color="grayBase">
            33
          </div>
        </div>
        <div
          className="kRwEkq">
          <div
            className="jyQfel"
            color="grayBase">
            95
          </div>
        </div>
      </div>
      <div
        className="glLEWf">
        <div
          className="chvbqM"
          color="grayBase">
          Current value: 
          <div
            className="eBMqlM"
            color="primary">
            88
          </div>
        </div>
        <input
          className="hdhnFx"
          kind="primary"
          max={95}
          min={33}
          onChange={[Function]}
          step={1}
          type="range"
          value={88} />
      </div>
    </div>
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      Stateful number
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        123125125125125
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel DataChannel.ControlNumber 1`] = `
<div
  className="cVdXxp">
  <div
    className="fROLJM">
    <a
      href="">
      Link
    </a>
  </div>
  <div
    className="dJSrbi">
    <div
      className="kdCvHd">
      <div
        className="dFZeAf"
        color="grayBase">
        單位：
        攝氏
      </div>
      <input
        className="QbwlJ"
        kind="primary"
        onChange={[Function]}
        placeholder="placeholder"
        type="number"
        value={undefined} />
      <div
        className="kGGPNo">
        <div
          className="cqMgnG"
          color="black"
          onClick={[Function]}>
          <a
            className="enrdWE"
            color="primary">
            <svg
              fill="currentColor"
              height="1em"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 40 40"
              width="1em">
              <path
                d="M15.9 16.4v12.9q0 .3-.2.5t-.5.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.3 0 .5.2t.2.5zm5.7 0v12.9q0 .3-.2.5t-.5.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.3 0 .5.2t.2.5zm5.8 0v12.9q0 .3-.2.5t-.6.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.4 0 .6.2t.2.5zm2.8 16.2V11.4h-20v21.2q0 .5.2.9t.3.6.2.2h18.6q.1 0 .2-.2t.4-.6.1-.9zm-15-24h10L24.1 6q-.1-.2-.3-.3h-7.1q-.2.1-.4.3zm20.7.7v1.4q0 .3-.2.5t-.5.2h-2.1v21.2q0 1.8-1.1 3.2t-2.5 1.3H10.9q-1.4 0-2.5-1.3t-1-3.1V11.4H5.2q-.3 0-.5-.2t-.2-.5V9.3q0-.3.2-.5t.5-.2h6.9l1.6-3.8q.3-.8 1.2-1.4t1.7-.5h7.2q.9 0 1.8.5t1.2 1.4l1.5 3.8h6.9q.3 0 .5.2t.2.5z" />
            </svg>
            Clear
          </a>
        </div>
        <button
          className="fqCsyW"
          kind="primary"
          onClick={[Function]}>
          Ok
        </button>
      </div>
    </div>
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      Title
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        123125125125125
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel DataChannel.ControlRange 1`] = `
<div
  className="cVdXxp">
  <div
    className="fROLJM">
    <a
      href="">
      Link
    </a>
  </div>
  <div
    className="dJSrbi">
    <div
      className="ciDLcE">
      <div
        className="hWdvxO">
        <div
          className="kRwEkq">
          <p
            className="jyQfel"
            color="grayBase">
            AAAAAA
          </p>
        </div>
        <div
          className="kRwEkq">
          <p
            className="jyQfel"
            color="grayBase">
            BBBBB
          </p>
        </div>
        <div
          className="kRwEkq">
          <p
            className="jyQfel"
            color="grayBase">
            CCCCC
          </p>
        </div>
        <div
          className="kRwEkq">
          <p
            className="jyQfel"
            color="grayBase">
            DDDDD
          </p>
        </div>
        <div
          className="kRwEkq">
          <p
            className="jyQfel"
            color="grayBase">
            EEEEE
          </p>
        </div>
      </div>
      <div
        className="dLRXKm">
        <div
          className="chvbqM"
          color="grayBase">
          Current value: 
          <div
            className="eBMqlM"
            color="primary" />
        </div>
        <input
          className="hdhnFx"
          kind="primary"
          max={4}
          min={0}
          onChange={[Function]}
          step={1}
          type="range"
          value={undefined} />
      </div>
    </div>
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      Title
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        123125125125125
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel DataChannel.ControlString 1`] = `
<div
  className="cVdXxp">
  <div
    className="fROLJM">
    <a
      href="">
      Link
    </a>
  </div>
  <div
    className="dJSrbi">
    <div
      className="lkjDmd">
      <textarea
        className="XYvdH"
        kind="primary"
        onChange={[Function]}
        placeholder="placeholder"
        value={undefined} />
      <div
        className="cMqWVR">
        <div
          className="cqMgnG"
          color="black"
          onClick={[Function]}>
          <a
            className="enrdWE"
            color="primary">
            <svg
              fill="currentColor"
              height="1em"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 40 40"
              width="1em">
              <path
                d="M15.9 16.4v12.9q0 .3-.2.5t-.5.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.3 0 .5.2t.2.5zm5.7 0v12.9q0 .3-.2.5t-.5.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.3 0 .5.2t.2.5zm5.8 0v12.9q0 .3-.2.5t-.6.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.4 0 .6.2t.2.5zm2.8 16.2V11.4h-20v21.2q0 .5.2.9t.3.6.2.2h18.6q.1 0 .2-.2t.4-.6.1-.9zm-15-24h10L24.1 6q-.1-.2-.3-.3h-7.1q-.2.1-.4.3zm20.7.7v1.4q0 .3-.2.5t-.5.2h-2.1v21.2q0 1.8-1.1 3.2t-2.5 1.3H10.9q-1.4 0-2.5-1.3t-1-3.1V11.4H5.2q-.3 0-.5-.2t-.2-.5V9.3q0-.3.2-.5t.5-.2h6.9l1.6-3.8q.3-.8 1.2-1.4t1.7-.5h7.2q.9 0 1.8.5t1.2 1.4l1.5 3.8h6.9q.3 0 .5.2t.2.5z" />
            </svg>
            Clear
          </a>
        </div>
        <button
          className="fqCsyW"
          kind="primary"
          onClick={[Function]}>
          Ok
        </button>
      </div>
    </div>
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      Title
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        123125125125125
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel DataChannel.ControlSwitch 1`] = `
<div
  className="cVdXxp">
  <div
    className="fROLJM">
    <a
      href="">
      Link
    </a>
  </div>
  <div
    className="dJSrbi">
    <div
      checked={false}
      className="hKkhHI"
      onClick={[Function]} />
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      Title
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        123125125125125
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel Fixed width 1`] = `
<div
  className="jwFuaE cVdXxp">
  <div
    className="fROLJM">
    <a
      href="">
      Link
    </a>
  </div>
  <div
    className="dJSrbi">
    <div
      checked={false}
      className="hKkhHI"
      onSubmit={[Function]} />
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      Title
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        123125125125125
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard API 1`] = `
<div
  className="cVdXxp">
  <div
    className="fROLJM">
    <a
      href="">
      Link
    </a>
  </div>
  <div
    className="dJSrbi">
    Children
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      Title
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        Last data point time : 2015-06-12 12:00
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard Custom width and height 1`] = `
<div
  className="drcatN cVdXxp">
  <div
    className="fROLJM">
    V
  </div>
  <div
    className="dJSrbi">
    <div
      checked={false}
      className="hKkhHI" />
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      Title
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        Last data point time : 2015-06-12 12:00
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots HOC withDataChannelCard 1`] = `
<div
  className="cVdXxp">
  <div
    className="fROLJM" />
  <div
    className="dJSrbi">
    <div>
      CustomDataChannel
    </div>
  </div>
  <div>
    <h4
      className="ezDjUV"
      color="black">
      Title
    </h4>
    <div
      className="jyQfel"
      color="grayBase">
      <small
        className="gPtzLl">
        123125125125125
      </small>
    </div>
    <hr
      className="grCtyw" />
    <div
      className="bMkgFU"
      color="black">
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..." />
    </div>
  </div>
</div>
`;

exports[`Storyshots Heading API 1`] = `
<h1
  className="cRIiEL"
  color="black">
  Level 1
</h1>
`;

exports[`Storyshots Heading With color props 1`] = `
<div>
  <h2
    className="hYsLQk"
    color="black">
    Level 2 
    black
  </h2>
  <h2
    className="hMMWfV"
    color="grayBase">
    Level 2 
    grayBase
  </h2>
  <h2
    className="wysyv"
    color="grayDark">
    Level 2 
    grayDark
  </h2>
  <h2
    className="eDlSGk"
    color="grayLight">
    Level 2 
    grayLight
  </h2>
  <h2
    className="iDodem"
    color="white">
    Level 2 
    white
  </h2>
  <h2
    className="eDlSGk"
    color="default">
    Level 2 
    default
  </h2>
  <h2
    className="ewKygI"
    color="primary">
    Level 2 
    primary
  </h2>
  <h2
    className="jBhbxQ"
    color="success">
    Level 2 
    success
  </h2>
  <h2
    className="iYcHQ"
    color="error">
    Level 2 
    error
  </h2>
  <h2
    className="bGhNdb"
    color="warning">
    Level 2 
    warning
  </h2>
</div>
`;

exports[`Storyshots Heading With level props 1`] = `
<div>
  <h1
    className="cRIiEL"
    color="black">
    h
    1
     - Level 
    1
       (
    2.46rem
     = 
    31.98px
    )
  </h1>
  <h2
    className="hYsLQk"
    color="black">
    h
    2
     - Level 
    2
       (
    1.69rem
     = 
    21.97px
    )
  </h2>
  <h3
    className="lewxKA"
    color="black">
    h
    3
     - Level 
    3
       (
    1.38rem
     = 
    17.939999999999998px
    )
  </h3>
  <h4
    className="ezDjUV"
    color="black">
    h
    4
     - Level 
    4
       (
    1.15rem
     = 
    14.95px
    )
  </h4>
  <h5
    className="iyjEQr"
    color="black">
    h
    5
     - Level 
    5
       (
    1rem
     = 
    13px
    )
  </h5>
  <h6
    className="iyjEQr"
    color="black">
    h
    6
     - Level 
    6
       (
    1rem
     = 
    13px
    )
  </h6>
</div>
`;

exports[`Storyshots Icon [mcs-lite-icon] API 1`] = `
<svg
  fill="currentColor"
  height="1em"
  preserveAspectRatio="xMidYMid meet"
  viewBox="0 0 24 24"
  width="1em">
  <path
    d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" />
</svg>
`;

exports[`Storyshots Icon [mcs-lite-icon] Icon list, Custom color and size 1`] = `
<div
  className="a">
  <h1
    className="cRIiEL"
    color="black">
    MCS Lite Icon
  </h1>
  <h3
    className="ktddqP"
    color="primary">
    $ npm i mcs-lite-icon --save
    <br />
    import { IconName } from \'mcs-lite-icon\';
  </h3>
  <div
    className="elNfmi">
    <div
      className="WFoSn">
      <h1
        className="hVfmdf"
        color="grayBase">
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em">
          <path
            d="M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z" />
        </svg>
      </h1>
      <p
        className="jyQfel"
        color="grayBase">
        <IconEllipsisV />
      </p>
      <div
        className="knOAnV"
        color="primary">
        mcs-lite-icon/lib/
        IconEllipsisV
      </div>
    </div>
    <div
      className="WFoSn">
      <h1
        className="hVfmdf"
        color="grayBase">
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em">
          <path
            d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z" />
        </svg>
      </h1>
      <p
        className="jyQfel"
        color="grayBase">
        <IconFold />
      </p>
      <div
        className="knOAnV"
        color="primary">
        mcs-lite-icon/lib/
        IconFold
      </div>
    </div>
    <div
      className="WFoSn">
      <h1
        className="hVfmdf"
        color="grayBase">
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 40 40"
          width="1em">
          <path
            d="M15.9 16.4v12.9q0 .3-.2.5t-.5.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.3 0 .5.2t.2.5zm5.7 0v12.9q0 .3-.2.5t-.5.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.3 0 .5.2t.2.5zm5.8 0v12.9q0 .3-.2.5t-.6.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.4 0 .6.2t.2.5zm2.8 16.2V11.4h-20v21.2q0 .5.2.9t.3.6.2.2h18.6q.1 0 .2-.2t.4-.6.1-.9zm-15-24h10L24.1 6q-.1-.2-.3-.3h-7.1q-.2.1-.4.3zm20.7.7v1.4q0 .3-.2.5t-.5.2h-2.1v21.2q0 1.8-1.1 3.2t-2.5 1.3H10.9q-1.4 0-2.5-1.3t-1-3.1V11.4H5.2q-.3 0-.5-.2t-.2-.5V9.3q0-.3.2-.5t.5-.2h6.9l1.6-3.8q.3-.8 1.2-1.4t1.7-.5h7.2q.9 0 1.8.5t1.2 1.4l1.5 3.8h6.9q.3 0 .5.2t.2.5z" />
        </svg>
      </h1>
      <p
        className="jyQfel"
        color="grayBase">
        <IconTrashO />
      </p>
      <div
        className="knOAnV"
        color="primary">
        mcs-lite-icon/lib/
        IconTrashO
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Input API 1`] = `
<input
  className="QbwlJ"
  kind="primary"
  placeholder="placeholder" />
`;

exports[`Storyshots Input With kind props 1`] = `
<div
  className="cZlPqe">
  <input
    className="jcKvDH"
    kind="default"
    placeholder="default" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="primary" />
  <input
    className="cQVsYe"
    kind="success"
    placeholder="success" />
  <input
    className="cCmFiG"
    kind="error"
    placeholder="error" />
  <input
    className="ctBKec"
    kind="warning"
    placeholder="warning" />
</div>
`;

exports[`Storyshots Input With type props 1`] = `
<div
  className="cZlPqe">
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="text"
    type="text" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="email"
    type="email" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="number"
    type="number" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="password"
    type="password" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="tel"
    type="tel" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="search"
    type="search" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="month"
    type="month" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="week"
    type="week" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="date"
    type="date" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="color"
    type="color" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="file"
    type="file" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="radio"
    type="radio" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="time"
    type="time" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="url"
    type="url" />
  <input
    className="QbwlJ"
    kind="primary"
    placeholder="range"
    type="range" />
</div>
`;

exports[`Storyshots InputRange API 1`] = `
<input
  className="hdhnFx"
  kind="primary"
  type="range" />
`;

exports[`Storyshots InputRange With kind props 1`] = `
<div
  className="cZlPqe">
  <input
    className="kBSwKq"
    kind="default"
    type="range" />
  <input
    className="hdhnFx"
    kind="primary"
    type="range" />
  <input
    className="jXdUnH"
    kind="success"
    type="range" />
  <input
    className="ilYUjW"
    kind="error"
    type="range" />
  <input
    className="jfqTuL"
    kind="warning"
    type="range" />
</div>
`;

exports[`Storyshots Menu API for Menu 1`] = `
<div
  className="fDiFVt">
  Children
</div>
`;

exports[`Storyshots Menu API for MenuItem 1`] = `
<div
  className="ftUprM">
  MenuItem
</div>
`;

exports[`Storyshots Menu Combination 1`] = `
<div
  className="etymeq">
  <div
    className="ftUprM"
    onClick={[Function]}>
    MenuItem 1
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}>
    MenuItem Content 2
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}>
    <h1
      className="cRIiEL"
      color="black">
      MenuItem Heading 1
    </h1>
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}>
    <p
      className="cqMgnG"
      color="black">
      MenuItem P
    </p>
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}>
    <p
      className="hrGHNS"
      color="error">
      MenuItem P error
    </p>
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}>
    <a
      className="DvAuM"
      color="primary">
      MenuItem A
    </a>
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}>
    <b
      className="dbJQUp">
      MenuItem B
    </b>
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}>
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 40 40"
      width="1em">
      <path
        d="M15.9 16.4v12.9q0 .3-.2.5t-.5.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.3 0 .5.2t.2.5zm5.7 0v12.9q0 .3-.2.5t-.5.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.3 0 .5.2t.2.5zm5.8 0v12.9q0 .3-.2.5t-.6.2h-1.4q-.3 0-.5-.2t-.2-.5V16.4q0-.3.2-.5t.5-.2h1.4q.4 0 .6.2t.2.5zm2.8 16.2V11.4h-20v21.2q0 .5.2.9t.3.6.2.2h18.6q.1 0 .2-.2t.4-.6.1-.9zm-15-24h10L24.1 6q-.1-.2-.3-.3h-7.1q-.2.1-.4.3zm20.7.7v1.4q0 .3-.2.5t-.5.2h-2.1v21.2q0 1.8-1.1 3.2t-2.5 1.3H10.9q-1.4 0-2.5-1.3t-1-3.1V11.4H5.2q-.3 0-.5-.2t-.2-.5V9.3q0-.3.2-.5t.5-.2h6.9l1.6-3.8q.3-.8 1.2-1.4t1.7-.5h7.2q.9 0 1.8.5t1.2 1.4l1.5 3.8h6.9q.3 0 .5.2t.2.5z" />
    </svg>
  </div>
</div>
`;

exports[`Storyshots Overlay API 1`] = `
<div>
  <a
    className="DvAuM"
    color="primary"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}>
    Hover me
  </a>
</div>
`;

exports[`Storyshots Overlay Dropdown Menu 1`] = `
<div
  className="dhGIaz">
  <div>
    <button
      className="fqCsyW"
      kind="primary"
      onClick={[Function]}>
      Button
    </button>
  </div>
  <div>
    <button
      className="fqCsyW"
      kind="primary"
      onClick={[Function]}>
      Button
    </button>
  </div>
  <div>
    <button
      className="fqCsyW"
      kind="primary"
      onClick={[Function]}>
      Button
    </button>
  </div>
</div>
`;

exports[`Storyshots P API 1`] = `
<p
  className="cqMgnG"
  color="black">
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur esse dolore incididunt incididunt aliquip pariatur est minim officia sit. Nulla pariatur duis duis quis commodo cupidatat voluptate enim culpa elit adipisicing do cupidatat sint anim. Cillum elit magna occaecat proident sit cupidatat ad quis sunt id culpa culpa. Ad duis nulla in incididunt amet consequat officia ad voluptate voluptate. Pariatur eiusmod ullamco cupidatat non magna officia aute magna deserunt qui aute dolor eu. Qui amet non ex cillum sunt ad velit consequat ipsum velit.
</p>
`;

exports[`Storyshots P Nested children with div 1`] = `
<div
  className="cqMgnG"
  color="black">
  <div>
    <span>
      Qui amet non ex cillum sunt ad velit consequat ipsum velit.
    </span>
  </div>
</div>
`;

exports[`Storyshots P With color props 1`] = `
<div>
  <div
    className="cqMgnG"
    color="black">
    Paragraph 
    black
  </div>
  <div
    className="jyQfel"
    color="grayBase">
    Paragraph 
    grayBase
  </div>
  <div
    className="iChNxS"
    color="grayDark">
    Paragraph 
    grayDark
  </div>
  <div
    className="kUcDrP"
    color="grayLight">
    Paragraph 
    grayLight
  </div>
  <div
    className="eJSHFJ"
    color="white">
    Paragraph 
    white
  </div>
  <div
    className="kUcDrP"
    color="default">
    Paragraph 
    default
  </div>
  <div
    className="hEzGry"
    color="primary">
    Paragraph 
    primary
  </div>
  <div
    className="ciVPjB"
    color="success">
    Paragraph 
    success
  </div>
  <div
    className="hrGHNS"
    color="error">
    Paragraph 
    error
  </div>
  <div
    className="cWPeCi"
    color="warning">
    Paragraph 
    warning
  </div>
</div>
`;

exports[`Storyshots Small API 1`] = `
<small
  className="gPtzLl">
  Small content
</small>
`;

exports[`Storyshots Small With color 1`] = `
<div
  className="hEzGry"
  color="primary">
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="gPtzLl">
     Small content 
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Small Within <P> 1`] = `
<div
  className="cqMgnG"
  color="black">
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="gPtzLl">
     Small content 
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Switch API 1`] = `
<div>
  <div
    checked={false}
    className="hKkhHI" />
  <div
    checked={true}
    className="gJGPrQ" />
</div>
`;

exports[`Storyshots Switch Overriding style 1`] = `
<div
  checked={false}
  className="mzyXg"
  onClick={[Function]} />
`;

exports[`Storyshots Switch Stateful switch 1`] = `
<div
  checked={false}
  className="hKkhHI"
  onClick={[Function]} />
`;

exports[`Storyshots Textarea API 1`] = `
<textarea
  className="kvtfBS"
  kind="primary"
  placeholder="placeholder"
  rows="3" />
`;

exports[`Storyshots Textarea With kind props 1`] = `
<div
  className="cZlPqe">
  <textarea
    className="iXzziC"
    kind="default"
    placeholder="default" />
  <textarea
    className="kvtfBS"
    kind="primary"
    placeholder="primary" />
  <textarea
    className="irIqNe"
    kind="success"
    placeholder="success" />
  <textarea
    className="tpuwn"
    kind="error"
    placeholder="error" />
  <textarea
    className="dEWaqb"
    kind="warning"
    placeholder="warning" />
</div>
`;
