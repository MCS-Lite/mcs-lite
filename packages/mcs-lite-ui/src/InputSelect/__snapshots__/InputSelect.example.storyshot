// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots InputSelect API 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c4:hover {
  background-color: rgb(0,151,208);
}

.c4:active {
  background-color: rgb(0,144,198);
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  font-size: 18px;
  color: #FFFFFF;
}

.c5 {
  line-height: 0;
}

.c5 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c0 {
  position: relative;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

<div
  style={
    Object {
      "width": 500,
    }
  }
>
  <div>
    <div
      className="c0 c1"
    >
      <input
        className="c2"
        kind="primary"
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        placeholder="or filter by device name"
        readOnly={false}
        value="item name 1"
      />
      <button
        className="c3 c4"
        onClick={[Function]}
      >
        <div
          className="c5"
        >
          <svg
            fill="currentColor"
            height="1em"
            preserveAspectRatio="xMidYMid meet"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
            />
          </svg>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots InputSelect Controlled API 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c4:hover {
  background-color: rgb(0,151,208);
}

.c4:active {
  background-color: rgb(0,144,198);
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  font-size: 18px;
  color: #FFFFFF;
}

.c5 {
  line-height: 0;
}

.c5 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c0 {
  position: relative;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

<div
  style={
    Object {
      "width": 500,
    }
  }
>
  <div>
    <div
      className="c0 c1"
    >
      <input
        className="c2"
        kind="primary"
        onChange={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        placeholder=""
        readOnly={false}
        value="children 11"
      />
      <button
        className="c3 c4"
        onClick={[Function]}
      >
        <div
          className="c5"
        >
          <svg
            fill="currentColor"
            height="1em"
            preserveAspectRatio="xMidYMid meet"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
            />
          </svg>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots InputSelect With 150 items 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c4:hover {
  background-color: rgb(0,151,208);
}

.c4:active {
  background-color: rgb(0,144,198);
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  font-size: 18px;
  color: #FFFFFF;
}

.c5 {
  line-height: 0;
}

.c5 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c0 {
  position: relative;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

<div>
  <div
    className="c0 c1"
  >
    <input
      className="c2"
      kind="primary"
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      placeholder=""
      readOnly={false}
      value="item 71"
    />
    <button
      className="c3 c4"
      onClick={[Function]}
    >
      <div
        className="c5"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
          />
        </svg>
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots InputSelect With autoFocus props 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c4:hover {
  background-color: rgb(0,151,208);
}

.c4:active {
  background-color: rgb(0,144,198);
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  font-size: 18px;
  color: #FFFFFF;
}

.c5 {
  line-height: 0;
}

.c5 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c0 {
  position: relative;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

<div>
  <div
    className="c0 c1"
  >
    <input
      autoFocus={true}
      className="c2"
      kind="primary"
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      placeholder="or filter by device name"
      readOnly={false}
      value=""
    />
    <button
      className="c3 c4"
      onClick={[Function]}
    >
      <div
        className="c5"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
          />
        </svg>
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots InputSelect With disableFilter props 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c4:hover {
  background-color: rgb(0,151,208);
}

.c4:active {
  background-color: rgb(0,144,198);
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  font-size: 18px;
  color: #FFFFFF;
}

.c5 {
  line-height: 0;
}

.c5 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c0 {
  position: relative;
}

.c0 > * {
  cursor: pointer;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

<div>
  <div
    className="c0 c1"
  >
    <input
      className="c2"
      kind="primary"
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      placeholder="or filter by device name"
      readOnly={true}
      value=""
    />
    <button
      className="c3 c4"
      onClick={[Function]}
    >
      <div
        className="c5"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
          />
        </svg>
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots InputSelect With focus props 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: rgb(219,48,70);
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(198,44,63);
}

.c4:hover {
  background-color: rgb(230,51,73);
}

.c4:active {
  background-color: rgb(219,48,70);
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #F5364E;
  box-shadow: 0 0 3px 0 rgba(245,54,78,0.5);
}

.c2:focus {
  border-color: #F5364E;
  box-shadow: 0 0 3px 0 rgba(245,54,78,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  font-size: 18px;
  color: #FFFFFF;
}

.c5 {
  line-height: 0;
}

.c5 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: rotate(-180deg);
  -ms-transform: rotate(-180deg);
  transform: rotate(-180deg);
}

.c0 {
  position: relative;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

<div>
  <div
    className="c0 c1"
  >
    <input
      className="c2"
      kind="error"
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      placeholder="or filter by device name"
      readOnly={false}
      value=""
    />
    <button
      className="c3 c4"
      onClick={[Function]}
    >
      <div
        className="c5"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
          />
        </svg>
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots InputSelect With kind props 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F39A1E;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(196,124,24);
}

.c4:hover {
  background-color: rgb(228,144,28);
}

.c4:active {
  background-color: rgb(217,137,27);
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c2:focus {
  border-color: #F39A1E;
  box-shadow: 0 0 3px 0 rgba(243,154,30,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  font-size: 18px;
  color: #FFFFFF;
}

.c5 {
  line-height: 0;
}

.c5 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c0 {
  position: relative;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

<div>
  <div
    className="c0 c1"
  >
    <input
      className="c2"
      kind="warning"
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      placeholder="or filter by device name"
      readOnly={false}
      value=""
    />
    <button
      className="c3 c4"
      onClick={[Function]}
    >
      <div
        className="c5"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
          />
        </svg>
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots InputSelect With noRowsRenderer props 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c4:hover {
  background-color: rgb(0,151,208);
}

.c4:active {
  background-color: rgb(0,144,198);
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  font-size: 18px;
  color: #FFFFFF;
}

.c5 {
  line-height: 0;
}

.c5 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c0 {
  position: relative;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

<div>
  <div
    className="c0 c1"
  >
    <input
      className="c2"
      kind="primary"
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      placeholder="or filter by device name"
      readOnly={false}
      value=""
    />
    <button
      className="c3 c4"
      onClick={[Function]}
    >
      <div
        className="c5"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
          />
        </svg>
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots InputSelect With state 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c4:hover {
  background-color: rgb(0,151,208);
}

.c4:active {
  background-color: rgb(0,144,198);
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  font-size: 18px;
  color: #FFFFFF;
}

.c5 {
  line-height: 0;
}

.c5 > * {
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c0 {
  position: relative;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

<div>
  <div
    className="c0 c1"
  >
    <input
      className="c2"
      kind="primary"
      onChange={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      placeholder="or filter by device name"
      readOnly={false}
      value=""
    />
    <button
      className="c3 c4"
      onClick={[Function]}
    >
      <div
        className="c5"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
          />
        </svg>
      </div>
    </button>
  </div>
</div>
`;
