// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render FLOAT_DISPLAY correctly with default value to N/A 1`] = `
.c2 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #00A1DE;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c1 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
}

<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {},
      "id": "id",
      "type": "FLOAT_DISPLAY",
      "values": Object {},
    }
  }
  eventHandler={[Function]}
>
  <DisplayUnitValue
    value="N/A"
  >
    <DisplayUnitValue__Container>
      <div
        className="c0"
      >
        <DisplayUnitValue__StyledHeading
          color="primary"
        >
          <Heading
            className="c1"
            color="primary"
            level={1}
          >
            <H
              className="c1 c2"
              color="primary"
              level={1}
            >
              <h1
                className="c1 c2"
                color="primary"
              >
                N/A
              </h1>
            </H>
          </Heading>
        </DisplayUnitValue__StyledHeading>
      </div>
    </DisplayUnitValue__Container>
  </DisplayUnitValue>
</DataChannelAdapter>
`;

exports[`should render FLOAT_DISPLAY correctly with unit 1`] = `
.c3 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
  margin-top: 10px;
}

.c2 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #00A1DE;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c1 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
}

<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {
        "unit": "攝氏",
      },
      "id": "id",
      "type": "FLOAT_DISPLAY",
      "values": Object {
        "value": 1.3,
      },
    }
  }
  eventHandler={[Function]}
>
  <DisplayUnitValue
    unit="攝氏"
    value={1.3}
  >
    <DisplayUnitValue__Container>
      <div
        className="c0"
      >
        <DisplayUnitValue__StyledHeading
          color="primary"
        >
          <Heading
            className="c1"
            color="primary"
            level={1}
          >
            <H
              className="c1 c2"
              color="primary"
              level={1}
            >
              <h1
                className="c1 c2"
                color="primary"
              >
                1.3
              </h1>
            </H>
          </Heading>
        </DisplayUnitValue__StyledHeading>
        <P
          color="grayDark"
        >
          <Component
            className="c3"
            color="grayDark"
          >
            <p
              className="c3"
              color="grayDark"
            >
              攝氏
            </p>
          </Component>
        </P>
      </div>
    </DisplayUnitValue__Container>
  </DisplayUnitValue>
</DataChannelAdapter>
`;

exports[`should render FLOAT_DISPLAY correctly with value 1`] = `
.c2 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #00A1DE;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c1 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
}

<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {},
      "id": "id",
      "type": "FLOAT_DISPLAY",
      "values": Object {
        "value": 1.1,
      },
    }
  }
  eventHandler={[Function]}
>
  <DisplayUnitValue
    value={1.1}
  >
    <DisplayUnitValue__Container>
      <div
        className="c0"
      >
        <DisplayUnitValue__StyledHeading
          color="primary"
        >
          <Heading
            className="c1"
            color="primary"
            level={1}
          >
            <H
              className="c1 c2"
              color="primary"
              level={1}
            >
              <h1
                className="c1 c2"
                color="primary"
              >
                1.1
              </h1>
            </H>
          </Heading>
        </DisplayUnitValue__StyledHeading>
      </div>
    </DisplayUnitValue__Container>
  </DisplayUnitValue>
</DataChannelAdapter>
`;

exports[`should render FLOAT_DISPLAY correctly with zero 1`] = `
.c2 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #00A1DE;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c1 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
}

<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {},
      "id": "id",
      "type": "FLOAT_DISPLAY",
      "values": Object {
        "value": 0,
      },
    }
  }
  eventHandler={[Function]}
>
  <DisplayUnitValue
    value={0}
  >
    <DisplayUnitValue__Container>
      <div
        className="c0"
      >
        <DisplayUnitValue__StyledHeading
          color="primary"
        >
          <Heading
            className="c1"
            color="primary"
            level={1}
          >
            <H
              className="c1 c2"
              color="primary"
              level={1}
            >
              <h1
                className="c1 c2"
                color="primary"
              >
                0
              </h1>
            </H>
          </Heading>
        </DisplayUnitValue__StyledHeading>
      </div>
    </DisplayUnitValue__Container>
  </DisplayUnitValue>
</DataChannelAdapter>
`;
