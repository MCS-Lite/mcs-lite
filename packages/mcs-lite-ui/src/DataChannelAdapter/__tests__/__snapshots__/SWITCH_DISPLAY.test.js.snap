// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render SWITCH_DISPLAY correctly with default value to false 1`] = `
.c2 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c3 {
  width: 12px;
}

.c3 > * {
  fill: #69BE28;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c4 {
  width: 12px;
}

.c4 > * {
  fill: #D1D2D3;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  margin: 0 4px;
  overflow: hidden;
}

.c1 > *:first-child {
  margin-bottom: 20px;
}

<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {},
      "id": "id",
      "type": "SWITCH_DISPLAY",
      "values": Object {},
    }
  }
  eventHandler={[Function]}
>
  <DisplayStatus
    labels={
      Array [
        "OFF",
        "ON",
      ]
    }
    value={0}
  >
    <DisplayStatus__Container>
      <div
        className="c0"
      >
        <DisplayStatus__ItemWrapper
          key="OFF"
        >
          <div
            className="c1"
          >
            <P
              color="grayDark"
            >
              <Component
                className="c2"
                color="grayDark"
              >
                <p
                  className="c2"
                  color="grayDark"
                >
                  OFF
                </p>
              </Component>
            </P>
            <div>
              <StatusLight
                color="success"
              >
                <StatusLight__Svg
                  color="success"
                  viewBox="0 0 20 20"
                >
                  <svg
                    className="c3"
                    color="success"
                    viewBox="0 0 20 20"
                  >
                    <circle
                      cx="10"
                      cy="10"
                      r="10"
                    />
                  </svg>
                </StatusLight__Svg>
              </StatusLight>
            </div>
          </div>
        </DisplayStatus__ItemWrapper>
        <DisplayStatus__ItemWrapper
          key="ON"
        >
          <div
            className="c1"
          >
            <P
              color="grayDark"
            >
              <Component
                className="c2"
                color="grayDark"
              >
                <p
                  className="c2"
                  color="grayDark"
                >
                  ON
                </p>
              </Component>
            </P>
            <div>
              <StatusLight
                color="grayBase"
              >
                <StatusLight__Svg
                  color="grayBase"
                  viewBox="0 0 20 20"
                >
                  <svg
                    className="c4"
                    color="grayBase"
                    viewBox="0 0 20 20"
                  >
                    <circle
                      cx="10"
                      cy="10"
                      r="10"
                    />
                  </svg>
                </StatusLight__Svg>
              </StatusLight>
            </div>
          </div>
        </DisplayStatus__ItemWrapper>
      </div>
    </DisplayStatus__Container>
  </DisplayStatus>
</DataChannelAdapter>
`;

exports[`should render SWITCH_DISPLAY correctly with false value 1`] = `
.c2 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c3 {
  width: 12px;
}

.c3 > * {
  fill: #69BE28;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c4 {
  width: 12px;
}

.c4 > * {
  fill: #D1D2D3;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  margin: 0 4px;
  overflow: hidden;
}

.c1 > *:first-child {
  margin-bottom: 20px;
}

<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {},
      "id": "id",
      "type": "SWITCH_DISPLAY",
      "values": Object {
        "value": 0,
      },
    }
  }
  eventHandler={[Function]}
>
  <DisplayStatus
    labels={
      Array [
        "OFF",
        "ON",
      ]
    }
    value={0}
  >
    <DisplayStatus__Container>
      <div
        className="c0"
      >
        <DisplayStatus__ItemWrapper
          key="OFF"
        >
          <div
            className="c1"
          >
            <P
              color="grayDark"
            >
              <Component
                className="c2"
                color="grayDark"
              >
                <p
                  className="c2"
                  color="grayDark"
                >
                  OFF
                </p>
              </Component>
            </P>
            <div>
              <StatusLight
                color="success"
              >
                <StatusLight__Svg
                  color="success"
                  viewBox="0 0 20 20"
                >
                  <svg
                    className="c3"
                    color="success"
                    viewBox="0 0 20 20"
                  >
                    <circle
                      cx="10"
                      cy="10"
                      r="10"
                    />
                  </svg>
                </StatusLight__Svg>
              </StatusLight>
            </div>
          </div>
        </DisplayStatus__ItemWrapper>
        <DisplayStatus__ItemWrapper
          key="ON"
        >
          <div
            className="c1"
          >
            <P
              color="grayDark"
            >
              <Component
                className="c2"
                color="grayDark"
              >
                <p
                  className="c2"
                  color="grayDark"
                >
                  ON
                </p>
              </Component>
            </P>
            <div>
              <StatusLight
                color="grayBase"
              >
                <StatusLight__Svg
                  color="grayBase"
                  viewBox="0 0 20 20"
                >
                  <svg
                    className="c4"
                    color="grayBase"
                    viewBox="0 0 20 20"
                  >
                    <circle
                      cx="10"
                      cy="10"
                      r="10"
                    />
                  </svg>
                </StatusLight__Svg>
              </StatusLight>
            </div>
          </div>
        </DisplayStatus__ItemWrapper>
      </div>
    </DisplayStatus__Container>
  </DisplayStatus>
</DataChannelAdapter>
`;

exports[`should render SWITCH_DISPLAY correctly with true value 1`] = `
.c2 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c4 {
  width: 12px;
}

.c4 > * {
  fill: #69BE28;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c3 {
  width: 12px;
}

.c3 > * {
  fill: #D1D2D3;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  margin: 0 4px;
  overflow: hidden;
}

.c1 > *:first-child {
  margin-bottom: 20px;
}

<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {},
      "id": "id",
      "type": "SWITCH_DISPLAY",
      "values": Object {
        "value": 1,
      },
    }
  }
  eventHandler={[Function]}
>
  <DisplayStatus
    labels={
      Array [
        "OFF",
        "ON",
      ]
    }
    value={1}
  >
    <DisplayStatus__Container>
      <div
        className="c0"
      >
        <DisplayStatus__ItemWrapper
          key="OFF"
        >
          <div
            className="c1"
          >
            <P
              color="grayDark"
            >
              <Component
                className="c2"
                color="grayDark"
              >
                <p
                  className="c2"
                  color="grayDark"
                >
                  OFF
                </p>
              </Component>
            </P>
            <div>
              <StatusLight
                color="grayBase"
              >
                <StatusLight__Svg
                  color="grayBase"
                  viewBox="0 0 20 20"
                >
                  <svg
                    className="c3"
                    color="grayBase"
                    viewBox="0 0 20 20"
                  >
                    <circle
                      cx="10"
                      cy="10"
                      r="10"
                    />
                  </svg>
                </StatusLight__Svg>
              </StatusLight>
            </div>
          </div>
        </DisplayStatus__ItemWrapper>
        <DisplayStatus__ItemWrapper
          key="ON"
        >
          <div
            className="c1"
          >
            <P
              color="grayDark"
            >
              <Component
                className="c2"
                color="grayDark"
              >
                <p
                  className="c2"
                  color="grayDark"
                >
                  ON
                </p>
              </Component>
            </P>
            <div>
              <StatusLight
                color="success"
              >
                <StatusLight__Svg
                  color="success"
                  viewBox="0 0 20 20"
                >
                  <svg
                    className="c4"
                    color="success"
                    viewBox="0 0 20 20"
                  >
                    <circle
                      cx="10"
                      cy="10"
                      r="10"
                    />
                  </svg>
                </StatusLight__Svg>
              </StatusLight>
            </div>
          </div>
        </DisplayStatus__ItemWrapper>
      </div>
    </DisplayStatus__Container>
  </DisplayStatus>
</DataChannelAdapter>
`;
