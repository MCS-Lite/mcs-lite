// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render PWM_DISPLAY correctly with default value to N/A 1`] = `
.c1 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c3 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #00A1DE;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c0 > div {
  width: 100%;
}

.c0 > div + div {
  margin-top: 10px;
}

.c2 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
  margin-top: 5px;
}

<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {},
      "id": "id",
      "type": "PWM_DISPLAY",
      "values": Object {},
    }
  }
  eventHandler={[Function]}
>
  <DisplayMultipleValue
    items={
      Array [
        Object {
          "name": "Value",
          "value": "N/A",
        },
        Object {
          "name": "Period",
          "value": "N/A",
        },
      ]
    }
  >
    <DisplayMultipleValue__Container>
      <div
        className="c0"
      >
        <div
          key="Value"
        >
          <P
            color="grayBase"
          >
            <Component
              className="c1"
              color="grayBase"
            >
              <p
                className="c1"
                color="grayBase"
              >
                Value
              </p>
            </Component>
          </P>
          <DisplayMultipleValue__StyledHeading
            color="primary"
          >
            <Heading
              className="c2"
              color="primary"
              level={1}
            >
              <H
                className="c2 c3"
                color="primary"
                level={1}
              >
                <h1
                  className="c2 c3"
                  color="primary"
                >
                  N/A
                </h1>
              </H>
            </Heading>
          </DisplayMultipleValue__StyledHeading>
        </div>
        <div
          key="Period"
        >
          <P
            color="grayBase"
          >
            <Component
              className="c1"
              color="grayBase"
            >
              <p
                className="c1"
                color="grayBase"
              >
                Period
              </p>
            </Component>
          </P>
          <DisplayMultipleValue__StyledHeading
            color="primary"
          >
            <Heading
              className="c2"
              color="primary"
              level={1}
            >
              <H
                className="c2 c3"
                color="primary"
                level={1}
              >
                <h1
                  className="c2 c3"
                  color="primary"
                >
                  N/A
                </h1>
              </H>
            </Heading>
          </DisplayMultipleValue__StyledHeading>
        </div>
      </div>
    </DisplayMultipleValue__Container>
  </DisplayMultipleValue>
</DataChannelAdapter>
`;

exports[`should render PWM_DISPLAY correctly with max 1`] = `
.c1 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c3 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #00A1DE;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c0 > div {
  width: 100%;
}

.c0 > div + div {
  margin-top: 10px;
}

.c2 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
  margin-top: 5px;
}

<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {},
      "id": "id",
      "type": "PWM_DISPLAY",
      "values": Object {
        "period": 1,
        "value": 100,
      },
    }
  }
  eventHandler={[Function]}
>
  <DisplayMultipleValue
    items={
      Array [
        Object {
          "name": "Value",
          "value": 100,
        },
        Object {
          "name": "Period",
          "value": 1,
        },
      ]
    }
  >
    <DisplayMultipleValue__Container>
      <div
        className="c0"
      >
        <div
          key="Value"
        >
          <P
            color="grayBase"
          >
            <Component
              className="c1"
              color="grayBase"
            >
              <p
                className="c1"
                color="grayBase"
              >
                Value
              </p>
            </Component>
          </P>
          <DisplayMultipleValue__StyledHeading
            color="primary"
          >
            <Heading
              className="c2"
              color="primary"
              level={1}
            >
              <H
                className="c2 c3"
                color="primary"
                level={1}
              >
                <h1
                  className="c2 c3"
                  color="primary"
                >
                  100
                </h1>
              </H>
            </Heading>
          </DisplayMultipleValue__StyledHeading>
        </div>
        <div
          key="Period"
        >
          <P
            color="grayBase"
          >
            <Component
              className="c1"
              color="grayBase"
            >
              <p
                className="c1"
                color="grayBase"
              >
                Period
              </p>
            </Component>
          </P>
          <DisplayMultipleValue__StyledHeading
            color="primary"
          >
            <Heading
              className="c2"
              color="primary"
              level={1}
            >
              <H
                className="c2 c3"
                color="primary"
                level={1}
              >
                <h1
                  className="c2 c3"
                  color="primary"
                >
                  1
                </h1>
              </H>
            </Heading>
          </DisplayMultipleValue__StyledHeading>
        </div>
      </div>
    </DisplayMultipleValue__Container>
  </DisplayMultipleValue>
</DataChannelAdapter>
`;

exports[`should render PWM_DISPLAY correctly with zero 1`] = `
.c1 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c3 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #00A1DE;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c0 > div {
  width: 100%;
}

.c0 > div + div {
  margin-top: 10px;
}

.c2 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
  margin-top: 5px;
}

<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {},
      "id": "id",
      "type": "PWM_DISPLAY",
      "values": Object {
        "period": 0,
        "value": 0,
      },
    }
  }
  eventHandler={[Function]}
>
  <DisplayMultipleValue
    items={
      Array [
        Object {
          "name": "Value",
          "value": 0,
        },
        Object {
          "name": "Period",
          "value": 0,
        },
      ]
    }
  >
    <DisplayMultipleValue__Container>
      <div
        className="c0"
      >
        <div
          key="Value"
        >
          <P
            color="grayBase"
          >
            <Component
              className="c1"
              color="grayBase"
            >
              <p
                className="c1"
                color="grayBase"
              >
                Value
              </p>
            </Component>
          </P>
          <DisplayMultipleValue__StyledHeading
            color="primary"
          >
            <Heading
              className="c2"
              color="primary"
              level={1}
            >
              <H
                className="c2 c3"
                color="primary"
                level={1}
              >
                <h1
                  className="c2 c3"
                  color="primary"
                >
                  0
                </h1>
              </H>
            </Heading>
          </DisplayMultipleValue__StyledHeading>
        </div>
        <div
          key="Period"
        >
          <P
            color="grayBase"
          >
            <Component
              className="c1"
              color="grayBase"
            >
              <p
                className="c1"
                color="grayBase"
              >
                Period
              </p>
            </Component>
          </P>
          <DisplayMultipleValue__StyledHeading
            color="primary"
          >
            <Heading
              className="c2"
              color="primary"
              level={1}
            >
              <H
                className="c2 c3"
                color="primary"
                level={1}
              >
                <h1
                  className="c2 c3"
                  color="primary"
                >
                  0
                </h1>
              </H>
            </Heading>
          </DisplayMultipleValue__StyledHeading>
        </div>
      </div>
    </DisplayMultipleValue__Container>
  </DisplayMultipleValue>
</DataChannelAdapter>
`;
