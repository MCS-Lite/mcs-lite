// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ANALOG_CONTROL correctly with default value to N/A 1`] = `
<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {
        "lowerbound": 0,
        "upperbound": 100,
      },
      "id": "id",
      "type": "ANALOG_CONTROL",
      "values": Object {},
    }
  }
  eventHandler={[Function]}
>
  <ControlRange
    labels={
      Array [
        0,
        100,
      ]
    }
    onChange={[Function]}
    onSubmit={[Function]}
    value=""
    valueMapper={[Function]}
  >
    <ControlRange__Container>
      <div
        className="ControlRange__Container-ispxkc kkVGKq"
      >
        <ControlRange__LabelWrapper
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="ControlRange__LabelWrapper-hpKjGx kKFCvQ"
          >
            <ControlRange__LabelItem>
              <div
                className="ControlRange__LabelItem-kiIalK idIiax"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="P__P-KJbCR kHKeHO"
                    color="grayBase"
                  >
                    <div
                      className="P__P-KJbCR kHKeHO"
                      color="grayBase"
                    >
                      0
                    </div>
                  </Component>
                </P>
              </div>
            </ControlRange__LabelItem>
            <ControlRange__LabelItem>
              <div
                className="ControlRange__LabelItem-kiIalK idIiax"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="P__P-KJbCR kHKeHO"
                    color="grayBase"
                  >
                    <div
                      className="P__P-KJbCR kHKeHO"
                      color="grayBase"
                    >
                      100
                    </div>
                  </Component>
                </P>
              </div>
            </ControlRange__LabelItem>
          </div>
        </ControlRange__LabelWrapper>
        <ControlRange__InputWrapper
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="ControlRange__InputWrapper-fklkwO dVxsgp"
          >
            <ControlRange__ValueWrapper
              color="grayBase"
            >
              <P
                className="ControlRange__ValueWrapper-jxMKxr lkxWna"
                color="grayBase"
              >
                <Component
                  className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
                  color="grayBase"
                >
                  <div
                    className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
                    color="grayBase"
                  >
                    Current value: 
                    <ControlRange__Value
                      color="primary"
                    >
                      <P
                        className="ControlRange__Value-kXycxr cJYxpn"
                        color="primary"
                      >
                        <Component
                          className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
                          color="primary"
                        >
                          <p
                            className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
                            color="primary"
                          >
                            N/A
                          </p>
                        </Component>
                      </P>
                    </ControlRange__Value>
                  </div>
                </Component>
              </P>
            </ControlRange__ValueWrapper>
            <InputRange
              kind="primary"
              max={100}
              min={0}
              onChange={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              step={1}
              type="range"
              value=""
            >
              <input
                className="InputRange__InputRange-uGAsR iOVoet"
                kind="primary"
                max={100}
                min={0}
                onChange={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                step={1}
                type="range"
                value=""
              />
            </InputRange>
          </div>
        </ControlRange__InputWrapper>
      </div>
    </ControlRange__Container>
  </ControlRange>
</DataChannelAdapter>
`;

exports[`should render ANALOG_CONTROL correctly with max 1`] = `
<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {
        "lowerbound": 0,
        "upperbound": 100,
      },
      "id": "id",
      "type": "ANALOG_CONTROL",
      "values": Object {
        "value": 100,
      },
    }
  }
  eventHandler={[Function]}
>
  <ControlRange
    labels={
      Array [
        0,
        100,
      ]
    }
    onChange={[Function]}
    onSubmit={[Function]}
    value={100}
    valueMapper={[Function]}
  >
    <ControlRange__Container>
      <div
        className="ControlRange__Container-ispxkc kkVGKq"
      >
        <ControlRange__LabelWrapper
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="ControlRange__LabelWrapper-hpKjGx kKFCvQ"
          >
            <ControlRange__LabelItem>
              <div
                className="ControlRange__LabelItem-kiIalK idIiax"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="P__P-KJbCR kHKeHO"
                    color="grayBase"
                  >
                    <div
                      className="P__P-KJbCR kHKeHO"
                      color="grayBase"
                    >
                      0
                    </div>
                  </Component>
                </P>
              </div>
            </ControlRange__LabelItem>
            <ControlRange__LabelItem>
              <div
                className="ControlRange__LabelItem-kiIalK idIiax"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="P__P-KJbCR kHKeHO"
                    color="grayBase"
                  >
                    <div
                      className="P__P-KJbCR kHKeHO"
                      color="grayBase"
                    >
                      100
                    </div>
                  </Component>
                </P>
              </div>
            </ControlRange__LabelItem>
          </div>
        </ControlRange__LabelWrapper>
        <ControlRange__InputWrapper
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="ControlRange__InputWrapper-fklkwO dVxsgp"
          >
            <ControlRange__ValueWrapper
              color="grayBase"
            >
              <P
                className="ControlRange__ValueWrapper-jxMKxr lkxWna"
                color="grayBase"
              >
                <Component
                  className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
                  color="grayBase"
                >
                  <div
                    className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
                    color="grayBase"
                  >
                    Current value: 
                    <ControlRange__Value
                      color="primary"
                    >
                      <P
                        className="ControlRange__Value-kXycxr cJYxpn"
                        color="primary"
                      >
                        <Component
                          className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
                          color="primary"
                        >
                          <div
                            className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
                            color="primary"
                          >
                            100
                          </div>
                        </Component>
                      </P>
                    </ControlRange__Value>
                  </div>
                </Component>
              </P>
            </ControlRange__ValueWrapper>
            <InputRange
              kind="primary"
              max={100}
              min={0}
              onChange={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              step={1}
              type="range"
              value={100}
            >
              <input
                className="InputRange__InputRange-uGAsR iOVoet"
                kind="primary"
                max={100}
                min={0}
                onChange={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                step={1}
                type="range"
                value={100}
              />
            </InputRange>
          </div>
        </ControlRange__InputWrapper>
      </div>
    </ControlRange__Container>
  </ControlRange>
</DataChannelAdapter>
`;

exports[`should render ANALOG_CONTROL correctly with zero 1`] = `
<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {
        "lowerbound": 0,
        "upperbound": 100,
      },
      "id": "id",
      "type": "ANALOG_CONTROL",
      "values": Object {
        "value": 0,
      },
    }
  }
  eventHandler={[Function]}
>
  <ControlRange
    labels={
      Array [
        0,
        100,
      ]
    }
    onChange={[Function]}
    onSubmit={[Function]}
    value={0}
    valueMapper={[Function]}
  >
    <ControlRange__Container>
      <div
        className="ControlRange__Container-ispxkc kkVGKq"
      >
        <ControlRange__LabelWrapper
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="ControlRange__LabelWrapper-hpKjGx kKFCvQ"
          >
            <ControlRange__LabelItem>
              <div
                className="ControlRange__LabelItem-kiIalK idIiax"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="P__P-KJbCR kHKeHO"
                    color="grayBase"
                  >
                    <div
                      className="P__P-KJbCR kHKeHO"
                      color="grayBase"
                    >
                      0
                    </div>
                  </Component>
                </P>
              </div>
            </ControlRange__LabelItem>
            <ControlRange__LabelItem>
              <div
                className="ControlRange__LabelItem-kiIalK idIiax"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="P__P-KJbCR kHKeHO"
                    color="grayBase"
                  >
                    <div
                      className="P__P-KJbCR kHKeHO"
                      color="grayBase"
                    >
                      100
                    </div>
                  </Component>
                </P>
              </div>
            </ControlRange__LabelItem>
          </div>
        </ControlRange__LabelWrapper>
        <ControlRange__InputWrapper
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="ControlRange__InputWrapper-fklkwO dVxsgp"
          >
            <ControlRange__ValueWrapper
              color="grayBase"
            >
              <P
                className="ControlRange__ValueWrapper-jxMKxr lkxWna"
                color="grayBase"
              >
                <Component
                  className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
                  color="grayBase"
                >
                  <div
                    className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
                    color="grayBase"
                  >
                    Current value: 
                    <ControlRange__Value
                      color="primary"
                    >
                      <P
                        className="ControlRange__Value-kXycxr cJYxpn"
                        color="primary"
                      >
                        <Component
                          className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
                          color="primary"
                        >
                          <div
                            className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
                            color="primary"
                          >
                            0
                          </div>
                        </Component>
                      </P>
                    </ControlRange__Value>
                  </div>
                </Component>
              </P>
            </ControlRange__ValueWrapper>
            <InputRange
              kind="primary"
              max={100}
              min={0}
              onChange={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              step={1}
              type="range"
              value={0}
            >
              <input
                className="InputRange__InputRange-uGAsR iOVoet"
                kind="primary"
                max={100}
                min={0}
                onChange={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                step={1}
                type="range"
                value={0}
              />
            </InputRange>
          </div>
        </ControlRange__InputWrapper>
      </div>
    </ControlRange__Container>
  </ControlRange>
</DataChannelAdapter>
`;
