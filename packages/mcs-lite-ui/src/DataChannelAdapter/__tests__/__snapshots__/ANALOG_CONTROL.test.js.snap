// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ANALOG_CONTROL correctly with default value to N/A 1`] = `
<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {
        "lowerbound": 0,
        "upperbound": 100,
      },
      "id": "id",
      "type": "ANALOG_CONTROL",
      "values": Object {},
    }
  }
  eventHandler={[Function]}
>
  <ControlRange
    labels={
      Array [
        0,
        100,
      ]
    }
    onChange={[Function]}
    onSubmit={[Function]}
    value=""
    valueMapper={[Function]}
  >
    <styled.div>
      <div
        className="ciDLcE"
      >
        <styled.div
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="hxnWDy"
          >
            <styled.div>
              <div
                className="kRwEkq"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="jyQfel"
                    color="grayBase"
                  >
                    <div
                      className="jyQfel"
                      color="grayBase"
                    >
                      0
                    </div>
                  </Component>
                </P>
              </div>
            </styled.div>
            <styled.div>
              <div
                className="kRwEkq"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="jyQfel"
                    color="grayBase"
                  >
                    <div
                      className="jyQfel"
                      color="grayBase"
                    >
                      100
                    </div>
                  </Component>
                </P>
              </div>
            </styled.div>
          </div>
        </styled.div>
        <styled.div
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="glLEWf"
          >
            <Styled(Component)
              color="grayBase"
            >
              <Component
                className="chvbqM"
                color="grayBase"
              >
                <div
                  className="chvbqM"
                  color="grayBase"
                >
                  Current value: 
                  <Styled(Component)
                    color="primary"
                  >
                    <Component
                      className="eBMqlM"
                      color="primary"
                    >
                      <p
                        className="eBMqlM"
                        color="primary"
                      >
                        N/A
                      </p>
                    </Component>
                  </Styled(Component)>
                </div>
              </Component>
            </Styled(Component)>
            <InputRange
              kind="primary"
              max={100}
              min={0}
              onChange={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              step={1}
              type="range"
              value=""
            >
              <input
                className="hdhnFx"
                kind="primary"
                max={100}
                min={0}
                onChange={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                step={1}
                type="range"
                value=""
              />
            </InputRange>
          </div>
        </styled.div>
      </div>
    </styled.div>
  </ControlRange>
</DataChannelAdapter>
`;

exports[`should render ANALOG_CONTROL correctly with max 1`] = `
<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {
        "lowerbound": 0,
        "upperbound": 100,
      },
      "id": "id",
      "type": "ANALOG_CONTROL",
      "values": Object {
        "value": 100,
      },
    }
  }
  eventHandler={[Function]}
>
  <ControlRange
    labels={
      Array [
        0,
        100,
      ]
    }
    onChange={[Function]}
    onSubmit={[Function]}
    value={100}
    valueMapper={[Function]}
  >
    <styled.div>
      <div
        className="ciDLcE"
      >
        <styled.div
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="hxnWDy"
          >
            <styled.div>
              <div
                className="kRwEkq"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="jyQfel"
                    color="grayBase"
                  >
                    <div
                      className="jyQfel"
                      color="grayBase"
                    >
                      0
                    </div>
                  </Component>
                </P>
              </div>
            </styled.div>
            <styled.div>
              <div
                className="kRwEkq"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="jyQfel"
                    color="grayBase"
                  >
                    <div
                      className="jyQfel"
                      color="grayBase"
                    >
                      100
                    </div>
                  </Component>
                </P>
              </div>
            </styled.div>
          </div>
        </styled.div>
        <styled.div
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="glLEWf"
          >
            <Styled(Component)
              color="grayBase"
            >
              <Component
                className="chvbqM"
                color="grayBase"
              >
                <div
                  className="chvbqM"
                  color="grayBase"
                >
                  Current value: 
                  <Styled(Component)
                    color="primary"
                  >
                    <Component
                      className="eBMqlM"
                      color="primary"
                    >
                      <div
                        className="eBMqlM"
                        color="primary"
                      >
                        100
                      </div>
                    </Component>
                  </Styled(Component)>
                </div>
              </Component>
            </Styled(Component)>
            <InputRange
              kind="primary"
              max={100}
              min={0}
              onChange={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              step={1}
              type="range"
              value={100}
            >
              <input
                className="hdhnFx"
                kind="primary"
                max={100}
                min={0}
                onChange={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                step={1}
                type="range"
                value={100}
              />
            </InputRange>
          </div>
        </styled.div>
      </div>
    </styled.div>
  </ControlRange>
</DataChannelAdapter>
`;

exports[`should render ANALOG_CONTROL correctly with zero 1`] = `
<DataChannelAdapter
  dataChannelProps={
    Object {
      "format": Object {
        "lowerbound": 0,
        "upperbound": 100,
      },
      "id": "id",
      "type": "ANALOG_CONTROL",
      "values": Object {
        "value": 0,
      },
    }
  }
  eventHandler={[Function]}
>
  <ControlRange
    labels={
      Array [
        0,
        100,
      ]
    }
    onChange={[Function]}
    onSubmit={[Function]}
    value={0}
    valueMapper={[Function]}
  >
    <styled.div>
      <div
        className="ciDLcE"
      >
        <styled.div
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="hxnWDy"
          >
            <styled.div>
              <div
                className="kRwEkq"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="jyQfel"
                    color="grayBase"
                  >
                    <div
                      className="jyQfel"
                      color="grayBase"
                    >
                      0
                    </div>
                  </Component>
                </P>
              </div>
            </styled.div>
            <styled.div>
              <div
                className="kRwEkq"
              >
                <P
                  color="grayBase"
                >
                  <Component
                    className="jyQfel"
                    color="grayBase"
                  >
                    <div
                      className="jyQfel"
                      color="grayBase"
                    >
                      100
                    </div>
                  </Component>
                </P>
              </div>
            </styled.div>
          </div>
        </styled.div>
        <styled.div
          labels={
            Array [
              0,
              100,
            ]
          }
        >
          <div
            className="glLEWf"
          >
            <Styled(Component)
              color="grayBase"
            >
              <Component
                className="chvbqM"
                color="grayBase"
              >
                <div
                  className="chvbqM"
                  color="grayBase"
                >
                  Current value: 
                  <Styled(Component)
                    color="primary"
                  >
                    <Component
                      className="eBMqlM"
                      color="primary"
                    >
                      <div
                        className="eBMqlM"
                        color="primary"
                      >
                        0
                      </div>
                    </Component>
                  </Styled(Component)>
                </div>
              </Component>
            </Styled(Component)>
            <InputRange
              kind="primary"
              max={100}
              min={0}
              onChange={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              step={1}
              type="range"
              value={0}
            >
              <input
                className="hdhnFx"
                kind="primary"
                max={100}
                min={0}
                onChange={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                step={1}
                type="range"
                value={0}
              />
            </InputRange>
          </div>
        </styled.div>
      </div>
    </styled.div>
  </ControlRange>
</DataChannelAdapter>
`;
