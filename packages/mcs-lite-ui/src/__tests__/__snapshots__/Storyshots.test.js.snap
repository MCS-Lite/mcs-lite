// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots A API 1`] = `
.c0 {
  color: #00A1DE;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c0:hover {
  color: rgb(0,151,208);
}

.c0:active {
  color: rgb(0,144,198);
}

<a
  className="c0"
  color="primary"
>
  Link
</a>
`;

exports[`Storyshots A Nested children with Heading 1`] = `
.c0 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: currentColor;
}

.c1 {
  font-weight: bold;
}

.c2 {
  color: #00A1DE;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c2:hover {
  color: rgb(0,151,208);
}

.c2:active {
  color: rgb(0,144,198);
}

<h1
  className="c0"
>
  Heading Level 1 
  <b
    className="c1"
  >
    <a
      className="c2"
      color="primary"
    >
      Link
    </a>
  </b>
</h1>
`;

exports[`Storyshots A With color props 1`] = `
.c5 {
  color: #00A1DE;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c5:hover {
  color: rgb(0,151,208);
}

.c5:active {
  color: rgb(0,144,198);
}

.c0 {
  color: #353630;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c0:hover {
  color: rgb(50,51,45);
}

.c0:active {
  color: rgb(47,48,43);
}

.c1 {
  color: #999A94;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c1:hover {
  color: rgb(143,144,139);
}

.c1:active {
  color: rgb(136,137,132);
}

.c2 {
  color: #D1D2D3;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c2:hover {
  color: rgb(196,197,198);
}

.c2:active {
  color: rgb(186,187,188);
}

.c3 {
  color: #FAFAFA;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c3:hover {
  color: rgb(234,234,234);
}

.c3:active {
  color: rgb(223,223,223);
}

.c4 {
  color: #FFFFFF;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c4:hover {
  color: rgb(239,239,239);
}

.c4:active {
  color: rgb(227,227,227);
}

.c6 {
  color: #69BE28;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c6:hover {
  color: rgb(98,178,38);
}

.c6:active {
  color: rgb(94,170,36);
}

.c7 {
  color: #F5364E;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c7:hover {
  color: rgb(230,51,73);
}

.c7:active {
  color: rgb(219,48,70);
}

.c8 {
  color: #F39A1E;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c8:hover {
  color: rgb(228,144,28);
}

.c8:active {
  color: rgb(217,137,27);
}

<div>
  <a
    className="c0"
    color="black"
  >
    A link 
    black
  </a>
  <a
    className="c1"
    color="grayBase"
  >
    A link 
    grayBase
  </a>
  <a
    className="c2"
    color="grayDark"
  >
    A link 
    grayDark
  </a>
  <a
    className="c3"
    color="grayLight"
  >
    A link 
    grayLight
  </a>
  <a
    className="c4"
    color="white"
  >
    A link 
    white
  </a>
  <a
    className="c3"
    color="default"
  >
    A link 
    default
  </a>
  <a
    className="c5"
    color="primary"
  >
    A link 
    primary
  </a>
  <a
    className="c6"
    color="success"
  >
    A link 
    success
  </a>
  <a
    className="c7"
    color="error"
  >
    A link 
    error
  </a>
  <a
    className="c8"
    color="warning"
  >
    A link 
    warning
  </a>
</div>
`;

exports[`Storyshots API [mcs-lite-theme] [JSON] kind 1`] = `
<div>
  <pre>
    [
      "default",
      "primary",
      "success",
      "error",
      "warning"
    ]
  </pre>
</div>
`;

exports[`Storyshots API [mcs-lite-theme] [JSON] theme 1`] = `
<div>
  <pre>
    {
      "color": {
        "black": "#353630",
        "grayBase": "#999A94",
        "grayDark": "#D1D2D3",
        "grayLight": "#FAFAFA",
        "white": "#FFFFFF",
        "default": "#FAFAFA",
        "primary": "#00A1DE",
        "success": "#69BE28",
        "error": "#F5364E",
        "warning": "#F39A1E"
      },
      "base": {
        "bodyBackgroundColor": "#F1F2F7",
        "bodyColor": "#353630",
        "fontSize": "13px",
        "lineHeight": 1.5
      },
      "fontSize": {
        "small": "0.923rem",
        "p": "1rem",
        "h6": "1rem",
        "h5": "1rem",
        "h4": "1.15rem",
        "h3": "1.38rem",
        "h2": "1.69rem",
        "h1": "2.46rem"
      },
      "height": {
        "normal": "32px",
        "small": "20px",
        "header": "50px"
      },
      "mobile": {
        "maxWidth": "800px",
        "headerHeight": "56px"
      }
    }
  </pre>
</div>
`;

exports[`Storyshots B API 1`] = `
.c0 {
  font-weight: bold;
}

<b
  className="c0"
>
  Bold content
</b>
`;

exports[`Storyshots B CJK 1`] = `
.c0 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
  color: currentColor;
}

.c1 {
  font-weight: bold;
}

<h4
  className="c0"
>
  <b
    className="c1"
  >
    控制開關粗體字
  </b>
</h4>
`;

exports[`Storyshots B With color 1`] = `
.c1 {
  font-weight: bold;
}

.c0 {
  margin: 0;
  font-size: 1rem;
  color: #00A1DE;
}

<div
  className="c0"
  color="primary"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <b
    className="c1"
  >
     Bold content 
  </b>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots B Within <P> 1`] = `
.c2 {
  font-weight: bold;
}

.c0 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c1 {
  font-size: 0.923rem;
}

<div
  className="c0"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="c1"
  >
    <b
      className="c2"
    >
       Bold content 
    </b>
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Button API 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

<button
  className="c0"
>
  button
</button>
`;

exports[`Storyshots Button Overriding style 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c0 {
  font-size: 56px;
  color: #FFFFFF;
  border-radius: 6px;
  border-color: rgb(206,80,57);
  background-color: tomato;
  min-height: 80px;
}

.c0:hover {
  background-color: rgb(239,93,67);
}

.c0:active {
  background-color: rgb(227,88,63);
}

<button
  className="c0 c1"
  onClick={[Function]}
>
  Overriding style
</button>
`;

exports[`Storyshots Button With active props 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: rgb(0,144,198);
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

<button
  className="c0"
>
  Active
</button>
`;

exports[`Storyshots Button With block props 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 100%;
  min-width: initial;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 > * {
  margin: 5px;
}

<div
  className="c0"
>
  <button
    className="c1"
  >
    Button
  </button>
  <button
    className="c1"
  >
    Simple button
  </button>
  <button
    className="c2"
  >
    block
  </button>
</div>
`;

exports[`Storyshots Button With component props - Input submit 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 100%;
  min-width: initial;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

<input
  className="c0"
  onClick={[Function]}
  type="submit"
  value="Input Submit"
/>
`;

exports[`Storyshots Button With component props 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

<a
  className="c0"
  onClick={[Function]}
>
  I am 
  &lt;a&gt;
   tag.
</a>
`;

exports[`Storyshots Button With disabled props 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: not-allowed;
  background-color: #D1D2D3;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(169,170,170);
}

.c0:hover {
  background-color: #D1D2D3;
}

.c0:active {
  background-color: #D1D2D3;
}

<button
  className="c0"
>
  Disabled
</button>
`;

exports[`Storyshots Button With icon inside 1`] = `
.c0 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c0:hover {
  background-color: rgb(0,151,208);
}

.c0:active {
  background-color: rgb(0,144,198);
}

.c2 > * {
  -webkit-transform-origin: center center;
  -ms-transform-origin: center center;
  transform-origin: center center;
  -webkit-animation: iVXCSc 0.6s infinite cubic-bezier(0.41,0.01,0.58,1);
  animation: iVXCSc 0.6s infinite cubic-bezier(0.41,0.01,0.58,1);
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<button
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <svg
        fill="currentColor"
        height="1em"
        preserveAspectRatio="xMidYMid meet"
        viewBox="0 0 24 24"
        width="1em"
      >
        <path
          d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
          opacity=".3"
        />
        <path
          d="M12 4c4.4 0 8 3.6 8 8h2c0-5.5-4.5-10-10-10v2z"
        />
      </svg>
    </div>
     Loading ...
  </div>
</button>
`;

exports[`Storyshots Button With kind props 1`] = `
.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(202,202,202);
}

.c1:hover {
  background-color: rgb(234,234,234);
}

.c1:active {
  background-color: rgb(223,223,223);
}

.c3 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #69BE28;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(85,153,32);
}

.c3:hover {
  background-color: rgb(98,178,38);
}

.c3:active {
  background-color: rgb(94,170,36);
}

.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F5364E;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(198,44,63);
}

.c4:hover {
  background-color: rgb(230,51,73);
}

.c4:active {
  background-color: rgb(219,48,70);
}

.c5 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F39A1E;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(196,124,24);
}

.c5:hover {
  background-color: rgb(228,144,28);
}

.c5:active {
  background-color: rgb(217,137,27);
}

.c0 > * {
  margin: 5px;
}

<div
  className="c0"
>
  <button
    className="c1"
    onClick={[Function]}
  >
    default
  </button>
  <button
    className="c2"
    onClick={[Function]}
  >
    primary
  </button>
  <button
    className="c3"
    onClick={[Function]}
  >
    success
  </button>
  <button
    className="c4"
    onClick={[Function]}
  >
    error
  </button>
  <button
    className="c5"
    onClick={[Function]}
  >
    warning
  </button>
</div>
`;

exports[`Storyshots Button With round props 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 50%;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 50%;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(202,202,202);
}

.c2:hover {
  background-color: rgb(234,234,234);
}

.c2:active {
  background-color: rgb(223,223,223);
}

.c0 > * {
  margin: 5px;
}

<div
  className="c0"
>
  <button
    className="c1"
  >
    A
  </button>
  <button
    className="c2"
  >
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 24 24"
      width="1em"
    >
      <path
        d="M19 20H5V9h14m-3-7v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-1V2m-1 11h-5v5h5v-5z"
      />
    </svg>
  </button>
</div>
`;

exports[`Storyshots Button With size props 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 40px;
  height: 20px;
  padding: 0 5px;
  font-size: 0.923rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: initial;
  min-width: 40px;
  height: 20px;
  padding: 0 5px;
  font-size: 0.923rem;
  border-color: rgb(202,202,202);
}

.c2:hover {
  background-color: rgb(234,234,234);
}

.c2:active {
  background-color: rgb(223,223,223);
}

.c0 > * {
  margin: 5px;
}

<div
  className="c0"
>
  <button
    className="c1"
  >
    Btn
  </button>
  <button
    className="c2"
  >
    Small Button
  </button>
</div>
`;

exports[`Storyshots Button With square props 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(202,202,202);
}

.c2:hover {
  background-color: rgb(234,234,234);
}

.c2:active {
  background-color: rgb(223,223,223);
}

.c0 > * {
  margin: 5px;
}

<div
  className="c0"
>
  <button
    className="c1"
  >
    A
  </button>
  <button
    className="c2"
  >
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 24 24"
      width="1em"
    >
      <path
        d="M19 20H5V9h14m-3-7v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-1V2m-1 11h-5v5h5v-5z"
      />
    </svg>
  </button>
</div>
`;

exports[`Storyshots Button With theme provider (Material) 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 16px;
  border-color: rgb(202,202,202);
}

.c1:hover {
  background-color: rgb(234,234,234);
}

.c1:active {
  background-color: rgb(223,223,223);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #2196F3;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 16px;
  border-color: rgb(27,121,196);
}

.c2:hover {
  background-color: rgb(31,141,228);
}

.c2:active {
  background-color: rgb(29,134,217);
}

.c3 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #4CAF50;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 16px;
  border-color: rgb(61,141,65);
}

.c3:hover {
  background-color: rgb(71,164,75);
}

.c3:active {
  background-color: rgb(68,156,71);
}

.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F44336;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 16px;
  border-color: rgb(197,54,44);
}

.c4:hover {
  background-color: rgb(229,63,51);
}

.c4:active {
  background-color: rgb(218,60,48);
}

.c5 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FF9800;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 16px;
  border-color: rgb(206,123,0);
}

.c5:hover {
  background-color: rgb(239,143,0);
}

.c5:active {
  background-color: rgb(227,136,0);
}

.c0 > * {
  margin: 5px;
}

<div
  className="c0"
>
  <button
    className="c1"
    onClick={[Function]}
  >
    default
  </button>
  <button
    className="c2"
    onClick={[Function]}
  >
    primary
  </button>
  <button
    className="c3"
    onClick={[Function]}
  >
    success
  </button>
  <button
    className="c4"
    onClick={[Function]}
  >
    error
  </button>
  <button
    className="c5"
    onClick={[Function]}
  >
    warning
  </button>
</div>
`;

exports[`Storyshots Card API 1`] = `
.c0 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

<div
  className="c0"
>
  Card Content
</div>
`;

exports[`Storyshots ClickOutside API 1`] = `
.c0 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

<div
  className="c0"
>
  Inside (Try to click outside.)
</div>
`;

exports[`Storyshots Code API 1`] = `
<MockSyntaxHighlighter
  customStyle={
    Object {
      "backgroundColor": "initial",
      "fontSize": "0.923rem",
      "margin": 0,
      "padding": 0,
    }
  }
  innerRef={undefined}
  language="javascript"
  style={
    Object {
      "hljs": Object {
        "background": "white",
        "color": "#333333",
        "display": "block",
        "overflowX": "auto",
        "padding": "0.5em",
      },
      "hljs-addition": Object {
        "backgroundColor": "#eaffea",
        "color": "#55a532",
      },
      "hljs-attr": Object {
        "color": "#795da3",
      },
      "hljs-attribute": Object {
        "color": "#0086b3",
      },
      "hljs-bullet": Object {
        "color": "#0086b3",
      },
      "hljs-comment": Object {
        "color": "#969896",
      },
      "hljs-deletion": Object {
        "backgroundColor": "#ffecec",
        "color": "#bd2c00",
      },
      "hljs-emphasis": Object {
        "color": "#df5000",
      },
      "hljs-keyword": Object {
        "color": "#a71d5d",
      },
      "hljs-link": Object {
        "textDecoration": "underline",
      },
      "hljs-literal": Object {
        "color": "#0086b3",
      },
      "hljs-meta": Object {
        "color": "#969896",
      },
      "hljs-name": Object {
        "color": "#63a35c",
      },
      "hljs-quote": Object {
        "color": "#df5000",
      },
      "hljs-section": Object {
        "color": "#63a35c",
      },
      "hljs-selector-attr": Object {
        "color": "#795da3",
      },
      "hljs-selector-class": Object {
        "color": "#795da3",
      },
      "hljs-selector-id": Object {
        "color": "#795da3",
      },
      "hljs-selector-pseudo": Object {
        "color": "#795da3",
      },
      "hljs-selector-tag": Object {
        "color": "#a71d5d",
      },
      "hljs-string": Object {
        "color": "#df5000",
      },
      "hljs-strong": Object {
        "color": "#df5000",
      },
      "hljs-symbol": Object {
        "color": "#0086b3",
      },
      "hljs-tag": Object {
        "color": "#333333",
      },
      "hljs-template-variable": Object {
        "color": "#df5000",
      },
      "hljs-title": Object {
        "color": "#795da3",
      },
      "hljs-type": Object {
        "color": "#a71d5d",
      },
      "hljs-variable": Object {
        "color": "#df5000",
      },
    }
  }
  wrapLines={true}
>
  var data = {
    datapoints:
      [{dataChnId: "Map", values: {latitude: 12, longitude: 13, altitude: 14}}]
  };
  
  $.ajax({
    type: "POST",
    url: "https://api.mediatek.com/mcs/v2/devices/DzdpHYIZ/datapoints",
    headers: { deviceKey: "Cio34Lj7Na5RmQXj" },
    contentType: "application/json",
    data: JSON.stringify(data)
  })
  .done(function(data){
    // your content
  })
</MockSyntaxHighlighter>
`;

exports[`Storyshots Code With language props 1`] = `
<MockSyntaxHighlighter
  customStyle={
    Object {
      "backgroundColor": "initial",
      "fontSize": "0.923rem",
      "margin": 0,
      "padding": 0,
    }
  }
  innerRef={undefined}
  language="arduino"
  style={
    Object {
      "hljs": Object {
        "background": "white",
        "color": "#333333",
        "display": "block",
        "overflowX": "auto",
        "padding": "0.5em",
      },
      "hljs-addition": Object {
        "backgroundColor": "#eaffea",
        "color": "#55a532",
      },
      "hljs-attr": Object {
        "color": "#795da3",
      },
      "hljs-attribute": Object {
        "color": "#0086b3",
      },
      "hljs-bullet": Object {
        "color": "#0086b3",
      },
      "hljs-comment": Object {
        "color": "#969896",
      },
      "hljs-deletion": Object {
        "backgroundColor": "#ffecec",
        "color": "#bd2c00",
      },
      "hljs-emphasis": Object {
        "color": "#df5000",
      },
      "hljs-keyword": Object {
        "color": "#a71d5d",
      },
      "hljs-link": Object {
        "textDecoration": "underline",
      },
      "hljs-literal": Object {
        "color": "#0086b3",
      },
      "hljs-meta": Object {
        "color": "#969896",
      },
      "hljs-name": Object {
        "color": "#63a35c",
      },
      "hljs-quote": Object {
        "color": "#df5000",
      },
      "hljs-section": Object {
        "color": "#63a35c",
      },
      "hljs-selector-attr": Object {
        "color": "#795da3",
      },
      "hljs-selector-class": Object {
        "color": "#795da3",
      },
      "hljs-selector-id": Object {
        "color": "#795da3",
      },
      "hljs-selector-pseudo": Object {
        "color": "#795da3",
      },
      "hljs-selector-tag": Object {
        "color": "#a71d5d",
      },
      "hljs-string": Object {
        "color": "#df5000",
      },
      "hljs-strong": Object {
        "color": "#df5000",
      },
      "hljs-symbol": Object {
        "color": "#0086b3",
      },
      "hljs-tag": Object {
        "color": "#333333",
      },
      "hljs-template-variable": Object {
        "color": "#df5000",
      },
      "hljs-title": Object {
        "color": "#795da3",
      },
      "hljs-type": Object {
        "color": "#a71d5d",
      },
      "hljs-variable": Object {
        "color": "#df5000",
      },
    }
  }
  wrapLines={true}
>
  include &lt;HttpClient.h&gt;
  include &lt;EthernetClient.h&gt;
  
  EthernetClient content;
  HttpClient http(content);
  
  content.println("POST /mcs/v2/devices/DzdpHYIZ/datapoints.csv HTTP/1.1");
  #hint! Please do not add excessive spaces
  
  String data = "inte,,123"
  
  #hint! Please do not add excessive spaces
  #timestamp is in unix-time format the milliseconds and is optional. If not provided,
  
  #system will generate timestamp at the time of receiving this API
  int dataLength = data.length();
  
  content.println("Host: api.mediatek.com");
  content.println("deviceKey: Cio34Lj7Na5RmQXj");
  content.print("Content-Length: ");
  content.println(dataLength);
</MockSyntaxHighlighter>
`;

exports[`Storyshots CopyButton API 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 40px;
  height: 20px;
  padding: 0 5px;
  font-size: 0.923rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c0 {
  width: 42px;
}

.c0 > div {
  -webkit-transform-origin: center center;
  -ms-transform-origin: center center;
  transform-origin: center center;
  -webkit-animation: none;
  animation: none;
}

.c0 path {
  fill: currentColor;
}

<button
  className="c0 c1"
  onClick={[Function]}
>
  <div>
    Copy
  </div>
</button>
`;

exports[`Storyshots DataChannel ButtonClear 1`] = `
.c2 {
  color: #00A1DE;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c2:hover {
  color: rgb(0,151,208);
}

.c2:active {
  color: rgb(0,144,198);
}

.c0 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 > * {
  margin-right: 5px;
}

<div
  className="c0"
>
  <a
    className="c1 c2"
    color="primary"
  >
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 24 24"
      width="1em"
    >
      <path
        d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
      />
    </svg>
    Clear
  </a>
</div>
`;

exports[`Storyshots DataChannel ControlNumber 1`] = `
.c7 {
  color: #00A1DE;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c7:hover {
  color: rgb(0,151,208);
}

.c7:active {
  color: rgb(0,144,198);
}

.c5 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c2 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c8 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c8:hover {
  background-color: rgb(0,151,208);
}

.c8:active {
  background-color: rgb(0,144,198);
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c6 > * {
  margin-right: 5px;
}

.c3 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c3:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c3::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0 {
  width: 100%;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: 10px;
}

.c1 {
  margin-bottom: 5px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

<div
  className="c0"
>
  <p
    className="c1 c2"
    color="grayBase"
  >
    單位：攝氏
  </p>
  <input
    className="c3"
    kind="primary"
    onChange={[Function]}
    placeholder="placeholder"
    type="number"
    value={10}
  />
  <div
    className="c4"
  >
    <div
      className="c5"
      onClick={[Function]}
    >
      <a
        className="c6 c7"
        color="primary"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
          />
        </svg>
        Clear
      </a>
    </div>
    <button
      className="c8"
      onClick={[Function]}
    >
      Ok
    </button>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlPeriod 1`] = `
.c1 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c5 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c5:hover {
  background-color: rgb(0,151,208);
}

.c5:active {
  background-color: rgb(0,144,198);
}

.c4 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c4:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c4::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0 {
  margin-bottom: 10px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-top: 5px;
}

.c3 {
  margin-right: 10px;
}

<div
  className="c0"
>
  <label
    htmlFor="input"
  >
    <p
      className="c1"
      color="grayBase"
    >
      Period
    </p>
  </label>
  <div
    className="c2"
  >
    <input
      className="c3 c4"
      kind="primary"
      onChange={[Function]}
      placeholder="placeholder"
      type="number"
      value={10}
    />
    <button
      className="c5"
      onClick={[Function]}
    >
      Ok
    </button>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange - Stateful PPAP 1`] = `
.c7 {
  margin: 0;
  font-size: 1rem;
  color: #00A1DE;
}

.c3 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c8 {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  outline: none;
  background-color: rgba(0,0,0,0);
  cursor: pointer;
}

.c8::-webkit-slider-runnable-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c8::-moz-range-track {
  -moz-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c8::-moz-focus-outer {
  border: 0;
}

.c8::-ms-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c8::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c8::-moz-range-thumb {
  -moz-appearance: none;
  height: 40px;
  width: 40px;
  border-width: 0;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -moz-appearance: none;
  -moz-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c8::-ms-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c8::-webkit-slider-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c8::-moz-range-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c8::-ms-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > *:first-child {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 > *:last-child {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0 4px;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-basis: 0;
  flex-basis: 0;
  overflow: hidden;
}

.c2::before {
  content: "";
  border-right-width: 1px;
  border-right-style: solid;
  border-right-color: #D1D2D3;
  height: 4px;
  margin-top: 5px;
  margin-bottom: 8px;
}

.c5 {
  margin-bottom: 15px;
}

.c6 {
  display: inline-block;
}

.c4 {
  padding: 0 13.666666666666668%;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <p
        className="c3"
        color="grayBase"
      >
        Apple
      </p>
    </div>
    <div
      className="c2"
    >
      <p
        className="c3"
        color="grayBase"
      >
        Pen
      </p>
    </div>
    <div
      className="c2"
    >
      <p
        className="c3"
        color="grayBase"
      >
        Pineapple
      </p>
    </div>
  </div>
  <div
    className="c4"
  >
    <div
      className="c5 c3"
      color="grayBase"
    >
      Current value: 
      <p
        className="c6 c7"
        color="primary"
      >
        Pineapple
      </p>
    </div>
    <input
      className="c8"
      kind="primary"
      max={2}
      min={0}
      onChange={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      step={1}
      type="range"
      value={2}
    />
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange - Stateful number 1`] = `
.c7 {
  margin: 0;
  font-size: 1rem;
  color: #00A1DE;
}

.c3 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c8 {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  outline: none;
  background-color: rgba(0,0,0,0);
  cursor: pointer;
}

.c8::-webkit-slider-runnable-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c8::-moz-range-track {
  -moz-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c8::-moz-focus-outer {
  border: 0;
}

.c8::-ms-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c8::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c8::-moz-range-thumb {
  -moz-appearance: none;
  height: 40px;
  width: 40px;
  border-width: 0;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -moz-appearance: none;
  -moz-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c8::-ms-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c8::-webkit-slider-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c8::-moz-range-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c8::-ms-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > *:first-child {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c1 > *:last-child {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0 4px;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-basis: 0;
  flex-basis: 0;
  overflow: hidden;
}

.c2::before {
  content: "";
  border-right-width: 1px;
  border-right-style: solid;
  border-right-color: #D1D2D3;
  height: 4px;
  margin-top: 5px;
  margin-bottom: 8px;
}

.c5 {
  margin-bottom: 15px;
}

.c6 {
  display: inline-block;
}

.c4 {
  padding: 0 0%;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <div
        className="c3"
        color="grayBase"
      >
        33
      </div>
    </div>
    <div
      className="c2"
    >
      <div
        className="c3"
        color="grayBase"
      >
        95
      </div>
    </div>
  </div>
  <div
    className="c4"
  >
    <div
      className="c5 c3"
      color="grayBase"
    >
      Current value: 
      <div
        className="c6 c7"
        color="primary"
      >
        88
      </div>
    </div>
    <input
      className="c8"
      kind="primary"
      max={95}
      min={33}
      onChange={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      step={1}
      type="range"
      value={88}
    />
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange 1`] = `
.c8 {
  margin: 0;
  font-size: 1rem;
  color: #00A1DE;
}

.c4 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c9 {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  outline: none;
  background-color: rgba(0,0,0,0);
  cursor: pointer;
}

.c9::-webkit-slider-runnable-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c9::-moz-range-track {
  -moz-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c9::-moz-focus-outer {
  border: 0;
}

.c9::-ms-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c9::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c9::-moz-range-thumb {
  -moz-appearance: none;
  height: 40px;
  width: 40px;
  border-width: 0;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -moz-appearance: none;
  -moz-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c9::-ms-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c9::-webkit-slider-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c9::-moz-range-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c9::-ms-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c1 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 > *:first-child {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 > *:last-child {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c10 > *:first-child {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c10 > *:last-child {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0 4px;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-basis: 0;
  flex-basis: 0;
  overflow: hidden;
}

.c3::before {
  content: "";
  border-right-width: 1px;
  border-right-style: solid;
  border-right-color: #D1D2D3;
  height: 4px;
  margin-top: 5px;
  margin-bottom: 8px;
}

.c6 {
  margin-bottom: 15px;
}

.c7 {
  display: inline-block;
}

.c5 {
  padding: 0 7%;
}

.c11 {
  padding: 0 0%;
}

.c0 > * {
  margin: 7.5px;
  width: 600px;
  background: white;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          AAAAAA
        </p>
      </div>
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          BBBBB
        </p>
      </div>
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          CCCCC
        </p>
      </div>
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          DDDDD
        </p>
      </div>
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          EEEEE
        </p>
      </div>
    </div>
    <div
      className="c5"
    >
      <div
        className="c6 c4"
        color="grayBase"
      >
        Current value: 
        <p
          className="c7 c8"
          color="primary"
        >
          N/A
        </p>
      </div>
      <input
        className="c9"
        kind="primary"
        max={4}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={undefined}
      />
    </div>
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          AAAAAA
        </p>
      </div>
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          BBBBB
        </p>
      </div>
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          CCCCC
        </p>
      </div>
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          DDDDD
        </p>
      </div>
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          EEEEE
        </p>
      </div>
    </div>
    <div
      className="c5"
    >
      <div
        className="c6 c4"
        color="grayBase"
      >
        Current value: 
        <p
          className="c7 c8"
          color="primary"
        >
          DDDDD
        </p>
      </div>
      <input
        className="c9"
        kind="primary"
        max={4}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={3}
      />
    </div>
  </div>
  <div
    className="c1"
  >
    <div
      className="c10"
    >
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          Low
        </p>
      </div>
      <div
        className="c3"
      >
        <p
          className="c4"
          color="grayBase"
        >
          Heigh
        </p>
      </div>
    </div>
    <div
      className="c11"
    >
      <div
        className="c6 c4"
        color="grayBase"
      >
        Current value: 
        <p
          className="c7 c8"
          color="primary"
        >
          Low
        </p>
      </div>
      <input
        className="c9"
        kind="primary"
        max={1}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={0}
      />
    </div>
  </div>
  <div
    className="c1"
  >
    <div
      className="c10"
    >
      <div
        className="c3"
      >
        <div
          className="c4"
          color="grayBase"
        >
          0
        </div>
      </div>
      <div
        className="c3"
      >
        <div
          className="c4"
          color="grayBase"
        >
          100
        </div>
      </div>
    </div>
    <div
      className="c11"
    >
      <div
        className="c6 c4"
        color="grayBase"
      >
        Current value: 
        <div
          className="c7 c8"
          color="primary"
        >
          33
        </div>
      </div>
      <input
        className="c9"
        kind="primary"
        max={100}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={33}
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlString 1`] = `
.c6 {
  color: #00A1DE;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c6:hover {
  color: rgb(0,151,208);
}

.c6:active {
  color: rgb(0,144,198);
}

.c4 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c7 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c7:hover {
  background-color: rgb(0,151,208);
}

.c7:active {
  background-color: rgb(0,144,198);
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 > * {
  margin-right: 5px;
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 5px 10px;
  color: #353630;
  border-color: #D1D2D3;
  font-size: 1rem;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:disabled {
  background-color: #FFFFFF;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: 10px;
  -webkit-flex-shrink: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
}

.c1 {
  height: 100%;
  min-height: 4em;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
}

<div
  className="c0"
>
  <textarea
    className="c1 c2"
    kind="primary"
    onChange={[Function]}
    placeholder="placeholder"
    value=""
  />
  <div
    className="c3"
  >
    <div
      className="c4"
      onClick={[Function]}
    >
      <a
        className="c5 c6"
        color="primary"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
          />
        </svg>
        Clear
      </a>
    </div>
    <button
      className="c7"
      onClick={[Function]}
    >
      Ok
    </button>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlSwitch 1`] = `
.c0 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #999A94;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c0::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 0;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

<div
  checked={false}
  className="c0"
  kind="success"
  onClick={[Function]}
/>
`;

exports[`Storyshots DataChannel DisplayMultipleValue 1`] = `
.c3 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #00A1DE;
}

.c1 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c0 > div {
  width: 100%;
}

.c0 > div + div {
  margin-top: 10px;
}

.c2 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
  margin-top: 5px;
}

<div
  className="c0"
>
  <div>
    <p
      className="c1"
      color="grayBase"
    >
      Value
    </p>
    <h1
      className="c2 c3"
      color="primary"
    >
      1234455
    </h1>
  </div>
  <div>
    <p
      className="c1"
      color="grayBase"
    >
      Period
    </p>
    <h1
      className="c2 c3"
      color="primary"
    >
      125125
    </h1>
  </div>
</div>
`;

exports[`Storyshots DataChannel DisplayStatus 1`] = `
.c3 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c4 {
  width: 12px;
}

.c4 > * {
  fill: #D1D2D3;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c5 {
  width: 12px;
}

.c5 > * {
  fill: #69BE28;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-basis: 0;
  flex-basis: 0;
  margin: 0 4px;
  overflow: hidden;
}

.c2 > *:first-child {
  margin-bottom: 20px;
}

.c0 > * {
  margin: 7.5px;
  width: 600px;
  background: white;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <p
        className="c3"
        color="grayBase"
      >
        OFF
      </p>
      <div>
        <svg
          className="c4"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="c2"
    >
      <p
        className="c3"
        color="grayBase"
      >
        ON
      </p>
      <div>
        <svg
          className="c4"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
  </div>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <p
        className="c3"
        color="grayBase"
      >
        Apple1
      </p>
      <div>
        <svg
          className="c4"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="c2"
    >
      <p
        className="c3"
        color="grayBase"
      >
        Apple2
      </p>
      <div>
        <svg
          className="c4"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="c2"
    >
      <p
        className="c3"
        color="grayBase"
      >
        Pen
      </p>
      <div>
        <svg
          className="c5"
          color="success"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="c2"
    >
      <p
        className="c3"
        color="grayBase"
      >
        Pineapple
      </p>
      <div>
        <svg
          className="c4"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="c2"
    >
      <p
        className="c3"
        color="grayBase"
      >
        PPAPPPAPPPAP
      </p>
      <div>
        <svg
          className="c4"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel DisplayString 1`] = `
.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 5px 10px;
  color: #353630;
  border-color: #D1D2D3;
  font-size: 1rem;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:disabled {
  background-color: #FFFFFF;
}

.c0 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
}

.c1 {
  height: 100%;
  min-height: 4em;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
}

<div
  className="c0"
>
  <textarea
    className="c1 c2"
    disabled={true}
    kind="primary"
    placeholder="This place holds Hex value."
    value="value"
  />
</div>
`;

exports[`Storyshots DataChannel DisplayUnitValue 1`] = `
.c2 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #00A1DE;
}

.c4 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c1 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
}

.c3 {
  margin-top: 10px;
}

<div
  className="c0"
>
  <h1
    className="c1 c2"
    color="primary"
  >
    1123124124121
  </h1>
  <p
    className="c3 c4"
    color="grayBase"
  >
    攝氏
  </p>
</div>
`;

exports[`Storyshots DataChannelAdapter API 1`] = `
.c16 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
  color: currentColor;
}

.c24 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #00A1DE;
}

.c12 {
  color: #00A1DE;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c12:hover {
  color: rgb(0,151,208);
}

.c12:active {
  color: rgb(0,144,198);
}

.c10 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c43 {
  margin: 0;
  font-size: 1rem;
  color: #00A1DE;
}

.c7 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c18 {
  font-size: 0.923rem;
}

.c13 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c13:hover {
  background-color: rgb(0,151,208);
}

.c13:active {
  background-color: rgb(0,144,198);
}

.c2 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c32 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #69BE28;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c32::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 32px;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c11 > * {
  margin-right: 5px;
}

.c8 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c8:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c8::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c8::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c8:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c8::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c5 {
  width: 100%;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: 10px;
}

.c6 {
  margin-bottom: 5px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c28 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 5px 10px;
  color: #353630;
  border-color: #D1D2D3;
  font-size: 1rem;
}

.c28:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c28::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c28::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c28:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c28::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c28:disabled {
  background-color: #FFFFFF;
}

.c26 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
}

.c29 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-top: 10px;
  -webkit-flex-shrink: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
}

.c27 {
  height: 100%;
  min-height: 4em;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
}

.c44 {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  outline: none;
  background-color: rgba(0,0,0,0);
  cursor: pointer;
}

.c44::-webkit-slider-runnable-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c44::-moz-range-track {
  -moz-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c44::-moz-focus-outer {
  border: 0;
}

.c44::-ms-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c44::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c44::-moz-range-thumb {
  -moz-appearance: none;
  height: 40px;
  width: 40px;
  border-width: 0;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -moz-appearance: none;
  -moz-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c44::-ms-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c44::-webkit-slider-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c44::-moz-range-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c44::-ms-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c37 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

.c38 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c38 > *:first-child {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c38 > *:last-child {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c39 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0 4px;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-basis: 0;
  flex-basis: 0;
  overflow: hidden;
}

.c39::before {
  content: "";
  border-right-width: 1px;
  border-right-style: solid;
  border-right-color: #D1D2D3;
  height: 4px;
  margin-top: 5px;
  margin-bottom: 8px;
}

.c41 {
  margin-bottom: 15px;
}

.c42 {
  display: inline-block;
}

.c40 {
  padding: 0 0%;
}

.c48 {
  margin-bottom: 10px;
}

.c49 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-top: 5px;
}

.c50 {
  margin-right: 10px;
}

.c36 {
  width: 12px;
}

.c36 > * {
  fill: #D1D2D3;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c35 {
  width: 12px;
}

.c35 > * {
  fill: #69BE28;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c33 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  width: 100%;
}

.c34 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-basis: 0;
  flex-basis: 0;
  margin: 0 4px;
  overflow: hidden;
}

.c34 > *:first-child {
  margin-bottom: 20px;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c23 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
}

.c25 {
  margin-top: 10px;
}

.c45 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

.c45 > div {
  width: 100%;
}

.c45 > div + div {
  margin-top: 10px;
}

.c46 {
  text-align: center;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
  margin-top: 5px;
}

.c30 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
}

.c31 {
  height: 100%;
  min-height: 4em;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
}

.c20 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  border: 0;
  border-top: 1px solid #D1D2D3;
}

.c3 {
  -webkit-flex-basis: 24px;
  -ms-flex-basis: 24px;
  flex-basis: 24px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 10px 0;
}

.c14 {
  display: block;
}

.c21 {
  height: 39px;
}

.c19 {
  margin: 5px 0;
}

.c1 {
  height: 300px;
  padding: 10px 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c15 {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c17 {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #999A94;
}

.c47 {
  width: 100%;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c0 > * {
  height: initial;
  padding: 8px 16px;
  margin: 4px;
  -webkit-flex-basis: 100%;
  -ms-flex-basis: 100%;
  flex-basis: 100%;
}

.c0 > [data-width ~= half] {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-flex-basis: 40%;
  -ms-flex-basis: 40%;
  flex-basis: 40%;
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <p
          className="c6 c7"
          color="grayBase"
        >
          單位：ampere
        </p>
        <input
          className="c8"
          kind="primary"
          onChange={[Function]}
          placeholder="Integer only"
          type="number"
          value={0}
        />
        <div
          className="c9"
        >
          <div
            className="c10"
            onClick={[Function]}
          >
            <a
              className="c11 c12"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="c13"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        INTEGER_CONTROL
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c22"
      >
        <h1
          className="c23 c24"
          color="primary"
        >
          0
        </h1>
        <p
          className="c25 c7"
          color="grayBase"
        >
          ampere
        </p>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        INTEGER_DISPLAY
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c5"
      >
        <p
          className="c6 c7"
          color="grayBase"
        >
          單位：ampere
        </p>
        <input
          className="c8"
          kind="primary"
          onChange={[Function]}
          placeholder="Float only"
          type="number"
          value=""
        />
        <div
          className="c9"
        >
          <div
            className="c10"
            onClick={[Function]}
          >
            <a
              className="c11 c12"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="c13"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        FLOAT_CONTROL
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c22"
      >
        <h1
          className="c23 c24"
          color="primary"
        >
          N/A
        </h1>
        <p
          className="c25 c7"
          color="grayBase"
        >
          ampere
        </p>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        FLOAT_DISPLAY
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c26"
      >
        <textarea
          className="c27 c28"
          kind="primary"
          onChange={[Function]}
          placeholder="String only"
          value="Any string type value."
        />
        <div
          className="c29"
        >
          <div
            className="c10"
            onClick={[Function]}
          >
            <a
              className="c11 c12"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="c13"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        STRING_CONTROL
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c30"
      >
        <textarea
          className="c31 c28"
          disabled={true}
          kind="primary"
          placeholder="String only"
          value="Any string type value."
        />
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        STRING_DISPLAY
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c26"
      >
        <textarea
          className="c27 c28"
          kind="primary"
          onChange={[Function]}
          placeholder="Hex only"
          value="ABF123"
        />
        <div
          className="c29"
        >
          <div
            className="c10"
            onClick={[Function]}
          >
            <a
              className="c11 c12"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="c13"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        HEX_CONTROL
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c30"
      >
        <textarea
          className="c31 c28"
          disabled={true}
          kind="primary"
          placeholder="Hex only"
          value="ABF123"
        />
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        HEX_DISPLAY
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        checked={true}
        className="c32"
        kind="success"
        onClick={[Function]}
      />
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        SWITCH_CONTROL
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c33"
      >
        <div
          className="c34"
        >
          <p
            className="c7"
            color="grayBase"
          >
            OFF
          </p>
          <div>
            <svg
              className="c35"
              color="success"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="c34"
        >
          <p
            className="c7"
            color="grayBase"
          >
            ON
          </p>
          <div>
            <svg
              className="c36"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        SWITCH_DISPLAY
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c37"
      >
        <div
          className="c38"
        >
          <div
            className="c39"
          >
            <p
              className="c7"
              color="grayBase"
            >
              k1
            </p>
          </div>
          <div
            className="c39"
          >
            <p
              className="c7"
              color="grayBase"
            >
              k2
            </p>
          </div>
        </div>
        <div
          className="c40"
        >
          <div
            className="c41 c7"
            color="grayBase"
          >
            Current value: 
            <p
              className="c42 c43"
              color="primary"
            >
              v2
            </p>
          </div>
          <input
            className="c44"
            kind="primary"
            max={1}
            min={0}
            onChange={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            step={1}
            type="range"
            value={1}
          />
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        CATEGORY_CONTROL
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c33"
      >
        <div
          className="c34"
        >
          <p
            className="c7"
            color="grayBase"
          >
            k1
          </p>
          <div>
            <svg
              className="c36"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="c34"
        >
          <p
            className="c7"
            color="grayBase"
          >
            k2
          </p>
          <div>
            <svg
              className="c35"
              color="success"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="c34"
        >
          <p
            className="c7"
            color="grayBase"
          >
            k3
          </p>
          <div>
            <svg
              className="c36"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="c34"
        >
          <p
            className="c7"
            color="grayBase"
          >
            k4
          </p>
          <div>
            <svg
              className="c36"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="c34"
        >
          <p
            className="c7"
            color="grayBase"
          >
            k5
          </p>
          <div>
            <svg
              className="c36"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        CATEGORY_DISPLAY
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c37"
      >
        <div
          className="c38"
        >
          <div
            className="c39"
          >
            <p
              className="c7"
              color="grayBase"
            >
              Low
            </p>
          </div>
          <div
            className="c39"
          >
            <p
              className="c7"
              color="grayBase"
            >
              High
            </p>
          </div>
        </div>
        <div
          className="c40"
        >
          <div
            className="c41 c7"
            color="grayBase"
          >
            Current value: 
            <p
              className="c42 c43"
              color="primary"
            >
              High
            </p>
          </div>
          <input
            className="c44"
            kind="primary"
            max={1}
            min={0}
            onChange={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            step={1}
            type="range"
            value={1}
          />
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        GPIO_CONTROL
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c33"
      >
        <div
          className="c34"
        >
          <p
            className="c7"
            color="grayBase"
          >
            Low
          </p>
          <div>
            <svg
              className="c35"
              color="success"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="c34"
        >
          <p
            className="c7"
            color="grayBase"
          >
            High
          </p>
          <div>
            <svg
              className="c36"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        GPIO_DISPLAY
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c37"
      >
        <div
          className="c38"
        >
          <div
            className="c39"
          >
            <div
              className="c7"
              color="grayBase"
            >
              1
            </div>
          </div>
          <div
            className="c39"
          >
            <div
              className="c7"
              color="grayBase"
            >
              100
            </div>
          </div>
        </div>
        <div
          className="c40"
        >
          <div
            className="c41 c7"
            color="grayBase"
          >
            Current value: 
            <div
              className="c42 c43"
              color="primary"
            >
              23
            </div>
          </div>
          <input
            className="c44"
            kind="primary"
            max={100}
            min={1}
            onChange={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            step={1}
            type="range"
            value={23}
          />
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        ANALOG_CONTROL
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c45"
      >
        <div>
          <p
            className="c7"
            color="grayBase"
          >
            Value
          </p>
          <h1
            className="c46 c24"
            color="primary"
          >
            value pwm
          </h1>
        </div>
        <div>
          <p
            className="c7"
            color="grayBase"
          >
            Period
          </p>
          <h1
            className="c46 c24"
            color="primary"
          >
            20
          </h1>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        PWM_DISPLAY
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="c1 c2"
    data-width="half"
  >
    <div
      className="c3"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="c4"
    >
      <div
        className="c47"
      >
        <div
          className="c48"
        >
          <label
            htmlFor="input"
          >
            <p
              className="c7"
              color="grayBase"
            >
              Period
            </p>
          </label>
          <div
            className="c49"
          >
            <input
              className="c50 c8"
              kind="primary"
              onChange={[Function]}
              placeholder="Integer only"
              type="number"
              value={0}
            />
            <button
              className="c13"
              onClick={[Function]}
            >
              Ok
            </button>
          </div>
        </div>
        <div
          className="c37"
        >
          <div
            className="c38"
          >
            <div
              className="c39"
            >
              <div
                className="c7"
                color="grayBase"
              >
                0
              </div>
            </div>
            <div
              className="c39"
            >
              <div
                className="c7"
                color="grayBase"
              >
                100
              </div>
            </div>
          </div>
          <div
            className="c40"
          >
            <div
              className="c41 c7"
              color="grayBase"
            >
              Current value: 
              <div
                className="c42 c43"
                color="primary"
              >
                0
              </div>
            </div>
            <input
              className="c44"
              kind="primary"
              max={100}
              min={0}
              onChange={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              step={1}
              type="range"
              value={0}
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <h4
        className="c15 c16"
      >
        PWM_CONTROL
      </h4>
      <small
        className="c17 c18"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="c19 c20"
      />
      <div
        className="c21 c10"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard API 1`] = `
.c6 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
  color: currentColor;
}

.c12 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c8 {
  font-size: 0.923rem;
}

.c1 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c10 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  border: 0;
  border-top: 1px solid #D1D2D3;
}

.c2 {
  -webkit-flex-basis: 24px;
  -ms-flex-basis: 24px;
  flex-basis: 24px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 10px 0;
}

.c4 {
  display: block;
}

.c11 {
  height: 39px;
}

.c9 {
  margin: 5px 0;
}

.c0 {
  height: 300px;
  padding: 10px 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c7 {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #999A94;
}

<div
  className="c0 c1"
>
  <div
    className="c2"
  >
    <a
      href=""
    >
      Link
    </a>
  </div>
  <div
    className="c3"
  >
    Children
  </div>
  <div
    className="c4"
  >
    <h4
      className="c5 c6"
    >
      Title
    </h4>
    <small
      className="c7 c8"
    >
      Last data point time : 2015-06-12 12:00
    </small>
    <hr
      className="c9 c10"
    />
    <div
      className="c11 c12"
    >
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..."
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard Custom width and height 1`] = `
.c8 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
  color: currentColor;
}

.c14 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c10 {
  font-size: 0.923rem;
}

.c2 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c5 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #999A94;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c5::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 0;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c12 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  border: 0;
  border-top: 1px solid #D1D2D3;
}

.c3 {
  -webkit-flex-basis: 24px;
  -ms-flex-basis: 24px;
  flex-basis: 24px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 10px 0;
}

.c6 {
  display: block;
}

.c13 {
  height: 39px;
}

.c11 {
  margin: 5px 0;
}

.c1 {
  height: 300px;
  padding: 10px 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c9 {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #999A94;
}

.c0 {
  width: 300px;
  height: 400px;
}

<div
  className="c0 c1 c2"
>
  <div
    className="c3"
  >
    V
  </div>
  <div
    className="c4"
  >
    <div
      checked={false}
      className="c5"
      kind="success"
    />
  </div>
  <div
    className="c6"
  >
    <h4
      className="c7 c8"
    >
      Title
    </h4>
    <small
      className="c9 c10"
    >
      Last data point time : 2015-06-12 12:00
    </small>
    <hr
      className="c11 c12"
    />
    <div
      className="c13 c14"
    >
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..."
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard With Component selector 1`] = `
.c8 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
  color: currentColor;
}

.c14 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c10 {
  font-size: 0.923rem;
}

.c2 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c12 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  border: 0;
  border-top: 1px solid #D1D2D3;
}

.c3 {
  -webkit-flex-basis: 24px;
  -ms-flex-basis: 24px;
  flex-basis: 24px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 10px 0;
}

.c6 {
  display: block;
}

.c13 {
  height: 39px;
}

.c11 {
  margin: 5px 0;
}

.c1 {
  height: 300px;
  padding: 10px 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c9 {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #999A94;
}

.c0 .c5 {
  width: 50%;
}

<div
  className="c0 c1 c2"
>
  <div
    className="c3"
  >
    V
  </div>
  <div
    className="c4"
  >
    Children
  </div>
  <div
    className="c5 c6"
  >
    <h4
      className="c7 c8"
    >
      Title
    </h4>
    <small
      className="c9 c10"
    >
      Last data point time : 2015-06-12 12:00
    </small>
    <hr
      className="c11 c12"
    />
    <div
      className="c13 c14"
    >
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..."
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard With empty description 1`] = `
.c7 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
  color: currentColor;
}

.c13 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c9 {
  font-size: 0.923rem;
}

.c1 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c4 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #999A94;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c4::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 0;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c11 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  border: 0;
  border-top: 1px solid #D1D2D3;
}

.c2 {
  -webkit-flex-basis: 24px;
  -ms-flex-basis: 24px;
  flex-basis: 24px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 10px 0;
}

.c5 {
  display: block;
}

.c12 {
  height: 39px;
}

.c10 {
  margin: 5px 0;
}

.c0 {
  height: 300px;
  padding: 10px 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c6 {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8 {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #999A94;
}

<div
  className="c0 c1"
>
  <div
    className="c2"
  >
    V
  </div>
  <div
    className="c3"
  >
    <div
      checked={false}
      className="c4"
      kind="success"
    />
  </div>
  <div
    className="c5"
  >
    <h4
      className="c6 c7"
    >
      Title
    </h4>
    <small
      className="c8 c9"
    >
      Last data point time : 2015-06-12 12:00
    </small>
    <hr
      className="c10 c11"
    />
    <div
      className="c12 c13"
    >
      <MockReactTextTruncate
        line={2}
        text=""
        truncateText=" ..."
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard Without description 1`] = `
.c7 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
  color: currentColor;
}

.c9 {
  font-size: 0.923rem;
}

.c1 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c4 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #999A94;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c4::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 0;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c2 {
  -webkit-flex-basis: 24px;
  -ms-flex-basis: 24px;
  flex-basis: 24px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 10px 0;
}

.c5 {
  display: block;
}

.c0 {
  height: 300px;
  padding: 10px 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c6 {
  overflow: hidden;
  text-overflow: ellipsis;
}

.c8 {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  color: #999A94;
}

<div
  className="c0 c1"
>
  <div
    className="c2"
  >
    V
  </div>
  <div
    className="c3"
  >
    <div
      checked={false}
      className="c4"
      kind="success"
    />
  </div>
  <div
    className="c5"
  >
    <h4
      className="c6 c7"
    >
      Title
    </h4>
    <small
      className="c8 c9"
    >
      Last data point time : 2015-06-12 12:00
    </small>
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart API 1`] = `
.c0 {
  height: 300px;
}

<div
  className="c0"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart RechartTooltip 1`] = `
.c2 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c3 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c4 {
  font-size: 0.923rem;
}

.c1 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c0 {
  padding: 8px;
}

<div
  className="c0 c1"
>
  <p
    className="c2"
  >
    formatter(1)
  </p>
  <div
    className="c3"
    color="grayBase"
  >
    <small
      className="c4"
    >
      labelFormatter(1532438716989)
    </small>
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart With isAnimationActive props 1`] = `
.c0 {
  height: 300px;
}

<div
  className="c0"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart With kind and type props 1`] = `
.c0 {
  height: 300px;
}

<div
  className="c0"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart With realtime data 1`] = `
.c0 {
  height: 300px;
}

<div
  className="c0"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DatetimePicker API 1`] = `
.c1 {
  padding-top: 80px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 40px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #353630;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 40px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #D1D2D3;
}

.c0 {
  position: relative;
  height: 200px;
  overflow: hidden;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: rgba(255,255,255,1);
}

.c0 > * {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
}

.c4 {
  position: absolute;
  height: 40px;
  left: 0;
  right: 0;
  top: 80px;
  border-top: 1px solid #D1D2D3;
  border-bottom: 1px solid #D1D2D3;
  pointer-events: none;
}

.c5 {
  position: absolute;
  height: 100%;
  left: 0;
  right: 0;
  background-image: linear-gradient(to bottom,rgba(255,255,255,0.95),rgba(255,255,255,0.6)),linear-gradient(to top,rgba(255,255,255,0.95),rgba(255,255,255,0.6));
  background-position: top,bottom;
  background-size: 100% 32px;
  background-repeat: no-repeat;
  pointer-events: none;
}

<div
  className="c0"
  defaultValue={1455780631722}
  onChange={[Function]}
>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="c1"
      style={
        Object {
          "marginTop": -0,
        }
      }
    >
      <div
        className="c2"
      >
        2016
      </div>
      <div
        className="c3"
      >
        2017
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="c1"
      style={
        Object {
          "marginTop": -40,
        }
      }
    >
      <div
        className="c3"
      >
        1
      </div>
      <div
        className="c2"
      >
        2
      </div>
      <div
        className="c3"
      >
        3
      </div>
      <div
        className="c3"
      >
        4
      </div>
      <div
        className="c3"
      >
        5
      </div>
      <div
        className="c3"
      >
        6
      </div>
      <div
        className="c3"
      >
        7
      </div>
      <div
        className="c3"
      >
        8
      </div>
      <div
        className="c3"
      >
        9
      </div>
      <div
        className="c3"
      >
        10
      </div>
      <div
        className="c3"
      >
        11
      </div>
      <div
        className="c3"
      >
        12
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="c1"
      style={
        Object {
          "marginTop": -680,
        }
      }
    >
      <div
        className="c3"
      >
        1
      </div>
      <div
        className="c3"
      >
        2
      </div>
      <div
        className="c3"
      >
        3
      </div>
      <div
        className="c3"
      >
        4
      </div>
      <div
        className="c3"
      >
        5
      </div>
      <div
        className="c3"
      >
        6
      </div>
      <div
        className="c3"
      >
        7
      </div>
      <div
        className="c3"
      >
        8
      </div>
      <div
        className="c3"
      >
        9
      </div>
      <div
        className="c3"
      >
        10
      </div>
      <div
        className="c3"
      >
        11
      </div>
      <div
        className="c3"
      >
        12
      </div>
      <div
        className="c3"
      >
        13
      </div>
      <div
        className="c3"
      >
        14
      </div>
      <div
        className="c3"
      >
        15
      </div>
      <div
        className="c3"
      >
        16
      </div>
      <div
        className="c3"
      >
        17
      </div>
      <div
        className="c2"
      >
        18
      </div>
      <div
        className="c3"
      >
        19
      </div>
      <div
        className="c3"
      >
        20
      </div>
      <div
        className="c3"
      >
        21
      </div>
      <div
        className="c3"
      >
        22
      </div>
      <div
        className="c3"
      >
        23
      </div>
      <div
        className="c3"
      >
        24
      </div>
      <div
        className="c3"
      >
        25
      </div>
      <div
        className="c3"
      >
        26
      </div>
      <div
        className="c3"
      >
        27
      </div>
      <div
        className="c3"
      >
        28
      </div>
      <div
        className="c3"
      >
        29
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="c1"
      style={
        Object {
          "marginTop": -280,
        }
      }
    >
      <div
        className="c3"
      >
        00
      </div>
      <div
        className="c3"
      >
        01
      </div>
      <div
        className="c3"
      >
        02
      </div>
      <div
        className="c3"
      >
        03
      </div>
      <div
        className="c3"
      >
        04
      </div>
      <div
        className="c3"
      >
        05
      </div>
      <div
        className="c3"
      >
        06
      </div>
      <div
        className="c2"
      >
        07
      </div>
      <div
        className="c3"
      >
        08
      </div>
      <div
        className="c3"
      >
        09
      </div>
      <div
        className="c3"
      >
        10
      </div>
      <div
        className="c3"
      >
        11
      </div>
      <div
        className="c3"
      >
        12
      </div>
      <div
        className="c3"
      >
        13
      </div>
      <div
        className="c3"
      >
        14
      </div>
      <div
        className="c3"
      >
        15
      </div>
      <div
        className="c3"
      >
        16
      </div>
      <div
        className="c3"
      >
        17
      </div>
      <div
        className="c3"
      >
        18
      </div>
      <div
        className="c3"
      >
        19
      </div>
      <div
        className="c3"
      >
        20
      </div>
      <div
        className="c3"
      >
        21
      </div>
      <div
        className="c3"
      >
        22
      </div>
      <div
        className="c3"
      >
        23
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="c1"
      style={
        Object {
          "marginTop": -1200,
        }
      }
    >
      <div
        className="c3"
      >
        00
      </div>
      <div
        className="c3"
      >
        01
      </div>
      <div
        className="c3"
      >
        02
      </div>
      <div
        className="c3"
      >
        03
      </div>
      <div
        className="c3"
      >
        04
      </div>
      <div
        className="c3"
      >
        05
      </div>
      <div
        className="c3"
      >
        06
      </div>
      <div
        className="c3"
      >
        07
      </div>
      <div
        className="c3"
      >
        08
      </div>
      <div
        className="c3"
      >
        09
      </div>
      <div
        className="c3"
      >
        10
      </div>
      <div
        className="c3"
      >
        11
      </div>
      <div
        className="c3"
      >
        12
      </div>
      <div
        className="c3"
      >
        13
      </div>
      <div
        className="c3"
      >
        14
      </div>
      <div
        className="c3"
      >
        15
      </div>
      <div
        className="c3"
      >
        16
      </div>
      <div
        className="c3"
      >
        17
      </div>
      <div
        className="c3"
      >
        18
      </div>
      <div
        className="c3"
      >
        19
      </div>
      <div
        className="c3"
      >
        20
      </div>
      <div
        className="c3"
      >
        21
      </div>
      <div
        className="c3"
      >
        22
      </div>
      <div
        className="c3"
      >
        23
      </div>
      <div
        className="c3"
      >
        24
      </div>
      <div
        className="c3"
      >
        25
      </div>
      <div
        className="c3"
      >
        26
      </div>
      <div
        className="c3"
      >
        27
      </div>
      <div
        className="c3"
      >
        28
      </div>
      <div
        className="c3"
      >
        29
      </div>
      <div
        className="c2"
      >
        30
      </div>
      <div
        className="c3"
      >
        31
      </div>
      <div
        className="c3"
      >
        32
      </div>
      <div
        className="c3"
      >
        33
      </div>
      <div
        className="c3"
      >
        34
      </div>
      <div
        className="c3"
      >
        35
      </div>
      <div
        className="c3"
      >
        36
      </div>
      <div
        className="c3"
      >
        37
      </div>
      <div
        className="c3"
      >
        38
      </div>
      <div
        className="c3"
      >
        39
      </div>
      <div
        className="c3"
      >
        40
      </div>
      <div
        className="c3"
      >
        41
      </div>
      <div
        className="c3"
      >
        42
      </div>
      <div
        className="c3"
      >
        43
      </div>
      <div
        className="c3"
      >
        44
      </div>
      <div
        className="c3"
      >
        45
      </div>
      <div
        className="c3"
      >
        46
      </div>
      <div
        className="c3"
      >
        47
      </div>
      <div
        className="c3"
      >
        48
      </div>
      <div
        className="c3"
      >
        49
      </div>
      <div
        className="c3"
      >
        50
      </div>
      <div
        className="c3"
      >
        51
      </div>
      <div
        className="c3"
      >
        52
      </div>
      <div
        className="c3"
      >
        53
      </div>
      <div
        className="c3"
      >
        54
      </div>
      <div
        className="c3"
      >
        55
      </div>
      <div
        className="c3"
      >
        56
      </div>
      <div
        className="c3"
      >
        57
      </div>
      <div
        className="c3"
      >
        58
      </div>
      <div
        className="c3"
      >
        59
      </div>
    </div>
  </MockReactHammerJS>
  <div
    className="c4"
  />
  <div
    className="c5"
  />
</div>
`;

exports[`Storyshots DatetimePickerDialog API 1`] = `
.c0 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c0:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c0::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

<div>
  <input
    className="c0"
    kind="primary"
    onClick={[Function]}
    readOnly={true}
    value="2016-05-18T07:30:31.722Z"
  />
</div>
`;

exports[`Storyshots Dialog API 1`] = `
<div>
  <div
    onClick={[Function]}
  >
    Click to OPEN!
  </div>
</div>
`;

exports[`Storyshots Dialog Confirm Dialog 1`] = `<MockPortal />`;

exports[`Storyshots DomAlign API 1`] = `
<div>
  <div>
    Target node
  </div>
  <div>
    Source node
  </div>
</div>
`;

exports[`Storyshots Heading API 1`] = `
.c0 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: currentColor;
}

<h1
  className="c0"
>
  Level 1
</h1>
`;

exports[`Storyshots Heading With color props 1`] = `
.c0 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #353630;
}

.c1 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #999A94;
}

.c2 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #D1D2D3;
}

.c3 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #FAFAFA;
}

.c4 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #FFFFFF;
}

.c5 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #00A1DE;
}

.c6 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #69BE28;
}

.c7 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #F5364E;
}

.c8 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #F39A1E;
}

<div>
  <h2
    className="c0"
    color="black"
  >
    Level 2 
    black
  </h2>
  <h2
    className="c1"
    color="grayBase"
  >
    Level 2 
    grayBase
  </h2>
  <h2
    className="c2"
    color="grayDark"
  >
    Level 2 
    grayDark
  </h2>
  <h2
    className="c3"
    color="grayLight"
  >
    Level 2 
    grayLight
  </h2>
  <h2
    className="c4"
    color="white"
  >
    Level 2 
    white
  </h2>
  <h2
    className="c3"
    color="default"
  >
    Level 2 
    default
  </h2>
  <h2
    className="c5"
    color="primary"
  >
    Level 2 
    primary
  </h2>
  <h2
    className="c6"
    color="success"
  >
    Level 2 
    success
  </h2>
  <h2
    className="c7"
    color="error"
  >
    Level 2 
    error
  </h2>
  <h2
    className="c8"
    color="warning"
  >
    Level 2 
    warning
  </h2>
</div>
`;

exports[`Storyshots Heading With level props 1`] = `
.c0 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: currentColor;
}

.c3 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
  color: currentColor;
}

.c1 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: currentColor;
}

.c2 {
  margin: 0;
  font-weight: normal;
  font-size: 1.38rem;
  color: currentColor;
}

.c4 {
  margin: 0;
  font-weight: normal;
  font-size: 1rem;
  color: currentColor;
}

<div>
  <h1
    className="c0"
  >
    h
    1
     - Level 
    1
       (
    2.46rem
     = 
    31.98px
    )
  </h1>
  <h2
    className="c1"
  >
    h
    2
     - Level 
    2
       (
    1.69rem
     = 
    21.97px
    )
  </h2>
  <h3
    className="c2"
  >
    h
    3
     - Level 
    3
       (
    1.38rem
     = 
    17.939999999999998px
    )
  </h3>
  <h4
    className="c3"
  >
    h
    4
     - Level 
    4
       (
    1.15rem
     = 
    14.95px
    )
  </h4>
  <h5
    className="c4"
  >
    h
    5
     - Level 
    5
       (
    1rem
     = 
    13px
    )
  </h5>
  <h6
    className="c4"
  >
    h
    6
     - Level 
    6
       (
    1rem
     = 
    13px
    )
  </h6>
</div>
`;

exports[`Storyshots Hr API 1`] = `
.c0 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  border: 0;
  border-top: 1px solid #D1D2D3;
}

<hr
  className="c0"
/>
`;

exports[`Storyshots Hr With children 1`] = `
.c1 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  border: 0;
  border-top: 1px solid #D1D2D3;
}

.c2 {
  font-size: 0.923rem;
  margin: 0 8px;
  color: #999A94;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
}

<div
  className="c0"
>
  <hr
    className="c1"
  />
  <div
    className="c2"
  >
    String
  </div>
  <hr
    className="c1"
  />
</div>
`;

exports[`Storyshots Icon [mcs-lite-icon] API 1`] = `
<svg
  fill="currentColor"
  height="1em"
  preserveAspectRatio="xMidYMid meet"
  viewBox="0 0 24 24"
  width="1em"
>
  <path
    d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
  />
</svg>
`;

exports[`Storyshots Icon [mcs-lite-icon] MorphReplace 1`] = `
<MockMorphReplace
  height={24}
  width={24}
>
  <svg
    fill="currentColor"
    height="1em"
    preserveAspectRatio="xMidYMid meet"
    viewBox="0 0 24 24"
    width="1em"
  >
    <path
      d="M19.9 13v-2h-12l5.5-5.5L12 4.1 4.1 12l7.9 7.9 1.4-1.4L7.9 13h12z"
    />
  </svg>
</MockMorphReplace>
`;

exports[`Storyshots Icon [mcs-lite-icon] Spin Icon 1`] = `
.c0 > * {
  -webkit-transform-origin: center center;
  -ms-transform-origin: center center;
  transform-origin: center center;
  -webkit-animation: iVXCSc 0.6s infinite cubic-bezier(0.41,0.01,0.58,1);
  animation: iVXCSc 0.6s infinite cubic-bezier(0.41,0.01,0.58,1);
}

<div
  className="c0"
>
  <svg
    fill="currentColor"
    height="1em"
    preserveAspectRatio="xMidYMid meet"
    viewBox="0 0 24 24"
    width="1em"
  >
    <path
      d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
      opacity=".3"
    />
    <path
      d="M12 4c4.4 0 8 3.6 8 8h2c0-5.5-4.5-10-10-10v2z"
    />
  </svg>
</div>
`;

exports[`Storyshots Img API 1`] = `
.c1 {
  height: 100%;
  width: 100%;
  background-image: url("http://placehold.it/350x150");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}

.c0 {
  height: 300px;
}

<div
  className="c0"
>
  <div
    className="c1"
    size="cover"
    src="http://placehold.it/350x150"
  />
</div>
`;

exports[`Storyshots Img With height override 1`] = `
.c1 {
  height: 100%;
  width: 100%;
  background-image: url("http://placehold.it/350x150");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}

.c0 {
  height: 100px;
}

<div
  className="c0 c1"
  size="cover"
  src="http://placehold.it/350x150"
/>
`;

exports[`Storyshots Img With size props 1`] = `
.c1 {
  height: 100%;
  width: 100%;
  background-image: url("http://placehold.it/350x150");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center center;
}

.c0 {
  height: 300px;
}

<div
  className="c0"
>
  <div
    className="c1"
    size="contain"
    src="http://placehold.it/350x150"
  />
</div>
`;

exports[`Storyshots Input API 1`] = `
.c0 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c0:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c0::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

<input
  className="c0"
  kind="primary"
  placeholder="placeholder"
/>
`;

exports[`Storyshots Input With focus props 1`] = `
.c0 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c0:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c0::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

<input
  className="c0"
  kind="primary"
  placeholder="placeholder"
/>
`;

exports[`Storyshots Input With kind props 1`] = `
.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #FAFAFA;
  box-shadow: 0 0 3px 0 rgba(250,250,250,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c3:focus {
  border-color: #69BE28;
  box-shadow: 0 0 3px 0 rgba(105,190,40,0.5);
}

.c3::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c4:focus {
  border-color: #F5364E;
  box-shadow: 0 0 3px 0 rgba(245,54,78,0.5);
}

.c4::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c5 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c5:focus {
  border-color: #F39A1E;
  box-shadow: 0 0 3px 0 rgba(243,154,30,0.5);
}

.c5::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c5::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c5:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c5::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0 > * {
  margin: 15px;
  width: 300px;
}

<div
  className="c0"
>
  <input
    className="c1"
    kind="default"
    placeholder="default"
  />
  <input
    className="c2"
    kind="primary"
    placeholder="primary"
  />
  <input
    className="c3"
    kind="success"
    placeholder="success"
  />
  <input
    className="c4"
    kind="error"
    placeholder="error"
  />
  <input
    className="c5"
    kind="warning"
    placeholder="warning"
  />
</div>
`;

exports[`Storyshots Input With type props 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c1:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0 > * {
  margin: 15px;
  width: 300px;
}

<div
  className="c0"
>
  <input
    className="c1"
    kind="primary"
    placeholder="text"
    type="text"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="email"
    type="email"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="number"
    type="number"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="password"
    type="password"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="tel"
    type="tel"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="search"
    type="search"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="month"
    type="month"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="week"
    type="week"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="date"
    type="date"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="color"
    type="color"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="file"
    type="file"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="radio"
    type="radio"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="time"
    type="time"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="url"
    type="url"
  />
  <input
    className="c1"
    kind="primary"
    placeholder="range"
    type="range"
  />
</div>
`;

exports[`Storyshots InputGroup API 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c4:hover {
  background-color: rgb(0,151,208);
}

.c4:active {
  background-color: rgb(0,144,198);
}

.c5 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(202,202,202);
}

.c5:hover {
  background-color: rgb(234,234,234);
}

.c5:active {
  background-color: rgb(223,223,223);
}

.c6 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F39A1E;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(196,124,24);
}

.c6:hover {
  background-color: rgb(228,144,28);
}

.c6:active {
  background-color: rgb(217,137,27);
}

.c8 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c8:hover {
  background-color: rgb(0,151,208);
}

.c8:active {
  background-color: rgb(0,144,198);
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 40px;
  height: 20px;
  padding: 0 5px;
  font-size: 0.923rem;
  border-color: rgb(0,130,179);
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c3 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: initial;
  min-width: 40px;
  height: 20px;
  padding: 0 5px;
  font-size: 0.923rem;
  border-color: rgb(202,202,202);
}

.c3:hover {
  background-color: rgb(234,234,234);
}

.c3:active {
  background-color: rgb(223,223,223);
}

.c7 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c7:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c7::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c7::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c7:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c7::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
}

.c1 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 > * {
  margin-bottom: 15px;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    <button
      className="c2"
    >
      Button 1
    </button>
    <button
      className="c3"
    >
      Button 2
    </button>
  </div>
  <div
    className="c1"
  >
    <button
      className="c4"
    >
      Button 1
    </button>
    <button
      className="c5"
    >
      Button Two
    </button>
    <button
      className="c6"
    >
      Button Three
    </button>
  </div>
  <div
    className="c1"
  >
    <button
      className="c4"
    >
      大於
    </button>
    <input
      className="c7"
      kind="primary"
      placeholder="預設值：20"
    />
  </div>
  <div
    className="c1"
  >
    <input
      className="c7"
      kind="primary"
      placeholder="Input 1"
    />
    <button
      className="c4"
    >
      Button 1
    </button>
  </div>
  <div
    className="c1"
  >
    <button
      className="c4"
    >
      Button 1
    </button>
    <input
      className="c7"
      kind="primary"
      placeholder="Input 1"
    />
    <button
      className="c4"
    >
      Button 2
    </button>
  </div>
  <div
    className="c1"
  >
    <button
      className="c4"
    >
      之間
    </button>
    <input
      className="c7"
      kind="primary"
      placeholder="預設值：0"
    />
    <button
      className="c8"
    >
      和
    </button>
    <input
      className="c7"
      kind="primary"
      placeholder="預設值：100"
    />
  </div>
</div>
`;

exports[`Storyshots InputRange API 1`] = `
.c0 {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  outline: none;
  background-color: rgba(0,0,0,0);
  cursor: pointer;
}

.c0::-webkit-slider-runnable-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c0::-moz-range-track {
  -moz-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c0::-moz-focus-outer {
  border: 0;
}

.c0::-ms-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c0::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c0::-moz-range-thumb {
  -moz-appearance: none;
  height: 40px;
  width: 40px;
  border-width: 0;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -moz-appearance: none;
  -moz-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c0::-ms-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c0::-webkit-slider-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c0::-moz-range-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c0::-ms-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

<input
  className="c0"
  kind="primary"
  type="range"
/>
`;

exports[`Storyshots InputRange With kind props 1`] = `
.c2 {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  outline: none;
  background-color: rgba(0,0,0,0);
  cursor: pointer;
}

.c2::-webkit-slider-runnable-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c2::-moz-range-track {
  -moz-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c2::-moz-focus-outer {
  border: 0;
}

.c2::-ms-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c2::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c2::-moz-range-thumb {
  -moz-appearance: none;
  height: 40px;
  width: 40px;
  border-width: 0;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -moz-appearance: none;
  -moz-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c2::-ms-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #00A1DE,inset 0 0 0 3px rgb(0,192,255);
}

.c2::-webkit-slider-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c2::-moz-range-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c2::-ms-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c1 {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  outline: none;
  background-color: rgba(0,0,0,0);
  cursor: pointer;
}

.c1::-webkit-slider-runnable-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c1::-moz-range-track {
  -moz-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c1::-moz-focus-outer {
  border: 0;
}

.c1::-ms-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c1::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #FAFAFA,inset 0 0 0 3px rgb(255,255,255);
}

.c1::-moz-range-thumb {
  -moz-appearance: none;
  height: 40px;
  width: 40px;
  border-width: 0;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -moz-appearance: none;
  -moz-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #FAFAFA,inset 0 0 0 3px rgb(255,255,255);
}

.c1::-ms-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #FAFAFA,inset 0 0 0 3px rgb(255,255,255);
}

.c1::-webkit-slider-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c1::-moz-range-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c1::-ms-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c3 {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  outline: none;
  background-color: rgba(0,0,0,0);
  cursor: pointer;
}

.c3::-webkit-slider-runnable-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c3::-moz-range-track {
  -moz-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c3::-moz-focus-outer {
  border: 0;
}

.c3::-ms-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c3::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #69BE28,inset 0 0 0 3px rgb(125,227,48);
}

.c3::-moz-range-thumb {
  -moz-appearance: none;
  height: 40px;
  width: 40px;
  border-width: 0;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -moz-appearance: none;
  -moz-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #69BE28,inset 0 0 0 3px rgb(125,227,48);
}

.c3::-ms-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #69BE28,inset 0 0 0 3px rgb(125,227,48);
}

.c3::-webkit-slider-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c3::-moz-range-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c3::-ms-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c4 {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  outline: none;
  background-color: rgba(0,0,0,0);
  cursor: pointer;
}

.c4::-webkit-slider-runnable-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c4::-moz-range-track {
  -moz-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c4::-moz-focus-outer {
  border: 0;
}

.c4::-ms-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c4::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #F5364E,inset 0 0 0 3px rgb(255,65,93);
}

.c4::-moz-range-thumb {
  -moz-appearance: none;
  height: 40px;
  width: 40px;
  border-width: 0;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -moz-appearance: none;
  -moz-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #F5364E,inset 0 0 0 3px rgb(255,65,93);
}

.c4::-ms-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #F5364E,inset 0 0 0 3px rgb(255,65,93);
}

.c4::-webkit-slider-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c4::-moz-range-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c4::-ms-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c5 {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 100%;
  outline: none;
  background-color: rgba(0,0,0,0);
  cursor: pointer;
}

.c5::-webkit-slider-runnable-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c5::-moz-range-track {
  -moz-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c5::-moz-focus-outer {
  border: 0;
}

.c5::-ms-track {
  -webkit-appearance: none;
  height: 16px;
  border-radius: 8px;
  background-image: linear-gradient(-180deg,#DFDFDF 5%,#F6F6F6 96%);
  box-shadow: inset 0 1px 2px 0 rgba(255,255,255,0.35),inset 0 0 0 2px #E5E6E6,inset 0 1px 10px 0 rgba(0,0,0,0.05);
}

.c5::-webkit-slider-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #F39A1E,inset 0 0 0 3px rgb(255,184,36);
}

.c5::-moz-range-thumb {
  -moz-appearance: none;
  height: 40px;
  width: 40px;
  border-width: 0;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -moz-appearance: none;
  -moz-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #F39A1E,inset 0 0 0 3px rgb(255,184,36);
}

.c5::-ms-thumb {
  -webkit-appearance: none;
  margin-top: -12px;
  height: 40px;
  width: 40px;
  border-radius: 50%;
  background-image: radial-gradient(50% 50%,#FFFFFF 50%,#FFFFFF 73%,#F8F8F8 81%,#EBEBEB 90%,#DDDDDD 95%);
  -webkit-transition: -webkit-transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  -webkit-transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  transition: transform 0.3s ease,width 0.2s ease,height 0.2s ease;
  box-shadow: 1px 1px 4px 0 rgba(0,0,0,0.25),inset 0 1px 3px 0 rgba(255,255,255,0.3),inset 0 -2px 2px 0 #F39A1E,inset 0 0 0 3px rgb(255,184,36);
}

.c5::-webkit-slider-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c5::-moz-range-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c5::-ms-thumb:hover {
  -webkit-transform: scale(1.1);
  -ms-transform: scale(1.1);
  transform: scale(1.1);
}

.c0 > * {
  margin: 15px;
  width: 300px;
}

<div
  className="c0"
>
  <input
    className="c1"
    kind="default"
    type="range"
  />
  <input
    className="c2"
    kind="primary"
    type="range"
  />
  <input
    className="c3"
    kind="success"
    type="range"
  />
  <input
    className="c4"
    kind="error"
    type="range"
  />
  <input
    className="c5"
    kind="warning"
    type="range"
  />
</div>
`;

exports[`Storyshots LandingHeader API 1`] = `
.c0 {
  height: 50px;
}

.c1 {
  z-index: 1;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: #FAFAFA;
  height: 50px;
  box-shadow: none;
  -webkit-transition: box-shadow cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: box-shadow cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

<header
  className="c0"
  offset={40}
>
  <div
    className="c1"
  >
    <div>
      Content
    </div>
  </div>
</header>
`;

exports[`Storyshots LandingHeader NavItemBurger 1`] = `
.c5 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c0 {
  height: 50px;
}

.c1 {
  z-index: 1;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: #FAFAFA;
  height: 50px;
  box-shadow: none;
  -webkit-transition: box-shadow cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: box-shadow cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 > *:first-child {
  padding-left: 0;
}

.c2 > *:last-child {
  padding-right: 0;
}

.c3 {
  height: 50px;
  padding: 0 15px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  color: #999A94;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

.c3:hover {
  color: #353630;
}

.c3 path {
  fill: currentColor;
}

.c4 {
  margin-right: 5px;
}

<header
  className="c0"
  offset={40}
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <div
        className="c3"
        onClick={[Function]}
      >
        <p
          className="c4 c5"
        >
          children
        </p>
        <svg
          height={24}
          viewBox="0 0 24 24"
          width={24}
        >
          <path
            d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
          />
        </svg>
      </div>
    </div>
  </div>
</header>
`;

exports[`Storyshots LandingHeader NavItemDropdown 1`] = `
.c5 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c0 {
  height: 50px;
}

.c1 {
  z-index: 1;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: #FAFAFA;
  height: 50px;
  box-shadow: none;
  -webkit-transition: box-shadow cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: box-shadow cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 > *:first-child {
  padding-left: 0;
}

.c2 > *:last-child {
  padding-right: 0;
}

.c3 {
  height: 50px;
  padding: 0 15px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  color: #999A94;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

.c3:hover {
  color: #353630;
}

.c3 path {
  fill: currentColor;
}

.c4 {
  margin-right: 5px;
}

.c6 {
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
}

<header
  className="c0"
  offset={40}
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <div
        className="c3"
        onClick={[Function]}
        onMouseOver={[Function]}
      >
        <p
          className="c4 c5"
        >
          Language
        </p>
        <svg
          className="c6"
          fill="currentColor"
          height={18}
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width={18}
        >
          <path
            d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
          />
        </svg>
      </div>
    </div>
  </div>
</header>
`;

exports[`Storyshots LandingHeader With Nav and NavItem 1`] = `
.c0 {
  height: 50px;
}

.c1 {
  z-index: 1;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: #FAFAFA;
  height: 50px;
  box-shadow: none;
  -webkit-transition: box-shadow cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: box-shadow cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 > *:first-child {
  padding-left: 0;
}

.c2 > *:last-child {
  padding-right: 0;
}

.c3 {
  height: 50px;
  padding: 0 15px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  color: #999A94;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

.c3:hover {
  color: #353630;
}

.c3 path {
  fill: currentColor;
}

.c4 {
  height: 50px;
  padding: 0 15px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  color: #353630;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

.c4:hover {
  color: #353630;
}

.c4 path {
  fill: currentColor;
}

.c5 {
  height: 50px;
  padding: 0 15px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  cursor: pointer;
  text-decoration: none;
  color: #999A94;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: default;
}

.c5:hover {
  color: #999A94;
}

.c5 path {
  fill: currentColor;
}

<header
  className="c0"
  offset={40}
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <div
        className="c3"
      >
        <svg
          fill="currentColor"
          height={24}
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width={24}
        >
          <path
            d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
          />
        </svg>
      </div>
      <div
        className="c3"
      >
        Nav Item 1
      </div>
      <div
        className="c4"
      >
        Nav Item 2 (active)
      </div>
      <div
        className="c5"
      >
        Nav Item 3 (disabled)
      </div>
    </div>
  </div>
</header>
`;

exports[`Storyshots LandingHeader With offset props 1`] = `
.c0 {
  height: 50px;
}

.c1 {
  z-index: 1;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: #FAFAFA;
  height: 50px;
  box-shadow: none;
  -webkit-transition: box-shadow cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: box-shadow cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

<header
  className="c0"
  offset={160}
>
  <div
    className="c1"
  >
    offset 160
  </div>
</header>
`;

exports[`Storyshots LazyloadOnce API 1`] = `
.c0 {
  height: 2800px;
  padding-top: 1800px;
  background-color: skyblue;
}

<div
  className="c0"
>
  <div
    style={
      Object {
        "height": 24,
      }
    }
  >
    <span
      style={
        Object {
          "fontSize": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots LazyloadOnce With component props 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c0 {
  height: 2800px;
  padding-top: 1800px;
  background-color: skyblue;
}

<div
  className="c0"
>
  <button
    className="c1"
    style={
      Object {
        "height": 24,
      }
    }
  >
    <span
      style={
        Object {
          "fontSize": 0,
        }
      }
    />
  </button>
</div>
`;

exports[`Storyshots Menu API for Menu 1`] = `
.c1 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 5px 0;
}

<div
  className="c0 c1"
>
  Children
</div>
`;

exports[`Storyshots Menu API for MenuItem 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 15px;
  min-width: 80px;
  cursor: pointer;
  box-sizing: border-box;
  color: #353630;
  min-height: 32px;
}

.c0 * {
  -webkit-transition: initial;
  transition: initial;
}

.c0:hover {
  background-color: #00A1DE;
  color: white;
}

.c0:hover * {
  color: white;
}

.c0:active {
  background-color: rgb(0,151,208);
  color: white;
}

.c0:active * {
  color: white;
}

<div>
  <div
    className="c0"
  >
    div tag (default)
  </div>
  <a
    className="c0"
  >
    a Tag
  </a>
</div>
`;

exports[`Storyshots Menu Fixed width 1`] = `
.c4 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: currentColor;
}

.c8 {
  font-weight: bold;
}

.c7 {
  color: #00A1DE;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c7:hover {
  color: rgb(0,151,208);
}

.c7:active {
  color: rgb(0,144,198);
}

.c5 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c6 {
  margin: 0;
  font-size: 1rem;
  color: #F5364E;
}

.c2 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c3 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 15px;
  min-width: 80px;
  cursor: pointer;
  box-sizing: border-box;
  color: #353630;
  min-height: 32px;
}

.c3 * {
  -webkit-transition: initial;
  transition: initial;
}

.c3:hover {
  background-color: #00A1DE;
  color: white;
}

.c3:hover * {
  color: white;
}

.c3:active {
  background-color: rgb(0,151,208);
  color: white;
}

.c3:active * {
  color: white;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 5px 0;
}

.c0 {
  width: 300px;
}

<div
  className="c0 c1 c2"
>
  <div
    className="c3"
    onClick={[Function]}
  >
    MenuItem 1
  </div>
  <div
    className="c3"
    onClick={[Function]}
  >
    MenuItem Content 2
  </div>
  <div
    className="c3"
    onClick={[Function]}
  >
    <h1
      className="c4"
    >
      MenuItem Heading 1
    </h1>
  </div>
  <div
    className="c3"
    onClick={[Function]}
  >
    <p
      className="c5"
    >
      MenuItem P
    </p>
  </div>
  <div
    className="c3"
    onClick={[Function]}
  >
    <p
      className="c6"
      color="error"
    >
      MenuItem P error
    </p>
  </div>
  <div
    className="c3"
    onClick={[Function]}
  >
    <a
      className="c7"
      color="primary"
    >
      MenuItem A
    </a>
  </div>
  <div
    className="c3"
    onClick={[Function]}
  >
    <b
      className="c8"
    >
      MenuItem B
    </b>
  </div>
  <div
    className="c3"
    onClick={[Function]}
  >
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 24 24"
      width="1em"
    >
      <path
        d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
      />
    </svg>
  </div>
  <a
    className="c3"
  >
    &lt;a&gt;
     Tag
  </a>
</div>
`;

exports[`Storyshots Menu Min width 1`] = `
.c1 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 0 15px;
  min-width: 80px;
  cursor: pointer;
  box-sizing: border-box;
  color: #353630;
  min-height: 32px;
}

.c2 * {
  -webkit-transition: initial;
  transition: initial;
}

.c2:hover {
  background-color: #00A1DE;
  color: white;
}

.c2:hover * {
  color: white;
}

.c2:active {
  background-color: rgb(0,151,208);
  color: white;
}

.c2:active * {
  color: white;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 5px 0;
}

<div
  className="c0 c1"
>
  <div
    className="c2"
    onClick={[Function]}
  >
    複製
  </div>
  <div
    className="c2"
    onClick={[Function]}
  >
    刪除
  </div>
</div>
`;

exports[`Storyshots MobileContentWrapper API 1`] = `
.c0 {
  max-width: 800px;
  height: 100%;
  box-sizing: border-box;
  margin: 0 auto;
}

.c1 {
  border: 1px dashed #353630;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    With max-width
  </div>
</div>
`;

exports[`Storyshots MobileDeviceCard API 1`] = `
.c5 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
  color: #353630;
}

.c1 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c3 {
  height: 100%;
  width: 100%;
  background-image: url("https://img.mediatek.com/600/mtk.linkit/productBanner.png");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}

.c0 {
  height: 120px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  -webkit-flex-grow: 2;
  -ms-flex-grow: 2;
  flex-grow: 2;
}

.c4 {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-basis: 0;
  flex-basis: 0;
  padding: 8px;
}

<div
  className="c0 c1"
>
  <div
    className="c2"
  >
    <div
      className="c3"
      size="cover"
      src="https://img.mediatek.com/600/mtk.linkit/productBanner.png"
    />
  </div>
  <div
    className="c4"
  >
    <h4
      className="c5"
      color="black"
    >
      <MockReactTextTruncate
        line={4}
        text="範例 B 的測試裝置"
        truncateText=" ..."
      />
    </h4>
  </div>
</div>
`;

exports[`Storyshots MobileDeviceCard Override height 1`] = `
.c6 {
  margin: 0;
  font-weight: normal;
  font-size: 1.15rem;
  color: #353630;
}

.c2 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c4 {
  height: 100%;
  width: 100%;
  background-image: url("https://img.mediatek.com/600/mtk.linkit/productBanner.png");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
}

.c1 {
  height: 120px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  -webkit-flex-grow: 2;
  -ms-flex-grow: 2;
  flex-grow: 2;
}

.c5 {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-flex-basis: 0;
  -ms-flex-basis: 0;
  flex-basis: 0;
  padding: 8px;
}

.c0 {
  height: 200px;
}

<div
  className="c0 c1 c2"
>
  <div
    className="c3"
  >
    <div
      className="c4"
      size="cover"
      src="https://img.mediatek.com/600/mtk.linkit/productBanner.png"
    />
  </div>
  <div
    className="c5"
  >
    <h4
      className="c6"
      color="black"
    >
      <MockReactTextTruncate
        line={4}
        text="範例 B 的測試裝置"
        truncateText=" ..."
      />
    </h4>
  </div>
</div>
`;

exports[`Storyshots MobileFixedFooter API 1`] = `
.c4 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 100%;
  min-width: initial;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c4:hover {
  background-color: rgb(0,151,208);
}

.c4:active {
  background-color: rgb(0,144,198);
}

.c3 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #FAFAFA;
  color: #999A94;
  border-radius: 3px;
  width: 100%;
  min-width: initial;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(202,202,202);
}

.c3:hover {
  background-color: rgb(234,234,234);
}

.c3:active {
  background-color: rgb(223,223,223);
}

.c1 {
  max-width: 800px;
  height: 100%;
  box-sizing: border-box;
  margin: 0 auto;
}

.c0 {
  position: fixed;
  width: 100%;
  bottom: 0;
  background-color: #FAFAFA;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
}

.c2 > * {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c2 > *:last-child {
  margin-left: 16px;
}

<footer
  className="c0"
>
  <div
    className="c1"
  >
    <div
      className="c2"
    >
      <button
        className="c3"
      >
        Cancel
      </button>
      <button
        className="c4"
      >
        Submit
      </button>
    </div>
  </div>
</footer>
`;

exports[`Storyshots MobileHeader API 1`] = `
.c8 {
  margin: 0;
  font-weight: normal;
  font-size: 1.38rem;
  color: #FFFFFF;
}

.c9 {
  font-weight: bold;
}

.c3 {
  max-width: 800px;
  height: 100%;
  box-sizing: border-box;
  margin: 0 auto;
}

.c0 {
  height: 56px;
}

.c1 {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: #00A1DE;
  height: 56px;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.3);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
  -webkit-flex-shrink: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  overflow: hidden;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c7 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

.c5 {
  color: #FFFFFF;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0 16px;
  font-size: 24px;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

<header
  className="c0"
>
  <MockPortal>
    <div
      className="c1"
    >
      <div
        className="c2 c3"
      >
        <div
          className="c4"
        >
          <a
            className="c5"
          >
            <svg
              fill="currentColor"
              height="1em"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 24 24"
              width="1em"
            >
              <path
                d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
              />
            </svg>
          </a>
        </div>
        <div
          className="c6"
        >
          <h3
            className="c7 c8"
            color="white"
          >
            <b
              className="c9"
            >
              Device List
            </b>
          </h3>
        </div>
        <div
          className="c10"
        />
      </div>
    </div>
  </MockPortal>
</header>
`;

exports[`Storyshots MobileHeader With right props 1`] = `
.c8 {
  margin: 0;
  font-weight: normal;
  font-size: 1.38rem;
  color: #FFFFFF;
}

.c9 {
  font-weight: bold;
}

.c3 {
  max-width: 800px;
  height: 100%;
  box-sizing: border-box;
  margin: 0 auto;
}

.c0 {
  height: 56px;
}

.c1 {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background-color: #00A1DE;
  height: 56px;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.3);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  overflow: hidden;
  -webkit-flex-shrink: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  overflow: hidden;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.c7 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  width: 100%;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

.c5 {
  color: #FFFFFF;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 0 16px;
  font-size: 24px;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

<header
  className="c0"
>
  <MockPortal>
    <div
      className="c1"
    >
      <div
        className="c2 c3"
      >
        <div
          className="c4"
        >
          <div
            className="c5"
          >
            <svg
              fill="currentColor"
              height="1em"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 24 24"
              width="1em"
            >
              <path
                d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
              />
            </svg>
          </div>
        </div>
        <div
          className="c6"
        >
          <h3
            className="c7 c8"
            color="white"
          >
            <b
              className="c9"
            >
              Device List
            </b>
          </h3>
        </div>
        <div
          className="c10"
        >
          <a
            className="c5"
          >
            <svg
              fill="currentColor"
              height="1em"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 24 24"
              width="1em"
            >
              <path
                d="M15.5 14h-.8l-.3-.3c1-1.1 1.6-2.6 1.6-4.2C16 5.9 13.1 3 9.5 3S3 5.9 3 9.5 5.9 16 9.5 16c1.6 0 3.1-.6 4.2-1.6l.3.3v.8l5 5 1.5-1.5-5-5zm-6 0C7 14 5 12 5 9.5S7 5 9.5 5 14 7 14 9.5 12 14 9.5 14z"
              />
            </svg>
          </a>
        </div>
      </div>
    </div>
  </MockPortal>
</header>
`;

exports[`Storyshots MorphReplace API 1`] = `
<div>
  <svg
    height={24}
    viewBox="0 0 24 24"
    width={24}
  >
    <path
      d="M19.9 13v-2h-12l5.5-5.5L12 4.1 4.1 12l7.9 7.9 1.4-1.4L7.9 13h12z"
    />
  </svg>
  <svg
    height={24}
    viewBox="0 0 24 24"
    width={24}
  >
    <path
      d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
    />
  </svg>
  <svg
    height={24}
    viewBox="0 0 24 24"
    width={24}
  >
    <path
      d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
    />
  </svg>
  <svg
    height={24}
    viewBox="0 0 24 24"
    width={24}
  >
    <path
      d="M6 6h12v12H6V6z"
    />
  </svg>
  <svg
    height={24}
    viewBox="0 0 24 24"
    width={24}
  >
    <path
      d="M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z"
    />
  </svg>
</div>
`;

exports[`Storyshots Notification API 1`] = `
.c0 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  padding: 10px 20px;
  background-color: rgba(53,54,48,0.9);
  color: #FFFFFF;
  font-size: 1rem;
}

.c0 > *:nth-child(2) {
  margin-left: 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
}

<div
  className="c0"
>
  Do you want to go to Enalish version website?
</div>
`;

exports[`Storyshots Notification With feedbck Button component 1`] = `
.c1 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c2 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c2:hover {
  background-color: rgb(0,151,208);
}

.c2:active {
  background-color: rgb(0,144,198);
}

.c0 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
  padding: 10px 20px;
  background-color: rgba(53,54,48,0.9);
  color: #FFFFFF;
  font-size: 1rem;
}

.c0 > *:nth-child(2) {
  margin-left: 8px;
  -webkit-flex-shrink: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
}

<div
  className="c0"
>
  <p
    className="c1"
  >
    Do you want to go to Enalish version website?
  </p>
  <button
    className="c2"
  >
    Yes, please
  </button>
</div>
`;

exports[`Storyshots Overlay API 1`] = `
.c0 {
  color: #00A1DE;
  -webkit-transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
  text-decoration: none;
}

.c0:hover {
  color: rgb(0,151,208);
}

.c0:active {
  color: rgb(0,144,198);
}

<div>
  <a
    className="c0"
    color="primary"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    Hover me
  </a>
  <MockPortal />
</div>
`;

exports[`Storyshots Overlay Dropdown Menu 1`] = `
.c1 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: initial;
  min-width: 80px;
  height: 32px;
  padding: 6px 15px;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c1:hover {
  background-color: rgb(0,151,208);
}

.c1:active {
  background-color: rgb(0,144,198);
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-between;
  -webkit-justify-content: space-between;
  -ms-flex-pack: space-between;
  justify-content: space-between;
}

<div
  className="c0"
>
  <div>
    <button
      className="c1"
      onClick={[Function]}
    >
      Button
    </button>
  </div>
  <div>
    <button
      className="c1"
      onClick={[Function]}
    >
      Button
    </button>
  </div>
  <div>
    <button
      className="c1"
      onClick={[Function]}
    >
      Button
    </button>
  </div>
</div>
`;

exports[`Storyshots P API 1`] = `
.c0 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

<p
  className="c0"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur esse dolore incididunt incididunt aliquip pariatur est minim officia sit. Nulla pariatur duis duis quis commodo cupidatat voluptate enim culpa elit adipisicing do cupidatat sint anim. Cillum elit magna occaecat proident sit cupidatat ad quis sunt id culpa culpa. Ad duis nulla in incididunt amet consequat officia ad voluptate voluptate. Pariatur eiusmod ullamco cupidatat non magna officia aute magna deserunt qui aute dolor eu. Qui amet non ex cillum sunt ad velit consequat ipsum velit.
</p>
`;

exports[`Storyshots P Nested children with div 1`] = `
.c0 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

<div
  className="c0"
>
  <div>
    <span>
      Qui amet non ex cillum sunt ad velit consequat ipsum velit.
    </span>
  </div>
</div>
`;

exports[`Storyshots P With color props 1`] = `
.c5 {
  margin: 0;
  font-size: 1rem;
  color: #00A1DE;
}

.c1 {
  margin: 0;
  font-size: 1rem;
  color: #999A94;
}

.c7 {
  margin: 0;
  font-size: 1rem;
  color: #F5364E;
}

.c0 {
  margin: 0;
  font-size: 1rem;
  color: #353630;
}

.c2 {
  margin: 0;
  font-size: 1rem;
  color: #D1D2D3;
}

.c3 {
  margin: 0;
  font-size: 1rem;
  color: #FAFAFA;
}

.c4 {
  margin: 0;
  font-size: 1rem;
  color: #FFFFFF;
}

.c6 {
  margin: 0;
  font-size: 1rem;
  color: #69BE28;
}

.c8 {
  margin: 0;
  font-size: 1rem;
  color: #F39A1E;
}

<div>
  <div
    className="c0"
    color="black"
  >
    Paragraph 
    black
  </div>
  <div
    className="c1"
    color="grayBase"
  >
    Paragraph 
    grayBase
  </div>
  <div
    className="c2"
    color="grayDark"
  >
    Paragraph 
    grayDark
  </div>
  <div
    className="c3"
    color="grayLight"
  >
    Paragraph 
    grayLight
  </div>
  <div
    className="c4"
    color="white"
  >
    Paragraph 
    white
  </div>
  <div
    className="c3"
    color="default"
  >
    Paragraph 
    default
  </div>
  <div
    className="c5"
    color="primary"
  >
    Paragraph 
    primary
  </div>
  <div
    className="c6"
    color="success"
  >
    Paragraph 
    success
  </div>
  <div
    className="c7"
    color="error"
  >
    Paragraph 
    error
  </div>
  <div
    className="c8"
    color="warning"
  >
    Paragraph 
    warning
  </div>
</div>
`;

exports[`Storyshots Panel API 1`] = `
.c0 {
  width: 100%;
  border-radius: 3px;
  overflow: hidden;
  background-color: #FFFFFF;
}

.c0 > header {
  background-color: #FAFAFA;
  box-shadow: 0 1px 1px 0 rgba(0,0,0,0.05);
  height: 50px;
}

.c0 > main,
.c0 > footer {
  padding: 20px;
}

<div
  className="c0"
>
  <header>
    Panel Header (header)
  </header>
  <main>
    Panel body (main)
  </main>
  <footer>
    footer
  </footer>
</div>
`;

exports[`Storyshots Picker API 1`] = `
.c1 {
  padding-top: 80px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 40px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #353630;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 40px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: #D1D2D3;
}

.c0 {
  position: relative;
  height: 200px;
  overflow: hidden;
  cursor: default;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  background-color: rgba(255,255,255,1);
}

.c0 > * {
  -webkit-flex-grow: 1;
  -ms-flex-grow: 1;
  flex-grow: 1;
}

.c4 {
  position: absolute;
  height: 40px;
  left: 0;
  right: 0;
  top: 80px;
  border-top: 1px solid #D1D2D3;
  border-bottom: 1px solid #D1D2D3;
  pointer-events: none;
}

.c5 {
  position: absolute;
  height: 100%;
  left: 0;
  right: 0;
  background-image: linear-gradient(to bottom,rgba(255,255,255,0.95),rgba(255,255,255,0.6)),linear-gradient(to top,rgba(255,255,255,0.95),rgba(255,255,255,0.6));
  background-position: top,bottom;
  background-size: 100% 32px;
  background-repeat: no-repeat;
  pointer-events: none;
}

<div
  className="c0"
>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="c1"
      style={
        Object {
          "marginTop": -0,
        }
      }
    >
      <div
        className="c2"
      >
        Apple
      </div>
      <div
        className="c3"
      >
        Pen
      </div>
      <div
        className="c3"
      >
        Apple pen
      </div>
      <div
        className="c3"
      >
        Pineapple
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="c1"
      style={
        Object {
          "marginTop": -40,
        }
      }
    >
      <div
        className="c3"
      >
        PPAP
      </div>
      <div
        className="c2"
      >
        PAPA
      </div>
    </div>
  </MockReactHammerJS>
  <div
    className="c4"
  />
  <div
    className="c5"
  />
</div>
`;

exports[`Storyshots PreventDrag API 1`] = `
.c0 {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-user-drag: none;
}

<div>
  <img
    alt=""
    src="http://placehold.it/350x150"
  />
  <div
    className="c0"
    onDragStart={[Function]}
    onDrop={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
  >
    <img
      alt=""
      src="http://placehold.it/350x150"
    />
  </div>
  <a
    href=""
  >
    Link content
  </a>
  <div
    className="c0"
    onDragStart={[Function]}
    onDrop={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
  >
    <a
      href=""
    >
      Link content (PreventDrag)
    </a>
  </div>
</div>
`;

exports[`Storyshots PullToRefresh API 1`] = `
.c3 {
  margin: 0;
  font-weight: normal;
  font-size: 1.69rem;
  color: #999A94;
}

.c7 {
  margin: 0;
  font-weight: normal;
  font-size: 1.38rem;
  color: #FFFFFF;
}

.c6 {
  margin: 0;
  font-weight: normal;
  font-size: 2.46rem;
  color: #FFFFFF;
}

.c1 {
  -webkit-transition: all .25s ease;
  transition: all .25s ease;
}

.c2 {
  margin-top: -60px;
  height: 60px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c2 > * {
  -webkit-transition: all 0.25s ease;
  transition: all 0.25s ease;
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c0 {
  overflow: hidden;
  background-color: #FAFAFA;
}

.c4 {
  height: 500px;
  background-color: #00A1DE;
}

.c5 {
  text-align: center;
  padding: 15px;
}

<div
  className="c0"
>
  <MockReactHammerJS
    direction="DIRECTION_DOWN"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x pan-y",
      }
    }
  >
    <div
      className="c1"
      style={
        Object {
          "marginTop": 0,
        }
      }
    >
      <div
        className="c2"
      >
        <h2
          className="c3"
          color="grayBase"
        >
          <svg
            fill="currentColor"
            height="1em"
            preserveAspectRatio="xMidYMid meet"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 18.9l5-5h-3.8V5.1h-2.5v8.8H7l5 5z"
            />
          </svg>
        </h2>
      </div>
      <section
        className="c4"
      >
        <h1
          className="c5 c6"
          color="white"
        >
          Pull me down
        </h1>
        <h3
          className="c5 c7"
          color="white"
        >
          (API will respond after 3 seconds.)
        </h3>
      </section>
    </div>
  </MockReactHammerJS>
</div>
`;

exports[`Storyshots Select API - ReadOnly 1`] = `
.c5 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c5:hover {
  background-color: rgb(0,151,208);
}

.c5:active {
  background-color: rgb(0,144,198);
}

.c3 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c3:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c3::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
}

.c2 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c2 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c2 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c1 {
  position: absolute;
  width: 100%;
  pointer-events: none;
}

.c0 {
  position: relative;
}

.c6 {
  width: 100%;
  border: 0;
  height: 32px;
  background-color: #FFFFFF;
  outline: 0;
  font-size: 1rem;
  color: #353630;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4 {
  font-size: 18px;
}

.c4 > * {
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

<div
  className="c0"
>
  <div
    className="c1 c2"
  >
    <input
      className="c3"
      kind="primary"
      placeholder={undefined}
      readOnly={true}
      value="value 2"
    />
    <button
      className="c4 c5"
    >
      <svg
        fill="currentColor"
        height="1em"
        preserveAspectRatio="xMidYMid meet"
        viewBox="0 0 24 24"
        width="1em"
      >
        <path
          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
        />
      </svg>
    </button>
  </div>
  <select
    className="c6"
    onBlur={[Function]}
    onFocus={[Function]}
    readOnly={true}
    value={2}
  >
    <option
      value={1}
    >
      value 1
    </option>
    <option
      value={2}
    >
      value 2
    </option>
  </select>
</div>
`;

exports[`Storyshots Select With disabled props 1`] = `
.c5 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #00A1DE;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(0,130,179);
}

.c5:hover {
  background-color: rgb(0,151,208);
}

.c5:active {
  background-color: rgb(0,144,198);
}

.c3 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c3:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c3::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
}

.c2 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c2 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c2 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c1 {
  position: absolute;
  width: 100%;
  pointer-events: none;
}

.c0 {
  position: relative;
}

.c6 {
  width: 100%;
  border: 0;
  height: 32px;
  background-color: #FFFFFF;
  outline: 0;
  font-size: 1rem;
  color: #353630;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4 {
  font-size: 18px;
}

.c4 > * {
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

<div
  className="c0"
>
  <div
    className="c1 c2"
  >
    <input
      className="c3"
      kind="primary"
      placeholder="選擇資料通道"
      readOnly={true}
      value=""
    />
    <button
      className="c4 c5"
    >
      <svg
        fill="currentColor"
        height="1em"
        preserveAspectRatio="xMidYMid meet"
        viewBox="0 0 24 24"
        width="1em"
      >
        <path
          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
        />
      </svg>
    </button>
  </div>
  <select
    className="c6"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    value="SELECT/PLACEHOLDER_VALUE"
  >
    <option
      disabled={true}
      value="SELECT/PLACEHOLDER_VALUE"
    >
      選擇資料通道
    </option>
    <option
      value={1}
    >
      value 1
    </option>
    <option
      value={2}
    >
      value 2
    </option>
    <option
      disabled={true}
      value={3}
    >
      value 3
    </option>
  </select>
</div>
`;

exports[`Storyshots Select With kind props 1`] = `
.c5 {
  border-width: 1px;
  border-style: solid;
  outline: none;
  box-sizing: border-box;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  line-height: 0;
  cursor: pointer;
  background-color: #F39A1E;
  color: #FFFFFF;
  border-radius: 3px;
  width: 32px;
  min-width: initial;
  height: 32px;
  padding: 0;
  font-size: 1rem;
  border-color: rgb(196,124,24);
}

.c5:hover {
  background-color: rgb(228,144,28);
}

.c5:active {
  background-color: rgb(217,137,27);
}

.c3 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 0 10px;
  line-height: 1;
  min-height: 32px;
  color: #353630;
  font-size: 1rem;
  border-color: #D1D2D3;
  box-shadow: none;
}

.c3:focus {
  border-color: #F39A1E;
  box-shadow: 0 0 3px 0 rgba(243,154,30,0.5);
}

.c3::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 > button {
  -webkit-flex-shrink: 0;
  -ms-flex-shrink: 0;
  flex-shrink: 0;
}

.c2 > *:first-child {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c2 > *:not(:first-child):not(:last-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c2 > *:last-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c1 {
  position: absolute;
  width: 100%;
  pointer-events: none;
}

.c0 {
  position: relative;
}

.c6 {
  width: 100%;
  border: 0;
  height: 32px;
  background-color: #FFFFFF;
  outline: 0;
  font-size: 1rem;
  color: #353630;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4 {
  font-size: 18px;
}

.c4 > * {
  -webkit-transition: -webkit-transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  transition: transform 0.4s cubic-bezier(0.68,-0.55,0.27,1.55);
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

<div
  className="c0"
>
  <div
    className="c1 c2"
  >
    <input
      className="c3"
      kind="warning"
      placeholder={undefined}
      readOnly={true}
      value="value 2"
    />
    <button
      className="c4 c5"
    >
      <svg
        fill="currentColor"
        height="1em"
        preserveAspectRatio="xMidYMid meet"
        viewBox="0 0 24 24"
        width="1em"
      >
        <path
          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
        />
      </svg>
    </button>
  </div>
  <select
    className="c6"
    onBlur={[Function]}
    onFocus={[Function]}
    readOnly={true}
    value={2}
  >
    <option
      value={1}
    >
      value 1
    </option>
    <option
      value={2}
    >
      value 2
    </option>
  </select>
</div>
`;

exports[`Storyshots Small API 1`] = `
.c0 {
  font-size: 0.923rem;
}

<small
  className="c0"
>
  Small content
</small>
`;

exports[`Storyshots Small With color 1`] = `
.c0 {
  margin: 0;
  font-size: 1rem;
  color: #00A1DE;
}

.c1 {
  font-size: 0.923rem;
}

<div
  className="c0"
  color="primary"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="c1"
  >
     Small content 
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Small Within <P> 1`] = `
.c0 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c1 {
  font-size: 0.923rem;
}

<div
  className="c0"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="c1"
  >
     Small content 
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots SpaceTop API 1`] = `
.c0 {
  margin-top: 20px;
}

<div
  className="c0"
  height={20}
>
  SpaceTop content
</div>
`;

exports[`Storyshots Spin API 1`] = `
.c0 > * {
  -webkit-transform-origin: center center;
  -ms-transform-origin: center center;
  transform-origin: center center;
  -webkit-animation: iVXCSc 0.6s infinite cubic-bezier(0.41,0.01,0.58,1);
  animation: iVXCSc 0.6s infinite cubic-bezier(0.41,0.01,0.58,1);
}

.c1 {
  display: inline-block;
}

<div
  className="c0"
>
  <div
    className="c1"
  >
    Content
  </div>
</div>
`;

exports[`Storyshots StatusLight API 1`] = `
.c0 {
  width: 12px;
}

.c0 > * {
  fill: #D1D2D3;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

<svg
  className="c0"
  color="grayDark"
  viewBox="0 0 20 20"
>
  <circle
    cx="10"
    cy="10"
    r="10"
  />
</svg>
`;

exports[`Storyshots StatusLight Custom width 1`] = `
.c1 {
  width: 12px;
}

.c1 > * {
  fill: #F39A1E;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c0 {
  width: 100px;
}

<svg
  className="c0 c1"
  color="warning"
  viewBox="0 0 20 20"
>
  <circle
    cx="10"
    cy="10"
    r="10"
  />
</svg>
`;

exports[`Storyshots StatusLight With color props 1`] = `
.c2 {
  width: 12px;
}

.c2 > * {
  fill: #D1D2D3;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c6 {
  width: 12px;
}

.c6 > * {
  fill: #69BE28;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c0 {
  width: 12px;
}

.c0 > * {
  fill: #353630;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c1 {
  width: 12px;
}

.c1 > * {
  fill: #999A94;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c3 {
  width: 12px;
}

.c3 > * {
  fill: #FAFAFA;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c4 {
  width: 12px;
}

.c4 > * {
  fill: #FFFFFF;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c5 {
  width: 12px;
}

.c5 > * {
  fill: #00A1DE;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c7 {
  width: 12px;
}

.c7 > * {
  fill: #F5364E;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

.c8 {
  width: 12px;
}

.c8 > * {
  fill: #F39A1E;
  -webkit-transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: fill cubic-bezier(0.47,0,0.75,0.72) 0.3s;
}

<div>
  <div>
    <svg
      className="c0"
      color="black"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    black
  </div>
  <div>
    <svg
      className="c1"
      color="grayBase"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    grayBase
  </div>
  <div>
    <svg
      className="c2"
      color="grayDark"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    grayDark
  </div>
  <div>
    <svg
      className="c3"
      color="grayLight"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    grayLight
  </div>
  <div>
    <svg
      className="c4"
      color="white"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    white
  </div>
  <div>
    <svg
      className="c3"
      color="default"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    default
  </div>
  <div>
    <svg
      className="c5"
      color="primary"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    primary
  </div>
  <div>
    <svg
      className="c6"
      color="success"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    success
  </div>
  <div>
    <svg
      className="c7"
      color="error"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    error
  </div>
  <div>
    <svg
      className="c8"
      color="warning"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    warning
  </div>
</div>
`;

exports[`Storyshots Switch API 1`] = `
.c0 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #999A94;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c0::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 0;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c1 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #69BE28;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c1::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 32px;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

<div>
  <div
    checked={false}
    className="c0"
    kind="success"
  />
  <div
    checked={true}
    className="c1"
    kind="success"
  />
</div>
`;

exports[`Storyshots Switch Overriding style 1`] = `
.c1 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #999A94;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c1::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 0;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c0 {
  background-color: aliceblue;
}

.c0::after {
  background-color: cornflowerblue;
}

<div
  checked={false}
  className="c0 c1"
  kind="success"
  onClick={[Function]}
/>
`;

exports[`Storyshots Switch Stateful switch 1`] = `
.c0 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #999A94;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c0::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 0;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

<div
  checked={false}
  className="c0"
  kind="success"
  onClick={[Function]}
/>
`;

exports[`Storyshots Switch With kind props 1`] = `
.c2 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #69BE28;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c2::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 32px;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c0 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #FAFAFA;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c0::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 32px;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c1 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #00A1DE;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c1::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 32px;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c3 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #F5364E;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c3::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 32px;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c4 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #F39A1E;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c4::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 32px;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

<div>
  <div
    checked={true}
    className="c0"
    kind="default"
  />
  <div
    checked={true}
    className="c1"
    kind="primary"
  />
  <div
    checked={true}
    className="c2"
    kind="success"
  />
  <div
    checked={true}
    className="c3"
    kind="error"
  />
  <div
    checked={true}
    className="c4"
    kind="warning"
  />
</div>
`;

exports[`Storyshots Switch With scaling 1`] = `
.c1 {
  position: relative;
  height: 50px;
  width: 82px;
  box-sizing: border-box;
  border-radius: 24px;
  -webkit-transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: background-color cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  cursor: pointer;
  background-color: #999A94;
  -webkit-transform-origin: 0 0;
  -ms-transform-origin: 0 0;
  transform-origin: 0 0;
}

.c1::after {
  content: " ";
  position: absolute;
  width: 42px;
  height: 42px;
  border-radius: 50%;
  background-color: #FFFFFF;
  cursor: pointer;
  box-shadow: 0 3px 6px rgba(0,0,0,0.17);
  top: 3px;
  left: 0;
  -webkit-transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  transition: left cubic-bezier(0.47,0,0.75,0.72) 0.2s;
  margin: 0 3px;
  border: 1px solid rgba(0,0,0,0.1);
}

.c0 {
  -webkit-transform: scale(0.48);
  -ms-transform: scale(0.48);
  transform: scale(0.48);
}

<div
  checked={false}
  className="c0 c1"
  kind="primary"
  onClick={[Function]}
/>
`;

exports[`Storyshots TabItem API 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  height: 32px;
  border-bottom-width: 2px;
  border-bottom-style: solid;
  border-bottom-color: transparent;
  color: #353630;
  font-size: 1rem;
  padding: 0 15px;
  -webkit-transition: border-color cubic-bezier(0.47,0,0.75,0.72) 0.1s,color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: border-color cubic-bezier(0.47,0,0.75,0.72) 0.1s,color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

.c0:hover {
  color: rgb(0,151,208);
}

.c0:active {
  color: rgb(0,144,198);
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  height: 32px;
  border-bottom-width: 2px;
  border-bottom-style: solid;
  border-bottom-color: #00A1DE;
  color: #00A1DE;
  font-size: 1rem;
  padding: 0 15px;
  -webkit-transition: border-color cubic-bezier(0.47,0,0.75,0.72) 0.1s,color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: border-color cubic-bezier(0.47,0,0.75,0.72) 0.1s,color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

.c1:hover {
  color: rgb(0,151,208);
}

.c1:active {
  color: rgb(0,144,198);
}

<div>
  <div
    className="c0"
    color="primary"
    onClick={[Function]}
    value="key"
  >
    TabItem
  </div>
  <div
    className="c1"
    color="primary"
    onClick={[Function]}
    value="key"
  >
    Active TabItem
  </div>
</div>
`;

exports[`Storyshots TabItem With color props 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  height: 32px;
  border-bottom-width: 2px;
  border-bottom-style: solid;
  border-bottom-color: transparent;
  color: #353630;
  font-size: 1rem;
  padding: 0 15px;
  -webkit-transition: border-color cubic-bezier(0.47,0,0.75,0.72) 0.1s,color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: border-color cubic-bezier(0.47,0,0.75,0.72) 0.1s,color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

.c0:hover {
  color: rgb(228,144,28);
}

.c0:active {
  color: rgb(217,137,27);
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  height: 32px;
  border-bottom-width: 2px;
  border-bottom-style: solid;
  border-bottom-color: #F39A1E;
  color: #F39A1E;
  font-size: 1rem;
  padding: 0 15px;
  -webkit-transition: border-color cubic-bezier(0.47,0,0.75,0.72) 0.1s,color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: border-color cubic-bezier(0.47,0,0.75,0.72) 0.1s,color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

.c1:hover {
  color: rgb(228,144,28);
}

.c1:active {
  color: rgb(217,137,27);
}

<div>
  <div
    className="c0"
    color="warning"
    onClick={[Function]}
    value={1}
  >
    TabItem 1
  </div>
  <div
    className="c1"
    color="warning"
    onClick={[Function]}
    value={2}
  >
    TabItem 2
  </div>
</div>
`;

exports[`Storyshots TabItem With state 1`] = `
.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  box-sizing: border-box;
  height: 32px;
  border-bottom-width: 2px;
  border-bottom-style: solid;
  border-bottom-color: transparent;
  color: #353630;
  font-size: 1rem;
  padding: 0 15px;
  -webkit-transition: border-color cubic-bezier(0.47,0,0.75,0.72) 0.1s,color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  transition: border-color cubic-bezier(0.47,0,0.75,0.72) 0.1s,color cubic-bezier(0.47,0,0.75,0.72) 0.3s;
  cursor: pointer;
}

.c0:hover {
  color: rgb(0,151,208);
}

.c0:active {
  color: rgb(0,144,198);
}

<div>
  <div
    className="c0"
    color="primary"
    onClick={[Function]}
    value={1}
  >
    Tab 1
  </div>
  <div
    className="c0"
    color="primary"
    onClick={[Function]}
    value={2}
  >
    Tab 2
  </div>
  <div
    className="c0"
    color="primary"
    onClick={[Function]}
    value={3}
  >
    Tab 3
  </div>
</div>
`;

exports[`Storyshots Table API 1`] = `
.c0 {
  width: 100%;
  border-collapse: collapse;
}

.c0 thead tr {
  background-color: #FAFAFA;
  color: #999A94;
}

.c0 thead tr > * {
  padding: 8px 0 8px 16px;
}

.c0 tr {
  border-bottom: 1px solid #F1F2F7;
}

.c0 tr > * {
  padding: 16px 0 16px 16px;
}

.c0 th {
  text-align: left;
}

<table
  className="c0"
  style={
    Object {
      "backgroundColor": "white",
    }
  }
>
  <thead>
    <tr>
      <th>
        #
      </th>
      <th>
        First Name
      </th>
      <th>
        Last Name
      </th>
      <th>
        Username
      </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>
        1
      </th>
      <td>
        Michael
      </td>
      <td>
        Hsu
      </td>
      <td>
        @evenchange4
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots TextCenter API 1`] = `
.c0 {
  text-align: center;
}

<div
  className="c0"
>
  Center
</div>
`;

exports[`Storyshots Textarea API 1`] = `
.c0 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 5px 10px;
  color: #353630;
  border-color: #D1D2D3;
  font-size: 1rem;
}

.c0:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c0::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c0:disabled {
  background-color: #FFFFFF;
}

<textarea
  className="c0"
  kind="primary"
  placeholder="placeholder"
  rows="3"
/>
`;

exports[`Storyshots Textarea With kind props 1`] = `
.c2 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 5px 10px;
  color: #353630;
  border-color: #D1D2D3;
  font-size: 1rem;
}

.c2:focus {
  border-color: #00A1DE;
  box-shadow: 0 0 3px 0 rgba(0,161,222,0.5);
}

.c2::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c2:disabled {
  background-color: #FFFFFF;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 5px 10px;
  color: #353630;
  border-color: #D1D2D3;
  font-size: 1rem;
}

.c1:focus {
  border-color: #FAFAFA;
  box-shadow: 0 0 3px 0 rgba(250,250,250,0.5);
}

.c1::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c1:disabled {
  background-color: #FFFFFF;
}

.c3 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 5px 10px;
  color: #353630;
  border-color: #D1D2D3;
  font-size: 1rem;
}

.c3:focus {
  border-color: #69BE28;
  box-shadow: 0 0 3px 0 rgba(105,190,40,0.5);
}

.c3::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c3:disabled {
  background-color: #FFFFFF;
}

.c4 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 5px 10px;
  color: #353630;
  border-color: #D1D2D3;
  font-size: 1rem;
}

.c4:focus {
  border-color: #F5364E;
  box-shadow: 0 0 3px 0 rgba(245,54,78,0.5);
}

.c4::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c4:disabled {
  background-color: #FFFFFF;
}

.c5 {
  box-sizing: border-box;
  width: 100%;
  border-width: 1px;
  border-style: solid;
  border-radius: 3px;
  outline: 0;
  padding: 5px 10px;
  color: #353630;
  border-color: #D1D2D3;
  font-size: 1rem;
}

.c5:focus {
  border-color: #F39A1E;
  box-shadow: 0 0 3px 0 rgba(243,154,30,0.5);
}

.c5::-webkit-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c5::-moz-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c5:-ms-input-placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c5::placeholder {
  opacity: 1;
  color: #D1D2D3;
}

.c5:disabled {
  background-color: #FFFFFF;
}

.c0 > * {
  margin: 15px;
  width: 300px;
}

<div
  className="c0"
>
  <textarea
    className="c1"
    kind="default"
    placeholder="default"
  />
  <textarea
    className="c2"
    kind="primary"
    placeholder="primary"
  />
  <textarea
    className="c3"
    kind="success"
    placeholder="success"
  />
  <textarea
    className="c4"
    kind="error"
    placeholder="error"
  />
  <textarea
    className="c5"
    kind="warning"
    placeholder="warning"
  />
</div>
`;

exports[`Storyshots Toast API 1`] = `
.c3 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c1 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c0 {
  border: 1px solid #00A1DE;
  background-color: rgba(255,255,255,0.9);
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 10px 20px;
  color: #00A1DE;
  background-color: rgba(0,161,222,0.1);
}

<div
  className="c0 c1"
  kind="primary"
>
  <p
    className="c2 c3"
    kind="primary"
  >
    Success! You have delete the item.
  </p>
</div>
`;

exports[`Storyshots Toast With kind props 1`] = `
.c4 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c2 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c5 {
  border: 1px solid #00A1DE;
  background-color: rgba(255,255,255,0.9);
}

.c1 {
  border: 1px solid #999A94;
  background-color: rgba(255,255,255,0.9);
}

.c7 {
  border: 1px solid #69BE28;
  background-color: rgba(255,255,255,0.9);
}

.c9 {
  border: 1px solid #F5364E;
  background-color: rgba(255,255,255,0.9);
}

.c11 {
  border: 1px solid #F39A1E;
  background-color: rgba(255,255,255,0.9);
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 10px 20px;
  color: #00A1DE;
  background-color: rgba(0,161,222,0.1);
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 10px 20px;
  color: #999A94;
  background-color: rgba(250,250,250,0.1);
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 10px 20px;
  color: #69BE28;
  background-color: rgba(105,190,40,0.1);
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 10px 20px;
  color: #F5364E;
  background-color: rgba(245,54,78,0.1);
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 10px 20px;
  color: #F39A1E;
  background-color: rgba(243,154,30,0.1);
}

.c0 > * {
  margin-bottom: 16px;
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    kind="default"
  >
    <div
      className="c3 c4"
      kind="default"
    >
      default
       - You have delete the item.
    </div>
  </div>
  <div
    className="c5 c2"
    kind="primary"
  >
    <div
      className="c6 c4"
      kind="primary"
    >
      primary
       - You have delete the item.
    </div>
  </div>
  <div
    className="c7 c2"
    kind="success"
  >
    <div
      className="c8 c4"
      kind="success"
    >
      success
       - You have delete the item.
    </div>
  </div>
  <div
    className="c9 c2"
    kind="error"
  >
    <div
      className="c10 c4"
      kind="error"
    >
      error
       - You have delete the item.
    </div>
  </div>
  <div
    className="c11 c2"
    kind="warning"
  >
    <div
      className="c12 c4"
      kind="warning"
    >
      warning
       - You have delete the item.
    </div>
  </div>
</div>
`;
