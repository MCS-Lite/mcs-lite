// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots A API 1`] = `
<a
  className="A__A-cCPuKx iriyAs"
  color="primary"
>
  Link
</a>
`;

exports[`Storyshots A Nested children with Heading 1`] = `
<h1
  className="Heading__Heading-bbmQNS kQNhbK"
>
  Heading Level 1 
  <b
    className="B__B-bYLQjZ jyrAdw"
  >
    <a
      className="A__A-cCPuKx iriyAs"
      color="primary"
    >
      Link
    </a>
  </b>
</h1>
`;

exports[`Storyshots A With color props 1`] = `
<div>
  <a
    className="A__A-cCPuKx boFixb"
    color="black"
  >
    A link 
    black
  </a>
  <a
    className="A__A-cCPuKx chjCmt"
    color="grayBase"
  >
    A link 
    grayBase
  </a>
  <a
    className="A__A-cCPuKx htyhkl"
    color="grayDark"
  >
    A link 
    grayDark
  </a>
  <a
    className="A__A-cCPuKx bLoDNO"
    color="grayLight"
  >
    A link 
    grayLight
  </a>
  <a
    className="A__A-cCPuKx eBApCZ"
    color="white"
  >
    A link 
    white
  </a>
  <a
    className="A__A-cCPuKx bLoDNO"
    color="default"
  >
    A link 
    default
  </a>
  <a
    className="A__A-cCPuKx iriyAs"
    color="primary"
  >
    A link 
    primary
  </a>
  <a
    className="A__A-cCPuKx kBiKBU"
    color="success"
  >
    A link 
    success
  </a>
  <a
    className="A__A-cCPuKx hxMTxL"
    color="error"
  >
    A link 
    error
  </a>
  <a
    className="A__A-cCPuKx bDGcKF"
    color="warning"
  >
    A link 
    warning
  </a>
</div>
`;

exports[`Storyshots API [mcs-lite-theme] [JSON] kind 1`] = `
<div>
  <pre>
    [
      "default",
      "primary",
      "success",
      "error",
      "warning"
    ]
  </pre>
</div>
`;

exports[`Storyshots API [mcs-lite-theme] [JSON] theme 1`] = `
<div>
  <pre>
    {
      "color": {
        "black": "#353630",
        "grayBase": "#999A94",
        "grayDark": "#D1D2D3",
        "grayLight": "#FAFAFA",
        "white": "#FFFFFF",
        "default": "#FAFAFA",
        "primary": "#00A1DE",
        "success": "#69BE28",
        "error": "#F5364E",
        "warning": "#F39A1E"
      },
      "base": {
        "bodyBackgroundColor": "#F1F2F7",
        "bodyColor": "#353630",
        "fontSize": "13px",
        "lineHeight": 1.5
      },
      "fontSize": {
        "small": "0.923rem",
        "p": "1rem",
        "h6": "1rem",
        "h5": "1rem",
        "h4": "1.15rem",
        "h3": "1.38rem",
        "h2": "1.69rem",
        "h1": "2.46rem"
      },
      "height": {
        "normal": "32px",
        "small": "20px"
      },
      "mobile": {
        "maxWidth": "800px",
        "headerHeight": "56px"
      }
    }
  </pre>
</div>
`;

exports[`Storyshots B API 1`] = `
<b
  className="B__B-bYLQjZ jyrAdw"
>
  Bold content
</b>
`;

exports[`Storyshots B CJK 1`] = `
<h4
  className="Heading__Heading-bbmQNS bhpnUP"
>
  <b
    className="B__B-bYLQjZ jyrAdw"
  >
    控制開關粗體字
  </b>
</h4>
`;

exports[`Storyshots B With color 1`] = `
<div
  className="P__P-KJbCR dnAaPu"
  color="primary"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <b
    className="B__B-bYLQjZ jyrAdw"
  >
     Bold content 
  </b>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots B Within <P> 1`] = `
<div
  className="P__P-KJbCR huqyql"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="Small__Small-eZiBK gQBpAl"
  >
    <b
      className="B__B-bYLQjZ jyrAdw"
    >
       Bold content 
    </b>
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Button API 1`] = `
<button
  className="Button__Button-jkHDFw ibjUrp"
>
  button
</button>
`;

exports[`Storyshots Button Overriding style 1`] = `
<button
  className="Button-example__TomatoButton-kvmsNi yEsqX Button__Button-jkHDFw ibjUrp"
  onClick={[Function]}
>
  Overriding style
</button>
`;

exports[`Storyshots Button With active props 1`] = `
<button
  className="Button__Button-jkHDFw kheXAg"
>
  Active
</button>
`;

exports[`Storyshots Button With block props 1`] = `
<div
  className="Button-example__Container-gqnXON jVPPvJ"
>
  <button
    className="Button__Button-jkHDFw ibjUrp"
  >
    Button
  </button>
  <button
    className="Button__Button-jkHDFw ibjUrp"
  >
    Simple button
  </button>
  <button
    className="Button__Button-jkHDFw bzTowI"
  >
    block
  </button>
</div>
`;

exports[`Storyshots Button With component props - Input submit 1`] = `
<input
  className="Button__Button-jkHDFw bzTowI"
  onClick={[Function]}
  type="submit"
  value="Input Submit"
/>
`;

exports[`Storyshots Button With component props 1`] = `
<a
  className="Button__Button-jkHDFw ibjUrp"
  onClick={[Function]}
>
  I am 
  &lt;a&gt;
   tag.
</a>
`;

exports[`Storyshots Button With icon inside 1`] = `
<button
  className="Button__Button-jkHDFw ibjUrp"
>
  <div
    className="Button-example__CenterContainer-ifujjA eknkbm"
  >
    <div
      className="Spin__Spin-cdyXhD emAbgi"
    >
      <svg
        fill="currentColor"
        height="1em"
        preserveAspectRatio="xMidYMid meet"
        viewBox="0 0 24 24"
        width="1em"
      >
        <path
          d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
          opacity=".3"
        />
        <path
          d="M12 4c4.4 0 8 3.6 8 8h2c0-5.5-4.5-10-10-10v2z"
        />
      </svg>
    </div>
     Loading ...
  </div>
</button>
`;

exports[`Storyshots Button With kind props 1`] = `
<div
  className="Button-example__Container-gqnXON jVPPvJ"
>
  <button
    className="Button__Button-jkHDFw bmbEVQ"
    onClick={[Function]}
  >
    default
  </button>
  <button
    className="Button__Button-jkHDFw ibjUrp"
    onClick={[Function]}
  >
    primary
  </button>
  <button
    className="Button__Button-jkHDFw cJnrjw"
    onClick={[Function]}
  >
    success
  </button>
  <button
    className="Button__Button-jkHDFw hHBhim"
    onClick={[Function]}
  >
    error
  </button>
  <button
    className="Button__Button-jkHDFw gdiAwO"
    onClick={[Function]}
  >
    warning
  </button>
</div>
`;

exports[`Storyshots Button With round props 1`] = `
<div
  className="Button-example__Container-gqnXON jVPPvJ"
>
  <button
    className="Button__Button-jkHDFw iphfFV"
  >
    A
  </button>
  <button
    className="Button__Button-jkHDFw jQulmP"
  >
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 24 24"
      width="1em"
    >
      <path
        d="M19 20H5V9h14m-3-7v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-1V2m-1 11h-5v5h5v-5z"
      />
    </svg>
  </button>
</div>
`;

exports[`Storyshots Button With size props 1`] = `
<div
  className="Button-example__Container-gqnXON jVPPvJ"
>
  <button
    className="Button__Button-jkHDFw ihhbsM"
  >
    Btn
  </button>
  <button
    className="Button__Button-jkHDFw gIeMIe"
  >
    Small Button
  </button>
</div>
`;

exports[`Storyshots Button With square props 1`] = `
<div
  className="Button-example__Container-gqnXON jVPPvJ"
>
  <button
    className="Button__Button-jkHDFw cAmDCa"
  >
    A
  </button>
  <button
    className="Button__Button-jkHDFw ffIpHW"
  >
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 24 24"
      width="1em"
    >
      <path
        d="M19 20H5V9h14m-3-7v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-1V2m-1 11h-5v5h5v-5z"
      />
    </svg>
  </button>
</div>
`;

exports[`Storyshots Button With theme provider (Material) 1`] = `
<div
  className="Button-example__Container-gqnXON jVPPvJ"
>
  <button
    className="Button__Button-jkHDFw bCiiOp"
    onClick={[Function]}
  >
    default
  </button>
  <button
    className="Button__Button-jkHDFw caBOMi"
    onClick={[Function]}
  >
    primary
  </button>
  <button
    className="Button__Button-jkHDFw lkONkx"
    onClick={[Function]}
  >
    success
  </button>
  <button
    className="Button__Button-jkHDFw jQIJyg"
    onClick={[Function]}
  >
    error
  </button>
  <button
    className="Button__Button-jkHDFw geviCK"
    onClick={[Function]}
  >
    warning
  </button>
</div>
`;

exports[`Storyshots Card API 1`] = `
<div
  className="Card__Card-cAIRri hUtceH"
>
  Card Content
</div>
`;

exports[`Storyshots ClickOutside API 1`] = `
<div
  className="Card__Card-cAIRri hUtceH"
>
  Inside (Try to click outside.)
</div>
`;

exports[`Storyshots Code API 1`] = `
<MockSyntaxHighlighter
  customStyle={
    Object {
      "backgroundColor": "initial",
      "fontSize": "0.923rem",
      "margin": 0,
      "padding": 0,
    }
  }
  language="javascript"
  style={
    Object {
      "hljs": Object {
        "background": "white",
        "color": "#333333",
        "display": "block",
        "overflowX": "auto",
        "padding": "0.5em",
      },
      "hljs-addition": Object {
        "backgroundColor": "#eaffea",
        "color": "#55a532",
      },
      "hljs-attr": Object {
        "color": "#795da3",
      },
      "hljs-attribute": Object {
        "color": "#0086b3",
      },
      "hljs-bullet": Object {
        "color": "#0086b3",
      },
      "hljs-comment": Object {
        "color": "#969896",
      },
      "hljs-deletion": Object {
        "backgroundColor": "#ffecec",
        "color": "#bd2c00",
      },
      "hljs-emphasis": Object {
        "color": "#df5000",
      },
      "hljs-keyword": Object {
        "color": "#a71d5d",
      },
      "hljs-link": Object {
        "textDecoration": "underline",
      },
      "hljs-literal": Object {
        "color": "#0086b3",
      },
      "hljs-meta": Object {
        "color": "#969896",
      },
      "hljs-name": Object {
        "color": "#63a35c",
      },
      "hljs-quote": Object {
        "color": "#df5000",
      },
      "hljs-section": Object {
        "color": "#63a35c",
      },
      "hljs-selector-attr": Object {
        "color": "#795da3",
      },
      "hljs-selector-class": Object {
        "color": "#795da3",
      },
      "hljs-selector-id": Object {
        "color": "#795da3",
      },
      "hljs-selector-pseudo": Object {
        "color": "#795da3",
      },
      "hljs-selector-tag": Object {
        "color": "#a71d5d",
      },
      "hljs-string": Object {
        "color": "#df5000",
      },
      "hljs-strong": Object {
        "color": "#df5000",
      },
      "hljs-symbol": Object {
        "color": "#0086b3",
      },
      "hljs-tag": Object {
        "color": "#333333",
      },
      "hljs-template-variable": Object {
        "color": "#df5000",
      },
      "hljs-title": Object {
        "color": "#795da3",
      },
      "hljs-type": Object {
        "color": "#a71d5d",
      },
      "hljs-variable": Object {
        "color": "#df5000",
      },
    }
  }
  wrapLines={true}
>
  var data = {
    datapoints:
      [{dataChnId: "Map", values: {latitude: 12, longitude: 13, altitude: 14}}]
  };
  
  $.ajax({
    type: "POST",
    url: "https://api.mediatek.com/mcs/v2/devices/DzdpHYIZ/datapoints",
    headers: { deviceKey: "Cio34Lj7Na5RmQXj" },
    contentType: "application/json",
    data: JSON.stringify(data)
  })
  .done(function(data){
    // your content
  })
</MockSyntaxHighlighter>
`;

exports[`Storyshots Code With language props 1`] = `
<MockSyntaxHighlighter
  customStyle={
    Object {
      "backgroundColor": "initial",
      "fontSize": "0.923rem",
      "margin": 0,
      "padding": 0,
    }
  }
  language="arduino"
  style={
    Object {
      "hljs": Object {
        "background": "white",
        "color": "#333333",
        "display": "block",
        "overflowX": "auto",
        "padding": "0.5em",
      },
      "hljs-addition": Object {
        "backgroundColor": "#eaffea",
        "color": "#55a532",
      },
      "hljs-attr": Object {
        "color": "#795da3",
      },
      "hljs-attribute": Object {
        "color": "#0086b3",
      },
      "hljs-bullet": Object {
        "color": "#0086b3",
      },
      "hljs-comment": Object {
        "color": "#969896",
      },
      "hljs-deletion": Object {
        "backgroundColor": "#ffecec",
        "color": "#bd2c00",
      },
      "hljs-emphasis": Object {
        "color": "#df5000",
      },
      "hljs-keyword": Object {
        "color": "#a71d5d",
      },
      "hljs-link": Object {
        "textDecoration": "underline",
      },
      "hljs-literal": Object {
        "color": "#0086b3",
      },
      "hljs-meta": Object {
        "color": "#969896",
      },
      "hljs-name": Object {
        "color": "#63a35c",
      },
      "hljs-quote": Object {
        "color": "#df5000",
      },
      "hljs-section": Object {
        "color": "#63a35c",
      },
      "hljs-selector-attr": Object {
        "color": "#795da3",
      },
      "hljs-selector-class": Object {
        "color": "#795da3",
      },
      "hljs-selector-id": Object {
        "color": "#795da3",
      },
      "hljs-selector-pseudo": Object {
        "color": "#795da3",
      },
      "hljs-selector-tag": Object {
        "color": "#a71d5d",
      },
      "hljs-string": Object {
        "color": "#df5000",
      },
      "hljs-strong": Object {
        "color": "#df5000",
      },
      "hljs-symbol": Object {
        "color": "#0086b3",
      },
      "hljs-tag": Object {
        "color": "#333333",
      },
      "hljs-template-variable": Object {
        "color": "#df5000",
      },
      "hljs-title": Object {
        "color": "#795da3",
      },
      "hljs-type": Object {
        "color": "#a71d5d",
      },
      "hljs-variable": Object {
        "color": "#df5000",
      },
    }
  }
  wrapLines={true}
>
  include &lt;HttpClient.h&gt;
  include &lt;EthernetClient.h&gt;
  
  EthernetClient content;
  HttpClient http(content);
  
  content.println("POST /mcs/v2/devices/DzdpHYIZ/datapoints.csv HTTP/1.1");
  #hint! Please do not add excessive spaces
  
  String data = "inte,,123"
  
  #hint! Please do not add excessive spaces
  #timestamp is in unix-time format the milliseconds and is optional. If not provided,
  
  #system will generate timestamp at the time of receiving this API
  int dataLength = data.length();
  
  content.println("Host: api.mediatek.com");
  content.println("deviceKey: Cio34Lj7Na5RmQXj");
  content.print("Content-Length: ");
  content.println(dataLength);
</MockSyntaxHighlighter>
`;

exports[`Storyshots CopyButton API 1`] = `
<button
  className="CopyButton__StyledButton-kqfTnn dDTQyl Button__Button-jkHDFw ihhbsM"
  onClick={[Function]}
>
  Copy
</button>
`;

exports[`Storyshots DataChannel ButtonClear 1`] = `
<div
  className="P__P-KJbCR huqyql"
>
  <a
    className="ButtonClear__StyledA-hPckxD cJqJoD A__A-cCPuKx iriyAs"
    color="primary"
  >
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 24 24"
      width="1em"
    >
      <path
        d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
      />
    </svg>
    Clear
  </a>
</div>
`;

exports[`Storyshots DataChannel ControlNumber 1`] = `
<div
  className="ControlNumber__Container-gmlYuy rzEmK"
>
  <p
    className="ControlNumber__Unixtype-hOgmLf cWpJIG P__P-KJbCR kHKeHO"
    color="grayBase"
  >
    單位：攝氏
  </p>
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    onChange={[Function]}
    placeholder="placeholder"
    type="number"
    value={10}
  />
  <div
    className="ControlNumber__ButtonWrapper-iczkcP gmGCvf"
  >
    <div
      className="P__P-KJbCR huqyql"
      onClick={[Function]}
    >
      <a
        className="ButtonClear__StyledA-hPckxD cJqJoD A__A-cCPuKx iriyAs"
        color="primary"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
          />
        </svg>
        Clear
      </a>
    </div>
    <button
      className="Button__Button-jkHDFw ibjUrp"
      onClick={[Function]}
    >
      Ok
    </button>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlPeriod 1`] = `
<div
  className="ControlPeriod__Container-jNmifR wmzMS"
>
  <label
    htmlFor="input"
  >
    <p
      className="P__P-KJbCR kHKeHO"
      color="grayBase"
    >
      Period
    </p>
  </label>
  <div
    className="ControlPeriod__InputWrapper-icIPmx gFyvMa"
  >
    <input
      className="ControlPeriod__StyledInput-fNvBTX cAVBYu Input__Input-ixjKAz hMaVBp"
      kind="primary"
      onChange={[Function]}
      placeholder="placeholder"
      type="number"
      value={10}
    />
    <button
      className="Button__Button-jkHDFw ibjUrp"
      onClick={[Function]}
    >
      Ok
    </button>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange - Stateful PPAP 1`] = `
<div
  className="ControlRange__Container-ispxkc kkVGKq"
>
  <div
    className="ControlRange__LabelWrapper-hpKjGx coavYs"
  >
    <div
      className="ControlRange__LabelItem-kiIalK idIiax"
    >
      <p
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Apple
      </p>
    </div>
    <div
      className="ControlRange__LabelItem-kiIalK idIiax"
    >
      <p
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Pen
      </p>
    </div>
    <div
      className="ControlRange__LabelItem-kiIalK idIiax"
    >
      <p
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Pineapple
      </p>
    </div>
  </div>
  <div
    className="ControlRange__InputWrapper-fklkwO ZhTPZ"
  >
    <div
      className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
      color="grayBase"
    >
      Current value: 
      <p
        className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
        color="primary"
      >
        Pineapple
      </p>
    </div>
    <input
      className="InputRange__InputRange-uGAsR iOVoet"
      kind="primary"
      max={2}
      min={0}
      onChange={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      step={1}
      type="range"
      value={2}
    />
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange - Stateful number 1`] = `
<div
  className="ControlRange__Container-ispxkc kkVGKq"
>
  <div
    className="ControlRange__LabelWrapper-hpKjGx kKFCvQ"
  >
    <div
      className="ControlRange__LabelItem-kiIalK idIiax"
    >
      <div
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        33
      </div>
    </div>
    <div
      className="ControlRange__LabelItem-kiIalK idIiax"
    >
      <div
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        95
      </div>
    </div>
  </div>
  <div
    className="ControlRange__InputWrapper-fklkwO dVxsgp"
  >
    <div
      className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
      color="grayBase"
    >
      Current value: 
      <div
        className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
        color="primary"
      >
        88
      </div>
    </div>
    <input
      className="InputRange__InputRange-uGAsR iOVoet"
      kind="primary"
      max={95}
      min={33}
      onChange={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      step={1}
      type="range"
      value={88}
    />
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange 1`] = `
<div
  className="DataChannel-example__DemoWrapper-hHsqWu gpgIXx"
>
  <div
    className="ControlRange__Container-ispxkc kkVGKq"
  >
    <div
      className="ControlRange__LabelWrapper-hpKjGx coavYs"
    >
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          AAAAAA
        </p>
      </div>
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          BBBBB
        </p>
      </div>
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          CCCCC
        </p>
      </div>
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          DDDDD
        </p>
      </div>
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          EEEEE
        </p>
      </div>
    </div>
    <div
      className="ControlRange__InputWrapper-fklkwO kkMvVd"
    >
      <div
        className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Current value: 
        <p
          className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
          color="primary"
        >
          N/A
        </p>
      </div>
      <input
        className="InputRange__InputRange-uGAsR iOVoet"
        kind="primary"
        max={4}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={undefined}
      />
    </div>
  </div>
  <div
    className="ControlRange__Container-ispxkc kkVGKq"
  >
    <div
      className="ControlRange__LabelWrapper-hpKjGx coavYs"
    >
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          AAAAAA
        </p>
      </div>
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          BBBBB
        </p>
      </div>
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          CCCCC
        </p>
      </div>
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          DDDDD
        </p>
      </div>
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          EEEEE
        </p>
      </div>
    </div>
    <div
      className="ControlRange__InputWrapper-fklkwO kkMvVd"
    >
      <div
        className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Current value: 
        <p
          className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
          color="primary"
        >
          DDDDD
        </p>
      </div>
      <input
        className="InputRange__InputRange-uGAsR iOVoet"
        kind="primary"
        max={4}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={3}
      />
    </div>
  </div>
  <div
    className="ControlRange__Container-ispxkc kkVGKq"
  >
    <div
      className="ControlRange__LabelWrapper-hpKjGx kKFCvQ"
    >
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          Low
        </p>
      </div>
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <p
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          Heigh
        </p>
      </div>
    </div>
    <div
      className="ControlRange__InputWrapper-fklkwO dVxsgp"
    >
      <div
        className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Current value: 
        <p
          className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
          color="primary"
        >
          Low
        </p>
      </div>
      <input
        className="InputRange__InputRange-uGAsR iOVoet"
        kind="primary"
        max={1}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={0}
      />
    </div>
  </div>
  <div
    className="ControlRange__Container-ispxkc kkVGKq"
  >
    <div
      className="ControlRange__LabelWrapper-hpKjGx kKFCvQ"
    >
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <div
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          0
        </div>
      </div>
      <div
        className="ControlRange__LabelItem-kiIalK idIiax"
      >
        <div
          className="P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          100
        </div>
      </div>
    </div>
    <div
      className="ControlRange__InputWrapper-fklkwO dVxsgp"
    >
      <div
        className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Current value: 
        <div
          className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
          color="primary"
        >
          33
        </div>
      </div>
      <input
        className="InputRange__InputRange-uGAsR iOVoet"
        kind="primary"
        max={100}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={33}
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlString 1`] = `
<div
  className="ControlString__Container-gxvWtt eRKIhm"
>
  <textarea
    className="ControlString__StyledTextarea-jUHsJW krVxuY Textarea__Textarea-dEcNVt haEdAh"
    kind="primary"
    onChange={[Function]}
    placeholder="placeholder"
    value=""
  />
  <div
    className="ControlString__ButtonWrapper-kaocaH fiUlWA"
  >
    <div
      className="P__P-KJbCR huqyql"
      onClick={[Function]}
    >
      <a
        className="ButtonClear__StyledA-hPckxD cJqJoD A__A-cCPuKx iriyAs"
        color="primary"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
          />
        </svg>
        Clear
      </a>
    </div>
    <button
      className="Button__Button-jkHDFw ibjUrp"
      onClick={[Function]}
    >
      Ok
    </button>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlSwitch 1`] = `
<div
  checked={false}
  className="Switch__Switch-iwxo kHzQqK"
  kind="success"
  onClick={[Function]}
/>
`;

exports[`Storyshots DataChannel DisplayMultipleValue 1`] = `
<div
  className="DisplayMultipleValue__Container-emGSTk jhztvc"
>
  <div>
    <p
      className="P__P-KJbCR kHKeHO"
      color="grayBase"
    >
      Value
    </p>
    <h1
      className="DisplayMultipleValue__StyledHeading-fVnwQZ fMCDyR Heading__Heading-bbmQNS bzctpr"
      color="primary"
    >
      1234455
    </h1>
  </div>
  <div>
    <p
      className="P__P-KJbCR kHKeHO"
      color="grayBase"
    >
      Period
    </p>
    <h1
      className="DisplayMultipleValue__StyledHeading-fVnwQZ fMCDyR Heading__Heading-bbmQNS bzctpr"
      color="primary"
    >
      125125
    </h1>
  </div>
</div>
`;

exports[`Storyshots DataChannel DisplayStatus 1`] = `
<div
  className="DataChannel-example__DemoWrapper-hHsqWu gpgIXx"
>
  <div
    className="DisplayStatus__Container-jrDlkR DzKAF"
  >
    <div
      className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
    >
      <p
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        OFF
      </p>
      <div>
        <svg
          className="StatusLight__Svg-IVkxE heGIpa"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
    >
      <p
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        ON
      </p>
      <div>
        <svg
          className="StatusLight__Svg-IVkxE heGIpa"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
  </div>
  <div
    className="DisplayStatus__Container-jrDlkR DzKAF"
  >
    <div
      className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
    >
      <p
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Apple1
      </p>
      <div>
        <svg
          className="StatusLight__Svg-IVkxE heGIpa"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
    >
      <p
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Apple2
      </p>
      <div>
        <svg
          className="StatusLight__Svg-IVkxE heGIpa"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
    >
      <p
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Pen
      </p>
      <div>
        <svg
          className="StatusLight__Svg-IVkxE geyPxt"
          color="success"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
    >
      <p
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        Pineapple
      </p>
      <div>
        <svg
          className="StatusLight__Svg-IVkxE heGIpa"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
    >
      <p
        className="P__P-KJbCR kHKeHO"
        color="grayBase"
      >
        PPAPPPAPPPAP
      </p>
      <div>
        <svg
          className="StatusLight__Svg-IVkxE heGIpa"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel DisplayString 1`] = `
<div
  className="DisplayString__Container-gMiSmM eaLFWz"
>
  <textarea
    className="DisplayString__StyledTextarea-iHUBEj eYiCLJ Textarea__Textarea-dEcNVt haEdAh"
    disabled={true}
    kind="primary"
    placeholder="This place holds Hex value."
    value="value"
  />
</div>
`;

exports[`Storyshots DataChannel DisplayUnitValue 1`] = `
<div
  className="DisplayUnitValue__Container-fOKEIX dDKurw"
>
  <h1
    className="DisplayUnitValue__StyledHeading-kRatpm hdCZyr Heading__Heading-bbmQNS bzctpr"
    color="primary"
  >
    1123124124121
  </h1>
  <p
    className="DisplayUnitValue__StyledP-ceNPmY iawlaJ P__P-KJbCR kHKeHO"
    color="grayBase"
  >
    攝氏
  </p>
</div>
`;

exports[`Storyshots DataChannelAdapter API 1`] = `
<div
  className="DataChannelAdapter-example__CardWrapper-hYsPSJ gBdkwi"
>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="ControlNumber__Container-gmlYuy rzEmK"
      >
        <p
          className="ControlNumber__Unixtype-hOgmLf cWpJIG P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          單位：ampere
        </p>
        <input
          className="Input__Input-ixjKAz hMaVBp"
          kind="primary"
          onChange={[Function]}
          placeholder="Integer only"
          type="number"
          value={0}
        />
        <div
          className="ControlNumber__ButtonWrapper-iczkcP gmGCvf"
        >
          <div
            className="P__P-KJbCR huqyql"
            onClick={[Function]}
          >
            <a
              className="ButtonClear__StyledA-hPckxD cJqJoD A__A-cCPuKx iriyAs"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="Button__Button-jkHDFw ibjUrp"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        INTEGER_CONTROL
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="DisplayUnitValue__Container-fOKEIX dDKurw"
      >
        <h1
          className="DisplayUnitValue__StyledHeading-kRatpm hdCZyr Heading__Heading-bbmQNS bzctpr"
          color="primary"
        >
          0
        </h1>
        <p
          className="DisplayUnitValue__StyledP-ceNPmY iawlaJ P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          ampere
        </p>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        INTEGER_DISPLAY
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="ControlNumber__Container-gmlYuy rzEmK"
      >
        <p
          className="ControlNumber__Unixtype-hOgmLf cWpJIG P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          單位：ampere
        </p>
        <input
          className="Input__Input-ixjKAz hMaVBp"
          kind="primary"
          onChange={[Function]}
          placeholder="Float only"
          type="number"
          value=""
        />
        <div
          className="ControlNumber__ButtonWrapper-iczkcP gmGCvf"
        >
          <div
            className="P__P-KJbCR huqyql"
            onClick={[Function]}
          >
            <a
              className="ButtonClear__StyledA-hPckxD cJqJoD A__A-cCPuKx iriyAs"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="Button__Button-jkHDFw ibjUrp"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        FLOAT_CONTROL
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="DisplayUnitValue__Container-fOKEIX dDKurw"
      >
        <h1
          className="DisplayUnitValue__StyledHeading-kRatpm hdCZyr Heading__Heading-bbmQNS bzctpr"
          color="primary"
        >
          N/A
        </h1>
        <p
          className="DisplayUnitValue__StyledP-ceNPmY iawlaJ P__P-KJbCR kHKeHO"
          color="grayBase"
        >
          ampere
        </p>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        FLOAT_DISPLAY
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="ControlString__Container-gxvWtt eRKIhm"
      >
        <textarea
          className="ControlString__StyledTextarea-jUHsJW krVxuY Textarea__Textarea-dEcNVt haEdAh"
          kind="primary"
          onChange={[Function]}
          placeholder="String only"
          value="Any string type value."
        />
        <div
          className="ControlString__ButtonWrapper-kaocaH fiUlWA"
        >
          <div
            className="P__P-KJbCR huqyql"
            onClick={[Function]}
          >
            <a
              className="ButtonClear__StyledA-hPckxD cJqJoD A__A-cCPuKx iriyAs"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="Button__Button-jkHDFw ibjUrp"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        STRING_CONTROL
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="DisplayString__Container-gMiSmM eaLFWz"
      >
        <textarea
          className="DisplayString__StyledTextarea-iHUBEj eYiCLJ Textarea__Textarea-dEcNVt haEdAh"
          disabled={true}
          kind="primary"
          placeholder="String only"
          value="Any string type value."
        />
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        STRING_DISPLAY
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="ControlString__Container-gxvWtt eRKIhm"
      >
        <textarea
          className="ControlString__StyledTextarea-jUHsJW krVxuY Textarea__Textarea-dEcNVt haEdAh"
          kind="primary"
          onChange={[Function]}
          placeholder="Hex only"
          value="ABF123"
        />
        <div
          className="ControlString__ButtonWrapper-kaocaH fiUlWA"
        >
          <div
            className="P__P-KJbCR huqyql"
            onClick={[Function]}
          >
            <a
              className="ButtonClear__StyledA-hPckxD cJqJoD A__A-cCPuKx iriyAs"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="Button__Button-jkHDFw ibjUrp"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        HEX_CONTROL
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="DisplayString__Container-gMiSmM eaLFWz"
      >
        <textarea
          className="DisplayString__StyledTextarea-iHUBEj eYiCLJ Textarea__Textarea-dEcNVt haEdAh"
          disabled={true}
          kind="primary"
          placeholder="Hex only"
          value="ABF123"
        />
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        HEX_DISPLAY
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        checked={true}
        className="Switch__Switch-iwxo ifDnsZ"
        kind="success"
        onClick={[Function]}
      />
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        SWITCH_CONTROL
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="DisplayStatus__Container-jrDlkR DzKAF"
      >
        <div
          className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
        >
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            OFF
          </p>
          <div>
            <svg
              className="StatusLight__Svg-IVkxE geyPxt"
              color="success"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
        >
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            ON
          </p>
          <div>
            <svg
              className="StatusLight__Svg-IVkxE heGIpa"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        SWITCH_DISPLAY
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="ControlRange__Container-ispxkc kkVGKq"
      >
        <div
          className="ControlRange__LabelWrapper-hpKjGx kKFCvQ"
        >
          <div
            className="ControlRange__LabelItem-kiIalK idIiax"
          >
            <p
              className="P__P-KJbCR kHKeHO"
              color="grayBase"
            >
              k1
            </p>
          </div>
          <div
            className="ControlRange__LabelItem-kiIalK idIiax"
          >
            <p
              className="P__P-KJbCR kHKeHO"
              color="grayBase"
            >
              k2
            </p>
          </div>
        </div>
        <div
          className="ControlRange__InputWrapper-fklkwO dVxsgp"
        >
          <div
            className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            Current value: 
            <p
              className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
              color="primary"
            >
              v2
            </p>
          </div>
          <input
            className="InputRange__InputRange-uGAsR iOVoet"
            kind="primary"
            max={1}
            min={0}
            onChange={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            step={1}
            type="range"
            value={1}
          />
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        CATEGORY_CONTROL
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="DisplayStatus__Container-jrDlkR DzKAF"
      >
        <div
          className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
        >
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            k1
          </p>
          <div>
            <svg
              className="StatusLight__Svg-IVkxE heGIpa"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
        >
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            k2
          </p>
          <div>
            <svg
              className="StatusLight__Svg-IVkxE geyPxt"
              color="success"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
        >
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            k3
          </p>
          <div>
            <svg
              className="StatusLight__Svg-IVkxE heGIpa"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
        >
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            k4
          </p>
          <div>
            <svg
              className="StatusLight__Svg-IVkxE heGIpa"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
        >
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            k5
          </p>
          <div>
            <svg
              className="StatusLight__Svg-IVkxE heGIpa"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        CATEGORY_DISPLAY
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="ControlRange__Container-ispxkc kkVGKq"
      >
        <div
          className="ControlRange__LabelWrapper-hpKjGx kKFCvQ"
        >
          <div
            className="ControlRange__LabelItem-kiIalK idIiax"
          >
            <p
              className="P__P-KJbCR kHKeHO"
              color="grayBase"
            >
              Low
            </p>
          </div>
          <div
            className="ControlRange__LabelItem-kiIalK idIiax"
          >
            <p
              className="P__P-KJbCR kHKeHO"
              color="grayBase"
            >
              High
            </p>
          </div>
        </div>
        <div
          className="ControlRange__InputWrapper-fklkwO dVxsgp"
        >
          <div
            className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            Current value: 
            <p
              className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
              color="primary"
            >
              High
            </p>
          </div>
          <input
            className="InputRange__InputRange-uGAsR iOVoet"
            kind="primary"
            max={1}
            min={0}
            onChange={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            step={1}
            type="range"
            value={1}
          />
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        GPIO_CONTROL
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="DisplayStatus__Container-jrDlkR DzKAF"
      >
        <div
          className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
        >
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            Low
          </p>
          <div>
            <svg
              className="StatusLight__Svg-IVkxE geyPxt"
              color="success"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="DisplayStatus__ItemWrapper-edfiVv eBhrYw"
        >
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            High
          </p>
          <div>
            <svg
              className="StatusLight__Svg-IVkxE heGIpa"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        GPIO_DISPLAY
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="ControlRange__Container-ispxkc kkVGKq"
      >
        <div
          className="ControlRange__LabelWrapper-hpKjGx kKFCvQ"
        >
          <div
            className="ControlRange__LabelItem-kiIalK idIiax"
          >
            <div
              className="P__P-KJbCR kHKeHO"
              color="grayBase"
            >
              1
            </div>
          </div>
          <div
            className="ControlRange__LabelItem-kiIalK idIiax"
          >
            <div
              className="P__P-KJbCR kHKeHO"
              color="grayBase"
            >
              100
            </div>
          </div>
        </div>
        <div
          className="ControlRange__InputWrapper-fklkwO dVxsgp"
        >
          <div
            className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            Current value: 
            <div
              className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
              color="primary"
            >
              23
            </div>
          </div>
          <input
            className="InputRange__InputRange-uGAsR iOVoet"
            kind="primary"
            max={100}
            min={1}
            onChange={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            step={1}
            type="range"
            value={23}
          />
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        ANALOG_CONTROL
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="DisplayMultipleValue__Container-emGSTk jhztvc"
      >
        <div>
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            Value
          </p>
          <h1
            className="DisplayMultipleValue__StyledHeading-fVnwQZ fMCDyR Heading__Heading-bbmQNS bzctpr"
            color="primary"
          >
            value pwm
          </h1>
        </div>
        <div>
          <p
            className="P__P-KJbCR kHKeHO"
            color="grayBase"
          >
            Period
          </p>
          <h1
            className="DisplayMultipleValue__StyledHeading-fVnwQZ fMCDyR Heading__Heading-bbmQNS bzctpr"
            color="primary"
          >
            20
          </h1>
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        PWM_DISPLAY
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
    data-width="half"
  >
    <div
      className="DataChannelCard__Header-cPHliC hpyYem"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="DataChannelCard__Body-gCBkrW htKtEp"
    >
      <div
        className="DataChannelAdapter__Wrapper-kOWMLp dRDewk"
      >
        <div
          className="ControlPeriod__Container-jNmifR wmzMS"
        >
          <label
            htmlFor="input"
          >
            <p
              className="P__P-KJbCR kHKeHO"
              color="grayBase"
            >
              Period
            </p>
          </label>
          <div
            className="ControlPeriod__InputWrapper-icIPmx gFyvMa"
          >
            <input
              className="ControlPeriod__StyledInput-fNvBTX cAVBYu Input__Input-ixjKAz hMaVBp"
              kind="primary"
              onChange={[Function]}
              placeholder="Integer only"
              type="number"
              value={0}
            />
            <button
              className="Button__Button-jkHDFw ibjUrp"
              onClick={[Function]}
            >
              Ok
            </button>
          </div>
        </div>
        <div
          className="ControlRange__Container-ispxkc kkVGKq"
        >
          <div
            className="ControlRange__LabelWrapper-hpKjGx kKFCvQ"
          >
            <div
              className="ControlRange__LabelItem-kiIalK idIiax"
            >
              <div
                className="P__P-KJbCR kHKeHO"
                color="grayBase"
              >
                0
              </div>
            </div>
            <div
              className="ControlRange__LabelItem-kiIalK idIiax"
            >
              <div
                className="P__P-KJbCR kHKeHO"
                color="grayBase"
              >
                100
              </div>
            </div>
          </div>
          <div
            className="ControlRange__InputWrapper-fklkwO dVxsgp"
          >
            <div
              className="ControlRange__ValueWrapper-jxMKxr lkxWna P__P-KJbCR kHKeHO"
              color="grayBase"
            >
              Current value: 
              <div
                className="ControlRange__Value-kXycxr cJYxpn P__P-KJbCR dnAaPu"
                color="primary"
              >
                0
              </div>
            </div>
            <input
              className="InputRange__InputRange-uGAsR iOVoet"
              kind="primary"
              max={100}
              min={0}
              onChange={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              step={1}
              type="range"
              value={0}
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="DataChannelCard__Footer-bXWvk khhGpj"
    >
      <h4
        className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
      >
        PWM_CONTROL
      </h4>
      <small
        className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
      />
      <div
        className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard API 1`] = `
<div
  className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
>
  <div
    className="DataChannelCard__Header-cPHliC hpyYem"
  >
    <a
      href=""
    >
      Link
    </a>
  </div>
  <div
    className="DataChannelCard__Body-gCBkrW htKtEp"
  >
    Children
  </div>
  <div
    className="DataChannelCard__Footer-bXWvk khhGpj"
  >
    <h4
      className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
    >
      Title
    </h4>
    <small
      className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
    >
      Last data point time : 2015-06-12 12:00
    </small>
    <hr
      className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
    />
    <div
      className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
    >
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..."
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard Custom width and height 1`] = `
<div
  className="DataChannelCard-example__MCSSyledCard-JGfRW jgVoOE DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
>
  <div
    className="DataChannelCard__Header-cPHliC hpyYem"
  >
    V
  </div>
  <div
    className="DataChannelCard__Body-gCBkrW htKtEp"
  >
    <div
      checked={false}
      className="Switch__Switch-iwxo kHzQqK"
      kind="success"
    />
  </div>
  <div
    className="DataChannelCard__Footer-bXWvk khhGpj"
  >
    <h4
      className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
    >
      Title
    </h4>
    <small
      className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
    >
      Last data point time : 2015-06-12 12:00
    </small>
    <hr
      className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
    />
    <div
      className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
    >
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..."
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard With Component selector 1`] = `
<div
  className="DataChannelCard-example__StyledDataChannelCard-rkSAm kPfzYZ DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
>
  <div
    className="DataChannelCard__Header-cPHliC hpyYem"
  >
    V
  </div>
  <div
    className="DataChannelCard__Body-gCBkrW htKtEp"
  >
    Children
  </div>
  <div
    className="DataChannelCard__Footer-bXWvk khhGpj"
  >
    <h4
      className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
    >
      Title
    </h4>
    <small
      className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
    >
      Last data point time : 2015-06-12 12:00
    </small>
    <hr
      className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
    />
    <div
      className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
    >
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..."
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard With empty description 1`] = `
<div
  className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
>
  <div
    className="DataChannelCard__Header-cPHliC hpyYem"
  >
    V
  </div>
  <div
    className="DataChannelCard__Body-gCBkrW htKtEp"
  >
    <div
      checked={false}
      className="Switch__Switch-iwxo kHzQqK"
      kind="success"
    />
  </div>
  <div
    className="DataChannelCard__Footer-bXWvk khhGpj"
  >
    <h4
      className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
    >
      Title
    </h4>
    <small
      className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
    >
      Last data point time : 2015-06-12 12:00
    </small>
    <hr
      className="DataChannelCard__StyledHr-gbFDHt kdQbav Hr__StyledHr-cIXjSE dCevnQ"
    />
    <div
      className="DataChannelCard__Description-coAkpt ZvWJu P__P-KJbCR huqyql"
    >
      <MockReactTextTruncate
        line={2}
        text=""
        truncateText=" ..."
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard Without description 1`] = `
<div
  className="DataChannelCard__Wrapper-bHbgIQ iAWmbi Card__Card-cAIRri hUtceH"
>
  <div
    className="DataChannelCard__Header-cPHliC hpyYem"
  >
    V
  </div>
  <div
    className="DataChannelCard__Body-gCBkrW htKtEp"
  >
    <div
      checked={false}
      className="Switch__Switch-iwxo kHzQqK"
      kind="success"
    />
  </div>
  <div
    className="DataChannelCard__Footer-bXWvk khhGpj"
  >
    <h4
      className="DataChannelCard__StyledHeading-cbvcvv keaHV Heading__Heading-bbmQNS bhpnUP"
    >
      Title
    </h4>
    <small
      className="DataChannelCard__StyledSmall-dXSgmU gQFsUf Small__Small-eZiBK gQBpAl"
    >
      Last data point time : 2015-06-12 12:00
    </small>
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart API 1`] = `
<div
  className="DataPointAreaChart-example__DemoWrapper-gGeZar guRXhw"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart RechartTooltip 1`] = `
<div
  className="RechartTooltip__StyledCard-iJnpfZ GWlAq Card__Card-cAIRri hUtceH"
>
  <p
    className="P__P-KJbCR huqyql"
  >
    formatter(1)
  </p>
  <div
    className="P__P-KJbCR kHKeHO"
    color="grayBase"
  >
    <small
      className="Small__Small-eZiBK gQBpAl"
    >
      labelFormatter(1532438716989)
    </small>
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart With isAnimationActive props 1`] = `
<div
  className="DataPointAreaChart-example__DemoWrapper-gGeZar guRXhw"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart With kind and type props 1`] = `
<div
  className="DataPointAreaChart-example__DemoWrapper-gGeZar guRXhw"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart With realtime data 1`] = `
<div
  className="DataPointAreaChart-example__DemoWrapper-gGeZar guRXhw"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DatetimePicker API 1`] = `
<div
  className="PickerContainer__Container-bycPjJ fSlrkj"
  defaultValue={1455780631722}
  onChange={[Function]}
>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="Picker__ItemWrapper-buHaJW chppio"
      style={
        Object {
          "marginTop": -0,
        }
      }
    >
      <div
        className="Picker__Item-gIfqqC jKdLnX"
      >
        2016
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        2017
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="Picker__ItemWrapper-buHaJW chppio"
      style={
        Object {
          "marginTop": -40,
        }
      }
    >
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        1
      </div>
      <div
        className="Picker__Item-gIfqqC jKdLnX"
      >
        2
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        3
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        4
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        5
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        6
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        7
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        8
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        9
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        10
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        11
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        12
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="Picker__ItemWrapper-buHaJW chppio"
      style={
        Object {
          "marginTop": -640,
        }
      }
    >
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        1
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        2
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        3
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        4
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        5
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        6
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        7
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        8
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        9
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        10
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        11
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        12
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        13
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        14
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        15
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        16
      </div>
      <div
        className="Picker__Item-gIfqqC jKdLnX"
      >
        17
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        18
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        19
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        20
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        21
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        22
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        23
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        24
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        25
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        26
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        27
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        28
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        29
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="Picker__ItemWrapper-buHaJW chppio"
      style={
        Object {
          "marginTop": -920,
        }
      }
    >
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        00
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        01
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        02
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        03
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        04
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        05
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        06
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        07
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        08
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        09
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        10
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        11
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        12
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        13
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        14
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        15
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        16
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        17
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        18
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        19
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        20
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        21
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        22
      </div>
      <div
        className="Picker__Item-gIfqqC jKdLnX"
      >
        23
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="Picker__ItemWrapper-buHaJW chppio"
      style={
        Object {
          "marginTop": -1200,
        }
      }
    >
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        00
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        01
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        02
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        03
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        04
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        05
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        06
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        07
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        08
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        09
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        10
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        11
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        12
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        13
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        14
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        15
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        16
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        17
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        18
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        19
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        20
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        21
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        22
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        23
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        24
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        25
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        26
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        27
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        28
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        29
      </div>
      <div
        className="Picker__Item-gIfqqC jKdLnX"
      >
        30
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        31
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        32
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        33
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        34
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        35
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        36
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        37
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        38
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        39
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        40
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        41
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        42
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        43
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        44
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        45
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        46
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        47
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        48
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        49
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        50
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        51
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        52
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        53
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        54
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        55
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        56
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        57
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        58
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        59
      </div>
    </div>
  </MockReactHammerJS>
  <div
    className="PickerContainer__Indicator-ccckoW gyFnAm"
  />
  <div
    className="PickerContainer__Overlay-bFXsUq dIwqvm"
  />
</div>
`;

exports[`Storyshots DatetimePickerDialog API 1`] = `
<div>
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    onClick={[Function]}
    readOnly={true}
    value="2016-05-18T07:30:31.722Z"
  />
</div>
`;

exports[`Storyshots Dialog API 1`] = `
<div>
  <div
    onClick={[Function]}
  >
    Click to OPEN!
  </div>
</div>
`;

exports[`Storyshots DomAlign API 1`] = `
<div>
  <div>
    Target node
  </div>
  <div>
    Source node
  </div>
</div>
`;

exports[`Storyshots Heading API 1`] = `
<h1
  className="Heading__Heading-bbmQNS kQNhbK"
>
  Level 1
</h1>
`;

exports[`Storyshots Heading With color props 1`] = `
<div>
  <h2
    className="Heading__Heading-bbmQNS gMxgez"
    color="black"
  >
    Level 2 
    black
  </h2>
  <h2
    className="Heading__Heading-bbmQNS hcgmPb"
    color="grayBase"
  >
    Level 2 
    grayBase
  </h2>
  <h2
    className="Heading__Heading-bbmQNS fuFoRN"
    color="grayDark"
  >
    Level 2 
    grayDark
  </h2>
  <h2
    className="Heading__Heading-bbmQNS iAugmh"
    color="grayLight"
  >
    Level 2 
    grayLight
  </h2>
  <h2
    className="Heading__Heading-bbmQNS jpMyPI"
    color="white"
  >
    Level 2 
    white
  </h2>
  <h2
    className="Heading__Heading-bbmQNS iAugmh"
    color="default"
  >
    Level 2 
    default
  </h2>
  <h2
    className="Heading__Heading-bbmQNS hyrrTn"
    color="primary"
  >
    Level 2 
    primary
  </h2>
  <h2
    className="Heading__Heading-bbmQNS kPPVye"
    color="success"
  >
    Level 2 
    success
  </h2>
  <h2
    className="Heading__Heading-bbmQNS fspUwR"
    color="error"
  >
    Level 2 
    error
  </h2>
  <h2
    className="Heading__Heading-bbmQNS eVchMc"
    color="warning"
  >
    Level 2 
    warning
  </h2>
</div>
`;

exports[`Storyshots Heading With level props 1`] = `
<div>
  <h1
    className="Heading__Heading-bbmQNS kQNhbK"
  >
    h
    1
     - Level 
    1
       (
    2.46rem
     = 
    31.98px
    )
  </h1>
  <h2
    className="Heading__Heading-bbmQNS yVDKj"
  >
    h
    2
     - Level 
    2
       (
    1.69rem
     = 
    21.97px
    )
  </h2>
  <h3
    className="Heading__Heading-bbmQNS jTIpYm"
  >
    h
    3
     - Level 
    3
       (
    1.38rem
     = 
    17.939999999999998px
    )
  </h3>
  <h4
    className="Heading__Heading-bbmQNS bhpnUP"
  >
    h
    4
     - Level 
    4
       (
    1.15rem
     = 
    14.95px
    )
  </h4>
  <h5
    className="Heading__Heading-bbmQNS cDLbBe"
  >
    h
    5
     - Level 
    5
       (
    1rem
     = 
    13px
    )
  </h5>
  <h6
    className="Heading__Heading-bbmQNS cDLbBe"
  >
    h
    6
     - Level 
    6
       (
    1rem
     = 
    13px
    )
  </h6>
</div>
`;

exports[`Storyshots Hr API 1`] = `
<hr
  className="Hr__StyledHr-cIXjSE dCevnQ"
/>
`;

exports[`Storyshots Hr With children 1`] = `
<div
  className="Hr__Wrapper-hzpgYW hoorgF"
>
  <hr
    className="Hr__StyledHr-cIXjSE dCevnQ"
  />
  <div
    className="Hr__Content-cXfAsM fjfPLa"
  >
    String
  </div>
  <hr
    className="Hr__StyledHr-cIXjSE dCevnQ"
  />
</div>
`;

exports[`Storyshots Icon [mcs-lite-icon] API 1`] = `
<svg
  fill="currentColor"
  height="1em"
  preserveAspectRatio="xMidYMid meet"
  viewBox="0 0 24 24"
  width="1em"
>
  <path
    d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
  />
</svg>
`;

exports[`Storyshots Icon [mcs-lite-icon] MorphReplace 1`] = `
<MockMorphReplace
  height={24}
  width={24}
>
  <svg
    fill="currentColor"
    height="1em"
    preserveAspectRatio="xMidYMid meet"
    viewBox="0 0 24 24"
    width="1em"
  >
    <path
      d="M19.9 13v-2h-12l5.5-5.5L12 4.1 4.1 12l7.9 7.9 1.4-1.4L7.9 13h12z"
    />
  </svg>
</MockMorphReplace>
`;

exports[`Storyshots Icon [mcs-lite-icon] Spin Icon 1`] = `
<div
  className="Spin__Spin-cdyXhD emAbgi"
>
  <svg
    fill="currentColor"
    height="1em"
    preserveAspectRatio="xMidYMid meet"
    viewBox="0 0 24 24"
    width="1em"
  >
    <path
      d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
      opacity=".3"
    />
    <path
      d="M12 4c4.4 0 8 3.6 8 8h2c0-5.5-4.5-10-10-10v2z"
    />
  </svg>
</div>
`;

exports[`Storyshots Img API 1`] = `
<div
  className="Img-example__Container-iIgyRP ewDqK"
>
  <div
    className="Img__Img-hamkNM dfJelk"
    size="cover"
    src="http://placehold.it/350x150"
  />
</div>
`;

exports[`Storyshots Img With height override 1`] = `
<div
  className="Img-example__StyledImg-jLedKD jstGqX Img__Img-hamkNM dfJelk"
  size="cover"
  src="http://placehold.it/350x150"
/>
`;

exports[`Storyshots Img With size props 1`] = `
<div
  className="Img-example__Container-iIgyRP ewDqK"
>
  <div
    className="Img__Img-hamkNM dqokKr"
    size="contain"
    src="http://placehold.it/350x150"
  />
</div>
`;

exports[`Storyshots Input API 1`] = `
<input
  className="Input__Input-ixjKAz hMaVBp"
  kind="primary"
  placeholder="placeholder"
/>
`;

exports[`Storyshots Input With focus props 1`] = `
<input
  className="Input__Input-ixjKAz haVXDh"
  kind="primary"
  placeholder="placeholder"
/>
`;

exports[`Storyshots Input With kind props 1`] = `
<div
  className="Input-example__Wrapper-wdFpp vSgWM"
>
  <input
    className="Input__Input-ixjKAz fdAlSe"
    kind="default"
    placeholder="default"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="primary"
  />
  <input
    className="Input__Input-ixjKAz kQAVcY"
    kind="success"
    placeholder="success"
  />
  <input
    className="Input__Input-ixjKAz hJJlNR"
    kind="error"
    placeholder="error"
  />
  <input
    className="Input__Input-ixjKAz jrljQl"
    kind="warning"
    placeholder="warning"
  />
</div>
`;

exports[`Storyshots Input With type props 1`] = `
<div
  className="Input-example__Wrapper-wdFpp vSgWM"
>
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="text"
    type="text"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="email"
    type="email"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="number"
    type="number"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="password"
    type="password"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="tel"
    type="tel"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="search"
    type="search"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="month"
    type="month"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="week"
    type="week"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="date"
    type="date"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="color"
    type="color"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="file"
    type="file"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="radio"
    type="radio"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="time"
    type="time"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="url"
    type="url"
  />
  <input
    className="Input__Input-ixjKAz hMaVBp"
    kind="primary"
    placeholder="range"
    type="range"
  />
</div>
`;

exports[`Storyshots InputGroup API 1`] = `
<div
  className="InputGroup-example__Wrapper-bWyLSo Ysjnj"
>
  <div
    className="InputGroup__InputGroup-jokkYF Gitcm"
  >
    <button
      className="Button__Button-jkHDFw ihhbsM"
    >
      Button 1
    </button>
    <button
      className="Button__Button-jkHDFw gIeMIe"
    >
      Button 2
    </button>
  </div>
  <div
    className="InputGroup__InputGroup-jokkYF Gitcm"
  >
    <button
      className="Button__Button-jkHDFw ibjUrp"
    >
      Button 1
    </button>
    <button
      className="Button__Button-jkHDFw bmbEVQ"
    >
      Button Two
    </button>
    <button
      className="Button__Button-jkHDFw gdiAwO"
    >
      Button Three
    </button>
  </div>
  <div
    className="InputGroup__InputGroup-jokkYF Gitcm"
  >
    <button
      className="Button__Button-jkHDFw ibjUrp"
    >
      大於
    </button>
    <input
      className="Input__Input-ixjKAz hMaVBp"
      kind="primary"
      placeholder="預設值：20"
    />
  </div>
  <div
    className="InputGroup__InputGroup-jokkYF Gitcm"
  >
    <input
      className="Input__Input-ixjKAz hMaVBp"
      kind="primary"
      placeholder="Input 1"
    />
    <button
      className="Button__Button-jkHDFw ibjUrp"
    >
      Button 1
    </button>
  </div>
  <div
    className="InputGroup__InputGroup-jokkYF Gitcm"
  >
    <button
      className="Button__Button-jkHDFw ibjUrp"
    >
      Button 1
    </button>
    <input
      className="Input__Input-ixjKAz hMaVBp"
      kind="primary"
      placeholder="Input 1"
    />
    <button
      className="Button__Button-jkHDFw ibjUrp"
    >
      Button 2
    </button>
  </div>
  <div
    className="InputGroup__InputGroup-jokkYF Gitcm"
  >
    <button
      className="Button__Button-jkHDFw ibjUrp"
    >
      之間
    </button>
    <input
      className="Input__Input-ixjKAz hMaVBp"
      kind="primary"
      placeholder="預設值：0"
    />
    <button
      className="Button__Button-jkHDFw cAmDCa"
    >
      和
    </button>
    <input
      className="Input__Input-ixjKAz hMaVBp"
      kind="primary"
      placeholder="預設值：100"
    />
  </div>
</div>
`;

exports[`Storyshots InputRange API 1`] = `
<input
  className="InputRange__InputRange-uGAsR iOVoet"
  kind="primary"
  type="range"
/>
`;

exports[`Storyshots InputRange With kind props 1`] = `
<div
  className="InputRange-example__Wrapper-daQGDv gtXCgk"
>
  <input
    className="InputRange__InputRange-uGAsR nmjGq"
    kind="default"
    type="range"
  />
  <input
    className="InputRange__InputRange-uGAsR iOVoet"
    kind="primary"
    type="range"
  />
  <input
    className="InputRange__InputRange-uGAsR gDXrIL"
    kind="success"
    type="range"
  />
  <input
    className="InputRange__InputRange-uGAsR DLSLN"
    kind="error"
    type="range"
  />
  <input
    className="InputRange__InputRange-uGAsR iugumr"
    kind="warning"
    type="range"
  />
</div>
`;

exports[`Storyshots Menu API for Menu 1`] = `
<div
  className="Menu__Menu-eXBrAE dbvbBA Card__Card-cAIRri hUtceH"
>
  Children
</div>
`;

exports[`Storyshots Menu API for MenuItem 1`] = `
<div
  className="MenuItem__MenuItem-jVnLzZ bzgLkk"
>
  A
</div>
`;

exports[`Storyshots Menu Fixed width 1`] = `
<div
  className="Menu-example__StyledMenu-edugow XpCZ Menu__Menu-eXBrAE dbvbBA Card__Card-cAIRri hUtceH"
>
  <div
    className="MenuItem__MenuItem-jVnLzZ bzgLkk"
    onClick={[Function]}
  >
    MenuItem 1
  </div>
  <div
    className="MenuItem__MenuItem-jVnLzZ bzgLkk"
    onClick={[Function]}
  >
    MenuItem Content 2
  </div>
  <div
    className="MenuItem__MenuItem-jVnLzZ bzgLkk"
    onClick={[Function]}
  >
    <h1
      className="Heading__Heading-bbmQNS kQNhbK"
    >
      MenuItem Heading 1
    </h1>
  </div>
  <div
    className="MenuItem__MenuItem-jVnLzZ bzgLkk"
    onClick={[Function]}
  >
    <p
      className="P__P-KJbCR huqyql"
    >
      MenuItem P
    </p>
  </div>
  <div
    className="MenuItem__MenuItem-jVnLzZ bzgLkk"
    onClick={[Function]}
  >
    <p
      className="P__P-KJbCR kCwgXa"
      color="error"
    >
      MenuItem P error
    </p>
  </div>
  <div
    className="MenuItem__MenuItem-jVnLzZ bzgLkk"
    onClick={[Function]}
  >
    <a
      className="A__A-cCPuKx iriyAs"
      color="primary"
    >
      MenuItem A
    </a>
  </div>
  <div
    className="MenuItem__MenuItem-jVnLzZ bzgLkk"
    onClick={[Function]}
  >
    <b
      className="B__B-bYLQjZ jyrAdw"
    >
      MenuItem B
    </b>
  </div>
  <div
    className="MenuItem__MenuItem-jVnLzZ bzgLkk"
    onClick={[Function]}
  >
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 24 24"
      width="1em"
    >
      <path
        d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
      />
    </svg>
  </div>
</div>
`;

exports[`Storyshots Menu Min width 1`] = `
<div
  className="Menu__Menu-eXBrAE dbvbBA Card__Card-cAIRri hUtceH"
>
  <div
    className="MenuItem__MenuItem-jVnLzZ bzgLkk"
    onClick={[Function]}
  >
    複製
  </div>
  <div
    className="MenuItem__MenuItem-jVnLzZ bzgLkk"
    onClick={[Function]}
  >
    刪除
  </div>
</div>
`;

exports[`Storyshots MobileContentWrapper API 1`] = `
<div
  className="MobileContentWrapper__MobileContentWrapper-cFnkPI clLSYv"
>
  <div
    className="MobileContentWrapper-example__Content-XcUFk kVlrVD"
  >
    With max-width
  </div>
</div>
`;

exports[`Storyshots MobileDeviceCard API 1`] = `
<div
  className="MobileDeviceCard__StyledCard-bIftJD kXtYTg Card__Card-cAIRri hUtceH"
>
  <div
    className="MobileDeviceCard__ImageWrapper-jwFbMz hHmuCa"
  >
    <div
      className="Img__Img-hamkNM PwsIR"
      size="cover"
      src="https://img.mediatek.com/600/mtk.linkit/productBanner.png"
    />
  </div>
  <div
    className="MobileDeviceCard__ContentWrapper-bykepX kUBrFw"
  >
    <h4
      className="Heading__Heading-bbmQNS RDccM"
      color="black"
    >
      <MockReactTextTruncate
        line={4}
        text="範例 B 的測試裝置"
        truncateText=" ..."
      />
    </h4>
  </div>
</div>
`;

exports[`Storyshots MobileDeviceCard Override height 1`] = `
<div
  className="MobileDeviceCard-example__StyledMobileDeviceCard-jTtTpC inUvtX MobileDeviceCard__StyledCard-bIftJD kXtYTg Card__Card-cAIRri hUtceH"
>
  <div
    className="MobileDeviceCard__ImageWrapper-jwFbMz hHmuCa"
  >
    <div
      className="Img__Img-hamkNM PwsIR"
      size="cover"
      src="https://img.mediatek.com/600/mtk.linkit/productBanner.png"
    />
  </div>
  <div
    className="MobileDeviceCard__ContentWrapper-bykepX kUBrFw"
  >
    <h4
      className="Heading__Heading-bbmQNS RDccM"
      color="black"
    >
      <MockReactTextTruncate
        line={4}
        text="範例 B 的測試裝置"
        truncateText=" ..."
      />
    </h4>
  </div>
</div>
`;

exports[`Storyshots MobileFixedFooter API 1`] = `
<footer
  className="MobileFixedFooter__Footer-cVbRbU dkKmXN"
>
  <div
    className="MobileContentWrapper__MobileContentWrapper-cFnkPI clLSYv"
  >
    <div
      className="MobileDeviceCard-example__ButtonWrapper-iyAdhZ jrsUnC"
    >
      <button
        className="Button__Button-jkHDFw icgYzt"
      >
        Cancel
      </button>
      <button
        className="Button__Button-jkHDFw bzTowI"
      >
        Submit
      </button>
    </div>
  </div>
</footer>
`;

exports[`Storyshots MobileHeader API 1`] = `
<header
  className="MobileHeader__Container-jQWXTI linKhW"
>
  <MockPortal>
    <div
      className="MobileHeader__Fixed-bxRWpA kgtkSd"
    >
      <div
        className="MobileHeader__Wrapper-fFoyVn kSrNmB MobileContentWrapper__MobileContentWrapper-cFnkPI clLSYv"
      >
        <div
          className="MobileHeader__Left-bvAwFg exNQke"
        >
          <a
            className="MobileHeaderIcon__MobileHeaderIcon-kXDpgZ jOgeYf"
          >
            <svg
              fill="currentColor"
              height="1em"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 24 24"
              width="1em"
            >
              <path
                d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
              />
            </svg>
          </a>
        </div>
        <div
          className="MobileHeader__Center-cHIFFa bdSdNh"
        >
          <h3
            className="MobileHeader__StyledHeading-gJYUWC leIPvi Heading__Heading-bbmQNS dAMrfO"
            color="white"
          >
            <b
              className="B__B-bYLQjZ jyrAdw"
            >
              Device List
            </b>
          </h3>
        </div>
        <div
          className="MobileHeader__Right-bzZKEQ cjeiIo"
        />
      </div>
    </div>
  </MockPortal>
</header>
`;

exports[`Storyshots MobileHeader With right props 1`] = `
<header
  className="MobileHeader__Container-jQWXTI linKhW"
>
  <MockPortal>
    <div
      className="MobileHeader__Fixed-bxRWpA kgtkSd"
    >
      <div
        className="MobileHeader__Wrapper-fFoyVn kSrNmB MobileContentWrapper__MobileContentWrapper-cFnkPI clLSYv"
      >
        <div
          className="MobileHeader__Left-bvAwFg exNQke"
        >
          <div
            className="MobileHeaderIcon__MobileHeaderIcon-kXDpgZ jOgeYf"
          >
            <svg
              fill="currentColor"
              height="1em"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 24 24"
              width="1em"
            >
              <path
                d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
              />
            </svg>
          </div>
        </div>
        <div
          className="MobileHeader__Center-cHIFFa bdSdNh"
        >
          <h3
            className="MobileHeader__StyledHeading-gJYUWC leIPvi Heading__Heading-bbmQNS dAMrfO"
            color="white"
          >
            <b
              className="B__B-bYLQjZ jyrAdw"
            >
              Device List
            </b>
          </h3>
        </div>
        <div
          className="MobileHeader__Right-bzZKEQ cjeiIo"
        >
          <a
            className="MobileHeaderIcon__MobileHeaderIcon-kXDpgZ jOgeYf"
          >
            <svg
              fill="currentColor"
              height="1em"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 24 24"
              width="1em"
            >
              <path
                d="M15.5 14h-.8l-.3-.3c1-1.1 1.6-2.6 1.6-4.2C16 5.9 13.1 3 9.5 3S3 5.9 3 9.5 5.9 16 9.5 16c1.6 0 3.1-.6 4.2-1.6l.3.3v.8l5 5 1.5-1.5-5-5zm-6 0C7 14 5 12 5 9.5S7 5 9.5 5 14 7 14 9.5 12 14 9.5 14z"
              />
            </svg>
          </a>
        </div>
      </div>
    </div>
  </MockPortal>
</header>
`;

exports[`Storyshots Notification API 1`] = `
<div
  className="Notification__Notification-gEpGHZ kkmGbi"
>
  Do you want to go to Enalish version website?
</div>
`;

exports[`Storyshots Notification With feedbck Button component 1`] = `
<div
  className="Notification__Notification-gEpGHZ kkmGbi"
>
  <p
    className="P__P-KJbCR huqyql"
  >
    Do you want to go to Enalish version website?
  </p>
  <button
    className="Button__Button-jkHDFw ibjUrp"
  >
    Yes, please
  </button>
</div>
`;

exports[`Storyshots Overlay API 1`] = `
<div>
  <a
    className="A__A-cCPuKx iriyAs"
    color="primary"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    Hover me
  </a>
  <MockPortal />
</div>
`;

exports[`Storyshots Overlay Dropdown Menu 1`] = `
<div
  className="Overlay-example__Wrapper-kJekHD kqgtdh"
>
  <div>
    <button
      className="Button__Button-jkHDFw ibjUrp"
      onClick={[Function]}
    >
      Button
    </button>
  </div>
  <div>
    <button
      className="Button__Button-jkHDFw ibjUrp"
      onClick={[Function]}
    >
      Button
    </button>
  </div>
  <div>
    <button
      className="Button__Button-jkHDFw ibjUrp"
      onClick={[Function]}
    >
      Button
    </button>
  </div>
</div>
`;

exports[`Storyshots P API 1`] = `
<p
  className="P__P-KJbCR huqyql"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur esse dolore incididunt incididunt aliquip pariatur est minim officia sit. Nulla pariatur duis duis quis commodo cupidatat voluptate enim culpa elit adipisicing do cupidatat sint anim. Cillum elit magna occaecat proident sit cupidatat ad quis sunt id culpa culpa. Ad duis nulla in incididunt amet consequat officia ad voluptate voluptate. Pariatur eiusmod ullamco cupidatat non magna officia aute magna deserunt qui aute dolor eu. Qui amet non ex cillum sunt ad velit consequat ipsum velit.
</p>
`;

exports[`Storyshots P Nested children with div 1`] = `
<div
  className="P__P-KJbCR huqyql"
>
  <div>
    <span>
      Qui amet non ex cillum sunt ad velit consequat ipsum velit.
    </span>
  </div>
</div>
`;

exports[`Storyshots P With color props 1`] = `
<div>
  <div
    className="P__P-KJbCR bBQRSt"
    color="black"
  >
    Paragraph 
    black
  </div>
  <div
    className="P__P-KJbCR kHKeHO"
    color="grayBase"
  >
    Paragraph 
    grayBase
  </div>
  <div
    className="P__P-KJbCR ceCaoj"
    color="grayDark"
  >
    Paragraph 
    grayDark
  </div>
  <div
    className="P__P-KJbCR kNxHnv"
    color="grayLight"
  >
    Paragraph 
    grayLight
  </div>
  <div
    className="P__P-KJbCR gJIGAs"
    color="white"
  >
    Paragraph 
    white
  </div>
  <div
    className="P__P-KJbCR kNxHnv"
    color="default"
  >
    Paragraph 
    default
  </div>
  <div
    className="P__P-KJbCR dnAaPu"
    color="primary"
  >
    Paragraph 
    primary
  </div>
  <div
    className="P__P-KJbCR dBhihc"
    color="success"
  >
    Paragraph 
    success
  </div>
  <div
    className="P__P-KJbCR kCwgXa"
    color="error"
  >
    Paragraph 
    error
  </div>
  <div
    className="P__P-KJbCR kYKlrf"
    color="warning"
  >
    Paragraph 
    warning
  </div>
</div>
`;

exports[`Storyshots Picker API 1`] = `
<div
  className="PickerContainer__Container-bycPjJ fSlrkj"
>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="Picker__ItemWrapper-buHaJW chppio"
      style={
        Object {
          "marginTop": -0,
        }
      }
    >
      <div
        className="Picker__Item-gIfqqC jKdLnX"
      >
        Apple
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        Pen
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        Apple pen
      </div>
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        Pineapple
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x",
      }
    }
  >
    <div
      className="Picker__ItemWrapper-buHaJW chppio"
      style={
        Object {
          "marginTop": -40,
        }
      }
    >
      <div
        className="Picker__Item-gIfqqC gwrnjL"
      >
        PPAP
      </div>
      <div
        className="Picker__Item-gIfqqC jKdLnX"
      >
        PAPA
      </div>
    </div>
  </MockReactHammerJS>
  <div
    className="PickerContainer__Indicator-ccckoW gyFnAm"
  />
  <div
    className="PickerContainer__Overlay-bFXsUq dIwqvm"
  />
</div>
`;

exports[`Storyshots PreventDrag API 1`] = `
<div>
  <img
    alt=""
    src="http://placehold.it/350x150"
  />
  <div
    className="PreventDrag__Container-lhVqqt jZxAtg"
    onDragStart={[Function]}
    onDrop={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
  >
    <img
      alt=""
      src="http://placehold.it/350x150"
    />
  </div>
  <a
    href=""
  >
    Link content
  </a>
  <div
    className="PreventDrag__Container-lhVqqt jZxAtg"
    onDragStart={[Function]}
    onDrop={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
  >
    <a
      href=""
    >
      Link content (PreventDrag)
    </a>
  </div>
</div>
`;

exports[`Storyshots PullToRefresh API 1`] = `
<div
  className="PullToRefresh-example__Body-kvPuEP jqTbuF"
>
  <MockReactHammerJS
    direction="DIRECTION_DOWN"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x pan-y",
      }
    }
  >
    <div
      className="PullToRefresh__PullWrapper-hUeHkt fozezD"
      style={
        Object {
          "marginTop": 0,
        }
      }
    >
      <div
        className="PullToRefresh__LoadingContainer-gGvvOL jNtWxV"
      >
        <h2
          className="Heading__Heading-bbmQNS hcgmPb"
          color="grayBase"
        >
          <svg
            fill="currentColor"
            height="1em"
            preserveAspectRatio="xMidYMid meet"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 18.9l5-5h-3.8V5.1h-2.5v8.8H7l5 5z"
            />
          </svg>
        </h2>
      </div>
      <section
        className="PullToRefresh-example__Content-leEnCL kTfXKc"
      >
        <h1
          className="PullToRefresh-example__StyledHeading-doARpL fhQJUH Heading__Heading-bbmQNS juYEDj"
          color="white"
        >
          Pull me down
        </h1>
        <h3
          className="PullToRefresh-example__StyledHeading-doARpL fhQJUH Heading__Heading-bbmQNS dAMrfO"
          color="white"
        >
          (API will respond after 3 seconds.)
        </h3>
      </section>
    </div>
  </MockReactHammerJS>
</div>
`;

exports[`Storyshots Select API - ReadOnly 1`] = `
<div
  className="Select__Wrapper-eSbpzS iiHgqs"
>
  <div
    className="Select__StyledInputGroup-etiIHI eQWZKB InputGroup__InputGroup-jokkYF Gitcm"
  >
    <input
      className="Input__Input-ixjKAz hMaVBp"
      kind="primary"
      placeholder={undefined}
      readOnly={true}
      value="value 2"
    />
    <button
      className="Select__StyledButton-cTmWPL gSnzsA Button__Button-jkHDFw cAmDCa"
    >
      <svg
        fill="currentColor"
        height="1em"
        preserveAspectRatio="xMidYMid meet"
        viewBox="0 0 24 24"
        width="1em"
      >
        <path
          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
        />
      </svg>
    </button>
  </div>
  <select
    className="Select__StyledSelect-dmoCxq gcTFyD"
    onBlur={[Function]}
    onFocus={[Function]}
    readOnly={true}
    value={2}
  >
    <option
      value={1}
    >
      value 1
    </option>
    <option
      value={2}
    >
      value 2
    </option>
  </select>
</div>
`;

exports[`Storyshots Select With disabled props 1`] = `
<div
  className="Select__Wrapper-eSbpzS iiHgqs"
>
  <div
    className="Select__StyledInputGroup-etiIHI eQWZKB InputGroup__InputGroup-jokkYF Gitcm"
  >
    <input
      className="Input__Input-ixjKAz hMaVBp"
      kind="primary"
      placeholder="選擇資料通道"
      readOnly={true}
      value=""
    />
    <button
      className="Select__StyledButton-cTmWPL gSnzsA Button__Button-jkHDFw cAmDCa"
    >
      <svg
        fill="currentColor"
        height="1em"
        preserveAspectRatio="xMidYMid meet"
        viewBox="0 0 24 24"
        width="1em"
      >
        <path
          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
        />
      </svg>
    </button>
  </div>
  <select
    className="Select__StyledSelect-dmoCxq gcTFyD"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    value="SELECT/PLACEHOLDER_VALUE"
  >
    <option
      disabled={true}
      value="SELECT/PLACEHOLDER_VALUE"
    >
      選擇資料通道
    </option>
    <option
      value={1}
    >
      value 1
    </option>
    <option
      value={2}
    >
      value 2
    </option>
    <option
      disabled={true}
      value={3}
    >
      value 3
    </option>
  </select>
</div>
`;

exports[`Storyshots Select With kind props 1`] = `
<div
  className="Select__Wrapper-eSbpzS iiHgqs"
>
  <div
    className="Select__StyledInputGroup-etiIHI eQWZKB InputGroup__InputGroup-jokkYF Gitcm"
  >
    <input
      className="Input__Input-ixjKAz jrljQl"
      kind="warning"
      placeholder={undefined}
      readOnly={true}
      value="value 2"
    />
    <button
      className="Select__StyledButton-cTmWPL gSnzsA Button__Button-jkHDFw cuvai"
    >
      <svg
        fill="currentColor"
        height="1em"
        preserveAspectRatio="xMidYMid meet"
        viewBox="0 0 24 24"
        width="1em"
      >
        <path
          d="M7.4 9.8l4.6 4.6 4.6-4.6 1.4 1.4-6 6-6-6 1.4-1.4z"
        />
      </svg>
    </button>
  </div>
  <select
    className="Select__StyledSelect-dmoCxq gcTFyD"
    onBlur={[Function]}
    onFocus={[Function]}
    readOnly={true}
    value={2}
  >
    <option
      value={1}
    >
      value 1
    </option>
    <option
      value={2}
    >
      value 2
    </option>
  </select>
</div>
`;

exports[`Storyshots Small API 1`] = `
<small
  className="Small__Small-eZiBK gQBpAl"
>
  Small content
</small>
`;

exports[`Storyshots Small With color 1`] = `
<div
  className="P__P-KJbCR dnAaPu"
  color="primary"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="Small__Small-eZiBK gQBpAl"
  >
     Small content 
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Small Within <P> 1`] = `
<div
  className="P__P-KJbCR huqyql"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="Small__Small-eZiBK gQBpAl"
  >
     Small content 
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Spin API 1`] = `
<div
  className="Spin__Spin-cdyXhD emAbgi"
>
  <div
    className="Spin-example__ContentWrapper-eYWZhG jhfWmc"
  >
    Content
  </div>
</div>
`;

exports[`Storyshots StatusLight API 1`] = `
<svg
  className="StatusLight__Svg-IVkxE heGIpa"
  color="grayDark"
  viewBox="0 0 20 20"
>
  <circle
    cx="10"
    cy="10"
    r="10"
  />
</svg>
`;

exports[`Storyshots StatusLight Custom width 1`] = `
<svg
  className="StatusLight-example__StyledStatusLight-gJJZrm jAEoyj StatusLight__Svg-IVkxE hJNOzP"
  color="warning"
  viewBox="0 0 20 20"
>
  <circle
    cx="10"
    cy="10"
    r="10"
  />
</svg>
`;

exports[`Storyshots StatusLight With color props 1`] = `
<div>
  <div>
    <svg
      className="StatusLight__Svg-IVkxE hnicAH"
      color="black"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    black
  </div>
  <div>
    <svg
      className="StatusLight__Svg-IVkxE dvdNlr"
      color="grayBase"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    grayBase
  </div>
  <div>
    <svg
      className="StatusLight__Svg-IVkxE heGIpa"
      color="grayDark"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    grayDark
  </div>
  <div>
    <svg
      className="StatusLight__Svg-IVkxE kSlPaX"
      color="grayLight"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    grayLight
  </div>
  <div>
    <svg
      className="StatusLight__Svg-IVkxE cYnaF"
      color="white"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    white
  </div>
  <div>
    <svg
      className="StatusLight__Svg-IVkxE kSlPaX"
      color="default"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    default
  </div>
  <div>
    <svg
      className="StatusLight__Svg-IVkxE fmAywI"
      color="primary"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    primary
  </div>
  <div>
    <svg
      className="StatusLight__Svg-IVkxE geyPxt"
      color="success"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    success
  </div>
  <div>
    <svg
      className="StatusLight__Svg-IVkxE hNlpox"
      color="error"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    error
  </div>
  <div>
    <svg
      className="StatusLight__Svg-IVkxE hJNOzP"
      color="warning"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    warning
  </div>
</div>
`;

exports[`Storyshots Switch API 1`] = `
<div>
  <div
    checked={false}
    className="Switch__Switch-iwxo kHzQqK"
    kind="success"
  />
  <div
    checked={true}
    className="Switch__Switch-iwxo ifDnsZ"
    kind="success"
  />
</div>
`;

exports[`Storyshots Switch Overriding style 1`] = `
<div
  checked={false}
  className="Switch-example__StyledSwitch-iHaxSV XngkH Switch__Switch-iwxo kHzQqK"
  kind="success"
  onClick={[Function]}
/>
`;

exports[`Storyshots Switch Stateful switch 1`] = `
<div
  checked={false}
  className="Switch__Switch-iwxo kHzQqK"
  kind="success"
  onClick={[Function]}
/>
`;

exports[`Storyshots Switch With kind props 1`] = `
<div>
  <div
    checked={true}
    className="Switch__Switch-iwxo hlssYE"
    kind="default"
  />
  <div
    checked={true}
    className="Switch__Switch-iwxo gFZbFJ"
    kind="primary"
  />
  <div
    checked={true}
    className="Switch__Switch-iwxo ifDnsZ"
    kind="success"
  />
  <div
    checked={true}
    className="Switch__Switch-iwxo UIXdu"
    kind="error"
  />
  <div
    checked={true}
    className="Switch__Switch-iwxo bmsKrn"
    kind="warning"
  />
</div>
`;

exports[`Storyshots Switch With scaling 1`] = `
<div
  checked={false}
  className="Switch-example__ScaledSwitch-khorHw fcaaTH Switch__Switch-iwxo kHzQqK"
  kind="primary"
  onClick={[Function]}
/>
`;

exports[`Storyshots TabItem API 1`] = `
<div>
  <div
    className="TabItem__Item-vxESp gEEikE"
    color="primary"
    onClick={[Function]}
    value="key"
  >
    TabItem
  </div>
  <div
    className="TabItem__Item-vxESp dgviiz"
    color="primary"
    onClick={[Function]}
    value="key"
  >
    Active TabItem
  </div>
</div>
`;

exports[`Storyshots TabItem With color props 1`] = `
<div>
  <div
    className="TabItem__Item-vxESp cnWVdd"
    color="warning"
    onClick={[Function]}
    value={1}
  >
    TabItem 1
  </div>
  <div
    className="TabItem__Item-vxESp jIVMHy"
    color="warning"
    onClick={[Function]}
    value={2}
  >
    TabItem 2
  </div>
</div>
`;

exports[`Storyshots TabItem With state 1`] = `
<div>
  <div
    className="TabItem__Item-vxESp gEEikE"
    color="primary"
    onClick={[Function]}
    value={1}
  >
    Tab 1
  </div>
  <div
    className="TabItem__Item-vxESp gEEikE"
    color="primary"
    onClick={[Function]}
    value={2}
  >
    Tab 2
  </div>
  <div
    className="TabItem__Item-vxESp gEEikE"
    color="primary"
    onClick={[Function]}
    value={3}
  >
    Tab 3
  </div>
</div>
`;

exports[`Storyshots Textarea API 1`] = `
<textarea
  className="Textarea__Textarea-dEcNVt haEdAh"
  kind="primary"
  placeholder="placeholder"
  rows="3"
/>
`;

exports[`Storyshots Textarea With kind props 1`] = `
<div
  className="Textarea-example__Wrapper-kusIty bBsgXW"
>
  <textarea
    className="Textarea__Textarea-dEcNVt fvmhgP"
    kind="default"
    placeholder="default"
  />
  <textarea
    className="Textarea__Textarea-dEcNVt haEdAh"
    kind="primary"
    placeholder="primary"
  />
  <textarea
    className="Textarea__Textarea-dEcNVt kdksoR"
    kind="success"
    placeholder="success"
  />
  <textarea
    className="Textarea__Textarea-dEcNVt cYouPi"
    kind="error"
    placeholder="error"
  />
  <textarea
    className="Textarea__Textarea-dEcNVt kyKxSk"
    kind="warning"
    placeholder="warning"
  />
</div>
`;

exports[`Storyshots Toast API 1`] = `
<div
  className="Toast__StyledCard-dKvPEv xXMjE Card__Card-cAIRri hUtceH"
  kind="primary"
>
  <p
    className="Toast__StyledP-eeALRT cWNzuc P__P-KJbCR huqyql"
    kind="primary"
  >
    Success! You have delete the item.
  </p>
</div>
`;

exports[`Storyshots Toast With kind props 1`] = `
<div
  className="Toast-example__DemoWrapper-bLIpHv dcOcvf"
>
  <div
    className="Toast__StyledCard-dKvPEv fGSYja Card__Card-cAIRri hUtceH"
    kind="default"
  >
    <div
      className="Toast__StyledP-eeALRT ddnvXK P__P-KJbCR huqyql"
      kind="default"
    >
      default
       - You have delete the item.
    </div>
  </div>
  <div
    className="Toast__StyledCard-dKvPEv xXMjE Card__Card-cAIRri hUtceH"
    kind="primary"
  >
    <div
      className="Toast__StyledP-eeALRT cWNzuc P__P-KJbCR huqyql"
      kind="primary"
    >
      primary
       - You have delete the item.
    </div>
  </div>
  <div
    className="Toast__StyledCard-dKvPEv iRqXRu Card__Card-cAIRri hUtceH"
    kind="success"
  >
    <div
      className="Toast__StyledP-eeALRT gbzmoi P__P-KJbCR huqyql"
      kind="success"
    >
      success
       - You have delete the item.
    </div>
  </div>
  <div
    className="Toast__StyledCard-dKvPEv kcfhNy Card__Card-cAIRri hUtceH"
    kind="error"
  >
    <div
      className="Toast__StyledP-eeALRT bSnEnl P__P-KJbCR huqyql"
      kind="error"
    >
      error
       - You have delete the item.
    </div>
  </div>
  <div
    className="Toast__StyledCard-dKvPEv NEOeg Card__Card-cAIRri hUtceH"
    kind="warning"
  >
    <div
      className="Toast__StyledP-eeALRT cmavJn P__P-KJbCR huqyql"
      kind="warning"
    >
      warning
       - You have delete the item.
    </div>
  </div>
</div>
`;
