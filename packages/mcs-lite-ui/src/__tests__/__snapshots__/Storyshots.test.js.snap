// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots A API 1`] = `
<a
  className="DvAuM"
  color="primary"
>
  Link
</a>
`;

exports[`Storyshots A Nested children with Heading 1`] = `
<h1
  className="khhwSD"
>
  Heading Level 1 
  <b
    className="dbJQUp"
  >
    <a
      className="DvAuM"
      color="primary"
    >
      Link
    </a>
  </b>
</h1>
`;

exports[`Storyshots A With color props 1`] = `
<div>
  <a
    className="jLdAuJ"
    color="black"
  >
    A link 
    black
  </a>
  <a
    className="kyNyjl"
    color="grayBase"
  >
    A link 
    grayBase
  </a>
  <a
    className="ehnQkl"
    color="grayDark"
  >
    A link 
    grayDark
  </a>
  <a
    className="gWZiGp"
    color="grayLight"
  >
    A link 
    grayLight
  </a>
  <a
    className="dJsIUd"
    color="white"
  >
    A link 
    white
  </a>
  <a
    className="gWZiGp"
    color="default"
  >
    A link 
    default
  </a>
  <a
    className="DvAuM"
    color="primary"
  >
    A link 
    primary
  </a>
  <a
    className="keSCqy"
    color="success"
  >
    A link 
    success
  </a>
  <a
    className="gaOGFo"
    color="error"
  >
    A link 
    error
  </a>
  <a
    className="kuEqBk"
    color="warning"
  >
    A link 
    warning
  </a>
</div>
`;

exports[`Storyshots API [mcs-lite-theme] [JSON] kind 1`] = `
<div>
  <pre>
    [
      "default",
      "primary",
      "success",
      "error",
      "warning"
    ]
  </pre>
</div>
`;

exports[`Storyshots API [mcs-lite-theme] [JSON] theme 1`] = `
<div>
  <pre>
    {
      "color": {
        "black": "#353630",
        "grayBase": "#999A94",
        "grayDark": "#D1D2D3",
        "grayLight": "#FAFAFA",
        "white": "#FFFFFF",
        "default": "#FAFAFA",
        "primary": "#00A1DE",
        "success": "#69BE28",
        "error": "#F5364E",
        "warning": "#F39A1E"
      },
      "base": {
        "bodyBackgroundColor": "#F1F2F7",
        "bodyColor": "#353630",
        "fontSize": "13px",
        "lineHeight": 1.5,
        "inputHeight": "32px"
      },
      "fontSize": {
        "small": "92.3%",
        "p": "1rem",
        "h6": "1rem",
        "h5": "1rem",
        "h4": "1.15rem",
        "h3": "1.38rem",
        "h2": "1.69rem",
        "h1": "2.46rem"
      },
      "mobile": {
        "maxWidth": "800px",
        "headerHeight": "56px"
      }
    }
  </pre>
</div>
`;

exports[`Storyshots B API 1`] = `
<b
  className="dbJQUp"
>
  Bold content
</b>
`;

exports[`Storyshots B CJK 1`] = `
<h4
  className="jSuFAn"
>
  <b
    className="dbJQUp"
  >
    控制開關粗體字
  </b>
</h4>
`;

exports[`Storyshots B With color 1`] = `
<div
  className="hEzGry"
  color="primary"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <b
    className="dbJQUp"
  >
     Bold content 
  </b>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots B Within <P> 1`] = `
<div
  className="gVViGF"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="gPtzLl"
  >
    <b
      className="dbJQUp"
    >
       Bold content 
    </b>
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Button API 1`] = `
<button
  className="fqCsyW"
>
  button
</button>
`;

exports[`Storyshots Button Overriding style 1`] = `
<button
  className="ciXyyf"
  onClick={[Function]}
>
  Overriding style
</button>
`;

exports[`Storyshots Button With block props 1`] = `
<div
  className="epDjBm"
>
  <button
    className="fqCsyW"
  >
    Button
  </button>
  <button
    className="fqCsyW"
  >
    Simple button
  </button>
  <button
    className="JGlsS"
  >
    block
  </button>
</div>
`;

exports[`Storyshots Button With component props - Input submit 1`] = `
<input
  className="JGlsS"
  onClick={[Function]}
  type="submit"
  value="Input Submit"
/>
`;

exports[`Storyshots Button With component props 1`] = `
<a
  className="fqCsyW"
  onClick={[Function]}
>
  I am 
  &lt;a&gt;
   tag.
</a>
`;

exports[`Storyshots Button With kind props 1`] = `
<div
  className="epDjBm"
>
  <button
    className="DxFsx"
    onClick={[Function]}
  >
    default
  </button>
  <button
    className="fqCsyW"
    onClick={[Function]}
  >
    primary
  </button>
  <button
    className="ckvztW"
    onClick={[Function]}
  >
    success
  </button>
  <button
    className="iDTYQb"
    onClick={[Function]}
  >
    error
  </button>
  <button
    className="XOtSZ"
    onClick={[Function]}
  >
    warning
  </button>
</div>
`;

exports[`Storyshots Button With theme provider (Material) 1`] = `
<div
  className="epDjBm"
>
  <button
    className="bLvfpx"
    onClick={[Function]}
  >
    default
  </button>
  <button
    className="iVupic"
    onClick={[Function]}
  >
    primary
  </button>
  <button
    className="jUFdjw"
    onClick={[Function]}
  >
    success
  </button>
  <button
    className="ilWTgv"
    onClick={[Function]}
  >
    error
  </button>
  <button
    className="gWeAuj"
    onClick={[Function]}
  >
    warning
  </button>
</div>
`;

exports[`Storyshots Card API 1`] = `
<div
  className="jzLWVG"
>
  Card Content
</div>
`;

exports[`Storyshots ClickOutside API 1`] = `
<div
  className="jzLWVG"
>
  Inside (Try to click outside.)
</div>
`;

exports[`Storyshots DataChannel ButtonClear 1`] = `
<div
  className="gVViGF"
>
  <a
    className="enrdWE"
    color="primary"
  >
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 24 24"
      width="1em"
    >
      <path
        d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
      />
    </svg>
    Clear
  </a>
</div>
`;

exports[`Storyshots DataChannel ControlNumber 1`] = `
<div
  className="kdCvHd"
>
  <p
    className="dFZeAf"
    color="grayBase"
  >
    單位：攝氏
  </p>
  <input
    className="jWbJOn"
    kind="primary"
    onChange={[Function]}
    placeholder="placeholder"
    type="number"
    value={10}
  />
  <div
    className="kGGPNo"
  >
    <div
      className="gVViGF"
      onClick={[Function]}
    >
      <a
        className="enrdWE"
        color="primary"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
          />
        </svg>
        Clear
      </a>
    </div>
    <button
      className="fqCsyW"
      onClick={[Function]}
    >
      Ok
    </button>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlPeriod 1`] = `
<div
  className="korPeA"
>
  <label
    htmlFor="input"
  >
    <p
      className="jyQfel"
      color="grayBase"
    >
      Period
    </p>
  </label>
  <div
    className="fystPB"
  >
    <input
      className="cMuAcD"
      kind="primary"
      onChange={[Function]}
      placeholder="placeholder"
      type="number"
      value={10}
    />
    <button
      className="fqCsyW"
      onClick={[Function]}
    >
      Ok
    </button>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange - Stateful PPAP 1`] = `
<div
  className="ciDLcE"
>
  <div
    className="hWdvxO"
  >
    <div
      className="kRwEkq"
    >
      <p
        className="jyQfel"
        color="grayBase"
      >
        Apple
      </p>
    </div>
    <div
      className="kRwEkq"
    >
      <p
        className="jyQfel"
        color="grayBase"
      >
        Pen
      </p>
    </div>
    <div
      className="kRwEkq"
    >
      <p
        className="jyQfel"
        color="grayBase"
      >
        Pineapple
      </p>
    </div>
  </div>
  <div
    className="gmgBXP"
  >
    <div
      className="chvbqM"
      color="grayBase"
    >
      Current value: 
      <p
        className="eBMqlM"
        color="primary"
      >
        Pineapple
      </p>
    </div>
    <input
      className="hdhnFx"
      kind="primary"
      max={2}
      min={0}
      onChange={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      step={1}
      type="range"
      value={2}
    />
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange - Stateful number 1`] = `
<div
  className="ciDLcE"
>
  <div
    className="hxnWDy"
  >
    <div
      className="kRwEkq"
    >
      <div
        className="jyQfel"
        color="grayBase"
      >
        33
      </div>
    </div>
    <div
      className="kRwEkq"
    >
      <div
        className="jyQfel"
        color="grayBase"
      >
        95
      </div>
    </div>
  </div>
  <div
    className="glLEWf"
  >
    <div
      className="chvbqM"
      color="grayBase"
    >
      Current value: 
      <div
        className="eBMqlM"
        color="primary"
      >
        88
      </div>
    </div>
    <input
      className="hdhnFx"
      kind="primary"
      max={95}
      min={33}
      onChange={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      step={1}
      type="range"
      value={88}
    />
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlRange 1`] = `
<div
  className="izFvfQ"
>
  <div
    className="ciDLcE"
  >
    <div
      className="hWdvxO"
    >
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          AAAAAA
        </p>
      </div>
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          BBBBB
        </p>
      </div>
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          CCCCC
        </p>
      </div>
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          DDDDD
        </p>
      </div>
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          EEEEE
        </p>
      </div>
    </div>
    <div
      className="dLRXKm"
    >
      <div
        className="chvbqM"
        color="grayBase"
      >
        Current value: 
        <p
          className="eBMqlM"
          color="primary"
        >
          N/A
        </p>
      </div>
      <input
        className="hdhnFx"
        kind="primary"
        max={4}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={undefined}
      />
    </div>
  </div>
  <div
    className="ciDLcE"
  >
    <div
      className="hWdvxO"
    >
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          AAAAAA
        </p>
      </div>
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          BBBBB
        </p>
      </div>
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          CCCCC
        </p>
      </div>
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          DDDDD
        </p>
      </div>
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          EEEEE
        </p>
      </div>
    </div>
    <div
      className="dLRXKm"
    >
      <div
        className="chvbqM"
        color="grayBase"
      >
        Current value: 
        <p
          className="eBMqlM"
          color="primary"
        >
          DDDDD
        </p>
      </div>
      <input
        className="hdhnFx"
        kind="primary"
        max={4}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={3}
      />
    </div>
  </div>
  <div
    className="ciDLcE"
  >
    <div
      className="hxnWDy"
    >
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          Low
        </p>
      </div>
      <div
        className="kRwEkq"
      >
        <p
          className="jyQfel"
          color="grayBase"
        >
          Heigh
        </p>
      </div>
    </div>
    <div
      className="glLEWf"
    >
      <div
        className="chvbqM"
        color="grayBase"
      >
        Current value: 
        <p
          className="eBMqlM"
          color="primary"
        >
          Low
        </p>
      </div>
      <input
        className="hdhnFx"
        kind="primary"
        max={1}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={0}
      />
    </div>
  </div>
  <div
    className="ciDLcE"
  >
    <div
      className="hxnWDy"
    >
      <div
        className="kRwEkq"
      >
        <div
          className="jyQfel"
          color="grayBase"
        >
          0
        </div>
      </div>
      <div
        className="kRwEkq"
      >
        <div
          className="jyQfel"
          color="grayBase"
        >
          100
        </div>
      </div>
    </div>
    <div
      className="glLEWf"
    >
      <div
        className="chvbqM"
        color="grayBase"
      >
        Current value: 
        <div
          className="eBMqlM"
          color="primary"
        >
          33
        </div>
      </div>
      <input
        className="hdhnFx"
        kind="primary"
        max={100}
        min={0}
        onChange={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        step={1}
        type="range"
        value={33}
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlString 1`] = `
<div
  className="lkjDmd"
>
  <textarea
    className="haOaRY"
    kind="primary"
    onChange={[Function]}
    placeholder="placeholder"
    value=""
  />
  <div
    className="gkMZXk"
  >
    <div
      className="gVViGF"
      onClick={[Function]}
    >
      <a
        className="enrdWE"
        color="primary"
      >
        <svg
          fill="currentColor"
          height="1em"
          preserveAspectRatio="xMidYMid meet"
          viewBox="0 0 24 24"
          width="1em"
        >
          <path
            d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
          />
        </svg>
        Clear
      </a>
    </div>
    <button
      className="fqCsyW"
      onClick={[Function]}
    >
      Ok
    </button>
  </div>
</div>
`;

exports[`Storyshots DataChannel ControlSwitch 1`] = `
<div
  checked={false}
  className="hiQQzp"
  kind="success"
  onClick={[Function]}
/>
`;

exports[`Storyshots DataChannel DisplayMultipleValue 1`] = `
<div
  className="gLFxag"
>
  <div>
    <p
      className="jyQfel"
      color="grayBase"
    >
      Value
    </p>
    <h1
      className="fCRioE"
      color="primary"
    >
      1234455
    </h1>
  </div>
  <div>
    <p
      className="jyQfel"
      color="grayBase"
    >
      Period
    </p>
    <h1
      className="fCRioE"
      color="primary"
    >
      125125
    </h1>
  </div>
</div>
`;

exports[`Storyshots DataChannel DisplayStatus 1`] = `
<div
  className="izFvfQ"
>
  <div
    className="frKWdl"
  >
    <div
      className="gBTIWB"
    >
      <p
        className="jyQfel"
        color="grayBase"
      >
        OFF
      </p>
      <div>
        <svg
          className="gUywdC"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="gBTIWB"
    >
      <p
        className="jyQfel"
        color="grayBase"
      >
        ON
      </p>
      <div>
        <svg
          className="gUywdC"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
  </div>
  <div
    className="frKWdl"
  >
    <div
      className="gBTIWB"
    >
      <p
        className="jyQfel"
        color="grayBase"
      >
        Apple1
      </p>
      <div>
        <svg
          className="gUywdC"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="gBTIWB"
    >
      <p
        className="jyQfel"
        color="grayBase"
      >
        Apple2
      </p>
      <div>
        <svg
          className="gUywdC"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="gBTIWB"
    >
      <p
        className="jyQfel"
        color="grayBase"
      >
        Pen
      </p>
      <div>
        <svg
          className="jfcUeq"
          color="success"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="gBTIWB"
    >
      <p
        className="jyQfel"
        color="grayBase"
      >
        Pineapple
      </p>
      <div>
        <svg
          className="gUywdC"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
    <div
      className="gBTIWB"
    >
      <p
        className="jyQfel"
        color="grayBase"
      >
        PPAPPPAPPPAP
      </p>
      <div>
        <svg
          className="gUywdC"
          color="grayDark"
          viewBox="0 0 20 20"
        >
          <circle
            cx="10"
            cy="10"
            r="10"
          />
        </svg>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannel DisplayString 1`] = `
<div
  className="lkjDmd"
>
  <textarea
    className="haOaRY"
    disabled={true}
    kind="primary"
    placeholder="This place holds Hex value."
    value="value"
  />
</div>
`;

exports[`Storyshots DataChannel DisplayUnitValue 1`] = `
<div
  className="cthtBB"
>
  <h1
    className="ekhOej"
    color="primary"
  >
    1123124124121
  </h1>
  <p
    className="iiIFfD"
    color="grayBase"
  >
    攝氏
  </p>
</div>
`;

exports[`Storyshots DataChannelAdapter API 1`] = `
<div
  className="fVeVvq"
>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="kdCvHd"
      >
        <p
          className="dFZeAf"
          color="grayBase"
        >
          單位：ampere
        </p>
        <input
          className="jWbJOn"
          kind="primary"
          onChange={[Function]}
          placeholder="Integer only"
          type="number"
          value={0}
        />
        <div
          className="kGGPNo"
        >
          <div
            className="gVViGF"
            onClick={[Function]}
          >
            <a
              className="enrdWE"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="fqCsyW"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        INTEGER_CONTROL
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="cthtBB"
      >
        <h1
          className="ekhOej"
          color="primary"
        >
          0
        </h1>
        <p
          className="iiIFfD"
          color="grayBase"
        >
          ampere
        </p>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        INTEGER_DISPLAY
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="kdCvHd"
      >
        <p
          className="dFZeAf"
          color="grayBase"
        >
          單位：ampere
        </p>
        <input
          className="jWbJOn"
          kind="primary"
          onChange={[Function]}
          placeholder="Float only"
          type="number"
          value=""
        />
        <div
          className="kGGPNo"
        >
          <div
            className="gVViGF"
            onClick={[Function]}
          >
            <a
              className="enrdWE"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="fqCsyW"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        FLOAT_CONTROL
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="cthtBB"
      >
        <h1
          className="ekhOej"
          color="primary"
        >
          N/A
        </h1>
        <p
          className="iiIFfD"
          color="grayBase"
        >
          ampere
        </p>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        FLOAT_DISPLAY
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="lkjDmd"
      >
        <textarea
          className="haOaRY"
          kind="primary"
          onChange={[Function]}
          placeholder="String only"
          value="Any string type value."
        />
        <div
          className="gkMZXk"
        >
          <div
            className="gVViGF"
            onClick={[Function]}
          >
            <a
              className="enrdWE"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="fqCsyW"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        STRING_CONTROL
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="lkjDmd"
      >
        <textarea
          className="haOaRY"
          disabled={true}
          kind="primary"
          placeholder="String only"
          value="Any string type value."
        />
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        STRING_DISPLAY
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="lkjDmd"
      >
        <textarea
          className="haOaRY"
          kind="primary"
          onChange={[Function]}
          placeholder="Hex only"
          value="ABF123"
        />
        <div
          className="gkMZXk"
        >
          <div
            className="gVViGF"
            onClick={[Function]}
          >
            <a
              className="enrdWE"
              color="primary"
            >
              <svg
                fill="currentColor"
                height="1em"
                preserveAspectRatio="xMidYMid meet"
                viewBox="0 0 24 24"
                width="1em"
              >
                <path
                  d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
                />
              </svg>
              Clear
            </a>
          </div>
          <button
            className="fqCsyW"
            onClick={[Function]}
          >
            Ok
          </button>
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        HEX_CONTROL
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="lkjDmd"
      >
        <textarea
          className="haOaRY"
          disabled={true}
          kind="primary"
          placeholder="Hex only"
          value="ABF123"
        />
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        HEX_DISPLAY
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        checked={true}
        className="cDkFNS"
        kind="success"
        onClick={[Function]}
      />
    </div>
    <div>
      <h4
        className="glocWb"
      >
        SWITCH_CONTROL
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="frKWdl"
      >
        <div
          className="gBTIWB"
        >
          <p
            className="jyQfel"
            color="grayBase"
          >
            OFF
          </p>
          <div>
            <svg
              className="jfcUeq"
              color="success"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="gBTIWB"
        >
          <p
            className="jyQfel"
            color="grayBase"
          >
            ON
          </p>
          <div>
            <svg
              className="gUywdC"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        SWITCH_DISPLAY
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="ciDLcE"
      >
        <div
          className="hxnWDy"
        >
          <div
            className="kRwEkq"
          >
            <p
              className="jyQfel"
              color="grayBase"
            >
              k1
            </p>
          </div>
          <div
            className="kRwEkq"
          >
            <p
              className="jyQfel"
              color="grayBase"
            >
              k2
            </p>
          </div>
        </div>
        <div
          className="glLEWf"
        >
          <div
            className="chvbqM"
            color="grayBase"
          >
            Current value: 
            <p
              className="eBMqlM"
              color="primary"
            >
              v2
            </p>
          </div>
          <input
            className="hdhnFx"
            kind="primary"
            max={1}
            min={0}
            onChange={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            step={1}
            type="range"
            value={1}
          />
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        CATEGORY_CONTROL
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="frKWdl"
      >
        <div
          className="gBTIWB"
        >
          <p
            className="jyQfel"
            color="grayBase"
          >
            k1
          </p>
          <div>
            <svg
              className="gUywdC"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="gBTIWB"
        >
          <p
            className="jyQfel"
            color="grayBase"
          >
            k2
          </p>
          <div>
            <svg
              className="jfcUeq"
              color="success"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="gBTIWB"
        >
          <p
            className="jyQfel"
            color="grayBase"
          >
            k3
          </p>
          <div>
            <svg
              className="gUywdC"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="gBTIWB"
        >
          <p
            className="jyQfel"
            color="grayBase"
          >
            k4
          </p>
          <div>
            <svg
              className="gUywdC"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="gBTIWB"
        >
          <p
            className="jyQfel"
            color="grayBase"
          >
            k5
          </p>
          <div>
            <svg
              className="gUywdC"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        CATEGORY_DISPLAY
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="ciDLcE"
      >
        <div
          className="hxnWDy"
        >
          <div
            className="kRwEkq"
          >
            <p
              className="jyQfel"
              color="grayBase"
            >
              Low
            </p>
          </div>
          <div
            className="kRwEkq"
          >
            <p
              className="jyQfel"
              color="grayBase"
            >
              High
            </p>
          </div>
        </div>
        <div
          className="glLEWf"
        >
          <div
            className="chvbqM"
            color="grayBase"
          >
            Current value: 
            <p
              className="eBMqlM"
              color="primary"
            >
              High
            </p>
          </div>
          <input
            className="hdhnFx"
            kind="primary"
            max={1}
            min={0}
            onChange={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            step={1}
            type="range"
            value={1}
          />
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        GPIO_CONTROL
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="frKWdl"
      >
        <div
          className="gBTIWB"
        >
          <p
            className="jyQfel"
            color="grayBase"
          >
            Low
          </p>
          <div>
            <svg
              className="jfcUeq"
              color="success"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
        <div
          className="gBTIWB"
        >
          <p
            className="jyQfel"
            color="grayBase"
          >
            High
          </p>
          <div>
            <svg
              className="gUywdC"
              color="grayDark"
              viewBox="0 0 20 20"
            >
              <circle
                cx="10"
                cy="10"
                r="10"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        GPIO_DISPLAY
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="ciDLcE"
      >
        <div
          className="hxnWDy"
        >
          <div
            className="kRwEkq"
          >
            <div
              className="jyQfel"
              color="grayBase"
            >
              1
            </div>
          </div>
          <div
            className="kRwEkq"
          >
            <div
              className="jyQfel"
              color="grayBase"
            >
              100
            </div>
          </div>
        </div>
        <div
          className="glLEWf"
        >
          <div
            className="chvbqM"
            color="grayBase"
          >
            Current value: 
            <div
              className="eBMqlM"
              color="primary"
            >
              23
            </div>
          </div>
          <input
            className="hdhnFx"
            kind="primary"
            max={100}
            min={1}
            onChange={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            step={1}
            type="range"
            value={23}
          />
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        ANALOG_CONTROL
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="gLFxag"
      >
        <div>
          <p
            className="jyQfel"
            color="grayBase"
          >
            Value
          </p>
          <h1
            className="fCRioE"
            color="primary"
          >
            value pwm
          </h1>
        </div>
        <div>
          <p
            className="jyQfel"
            color="grayBase"
          >
            Period
          </p>
          <h1
            className="fCRioE"
            color="primary"
          >
            20
          </h1>
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        PWM_DISPLAY
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
  <div
    className="czVqfN"
    data-width="half"
  >
    <div
      className="bUqfcz"
    >
      <a
        href=""
      >
        Link
      </a>
    </div>
    <div
      className="dvQQLa"
    >
      <div
        className="kdCvHd"
      >
        <div
          className="korPeA"
        >
          <label
            htmlFor="input"
          >
            <p
              className="jyQfel"
              color="grayBase"
            >
              Period
            </p>
          </label>
          <div
            className="fystPB"
          >
            <input
              className="cMuAcD"
              kind="primary"
              onChange={[Function]}
              placeholder="Integer only"
              type="number"
              value={0}
            />
            <button
              className="fqCsyW"
              onClick={[Function]}
            >
              Ok
            </button>
          </div>
        </div>
        <div
          className="ciDLcE"
        >
          <div
            className="hxnWDy"
          >
            <div
              className="kRwEkq"
            >
              <div
                className="jyQfel"
                color="grayBase"
              >
                0
              </div>
            </div>
            <div
              className="kRwEkq"
            >
              <div
                className="jyQfel"
                color="grayBase"
              >
                100
              </div>
            </div>
          </div>
          <div
            className="glLEWf"
          >
            <div
              className="chvbqM"
              color="grayBase"
            >
              Current value: 
              <div
                className="eBMqlM"
                color="primary"
              >
                0
              </div>
            </div>
            <input
              className="hdhnFx"
              kind="primary"
              max={100}
              min={0}
              onChange={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              step={1}
              type="range"
              value={0}
            />
          </div>
        </div>
      </div>
    </div>
    <div>
      <h4
        className="glocWb"
      >
        PWM_CONTROL
      </h4>
      <small
        className="jvIFlH"
      >
        Last data point time : 2015-06-12 12:00
      </small>
      <hr
        className="dPNKKP iAugwC"
      />
      <div
        className="iyRJwF"
      >
        <MockReactTextTruncate
          line={2}
          text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
          truncateText=" ..."
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard API 1`] = `
<div
  className="czVqfN"
>
  <div
    className="bUqfcz"
  >
    <a
      href=""
    >
      Link
    </a>
  </div>
  <div
    className="dvQQLa"
  >
    Children
  </div>
  <div>
    <h4
      className="glocWb"
    >
      Title
    </h4>
    <small
      className="jvIFlH"
    >
      Last data point time : 2015-06-12 12:00
    </small>
    <hr
      className="dPNKKP iAugwC"
    />
    <div
      className="iyRJwF"
    >
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..."
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard Custom width and height 1`] = `
<div
  className="drcatN czVqfN"
>
  <div
    className="bUqfcz"
  >
    V
  </div>
  <div
    className="dvQQLa"
  >
    <div
      checked={false}
      className="hiQQzp"
      kind="success"
    />
  </div>
  <div>
    <h4
      className="glocWb"
    >
      Title
    </h4>
    <small
      className="jvIFlH"
    >
      Last data point time : 2015-06-12 12:00
    </small>
    <hr
      className="dPNKKP iAugwC"
    />
    <div
      className="iyRJwF"
    >
      <MockReactTextTruncate
        line={2}
        text="You can input description of controller here. You can input description of You can input description of controller here. You can input description of"
        truncateText=" ..."
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots DataChannelCard Without description 1`] = `
<div
  className="czVqfN"
>
  <div
    className="bUqfcz"
  >
    V
  </div>
  <div
    className="dvQQLa"
  >
    <div
      checked={false}
      className="hiQQzp"
      kind="success"
    />
  </div>
  <div>
    <h4
      className="glocWb"
    >
      Title
    </h4>
    <small
      className="jvIFlH"
    >
      Last data point time : 2015-06-12 12:00
    </small>
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart API 1`] = `
<div
  className="haXnLh"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart RechartTooltip 1`] = `
<div
  className="eaWXZP"
>
  <p
    className="gVViGF"
  >
    formatter(1)
  </p>
  <div
    className="jyQfel"
    color="grayBase"
  >
    <small
      className="gPtzLl"
    >
      labelFormatter(1532438716989)
    </small>
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart With isAnimationActive props 1`] = `
<div
  className="haXnLh"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart With kind and type props 1`] = `
<div
  className="haXnLh"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DataPointAreaChart With realtime data 1`] = `
<div
  className="haXnLh"
>
  <div
    className="recharts-responsive-container"
    style={
      Object {
        "height": "100%",
        "maxHeight": undefined,
        "minHeight": undefined,
        "minWidth": undefined,
        "width": "100%",
      }
    }
  >
    <MockReactHammerJS
      handleHeight={true}
      handleWidth={true}
      onResize={[Function]}
    />
  </div>
</div>
`;

exports[`Storyshots DatetimePicker API 1`] = `
<div
  className="bPCADX"
  defaultValue={1455780631722}
  onChange={[Function]}
>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x pan-y",
      }
    }
  >
    <div
      className="bVXAeq"
      style={
        Object {
          "marginTop": -0,
        }
      }
    >
      <div
        className="sFYwZ"
      >
        2016
      </div>
      <div
        className="hqQMRe"
      >
        2017
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x pan-y",
      }
    }
  >
    <div
      className="bVXAeq"
      style={
        Object {
          "marginTop": -40,
        }
      }
    >
      <div
        className="hqQMRe"
      >
        1
      </div>
      <div
        className="sFYwZ"
      >
        2
      </div>
      <div
        className="hqQMRe"
      >
        3
      </div>
      <div
        className="hqQMRe"
      >
        4
      </div>
      <div
        className="hqQMRe"
      >
        5
      </div>
      <div
        className="hqQMRe"
      >
        6
      </div>
      <div
        className="hqQMRe"
      >
        7
      </div>
      <div
        className="hqQMRe"
      >
        8
      </div>
      <div
        className="hqQMRe"
      >
        9
      </div>
      <div
        className="hqQMRe"
      >
        10
      </div>
      <div
        className="hqQMRe"
      >
        11
      </div>
      <div
        className="hqQMRe"
      >
        12
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x pan-y",
      }
    }
  >
    <div
      className="bVXAeq"
      style={
        Object {
          "marginTop": -680,
        }
      }
    >
      <div
        className="hqQMRe"
      >
        1
      </div>
      <div
        className="hqQMRe"
      >
        2
      </div>
      <div
        className="hqQMRe"
      >
        3
      </div>
      <div
        className="hqQMRe"
      >
        4
      </div>
      <div
        className="hqQMRe"
      >
        5
      </div>
      <div
        className="hqQMRe"
      >
        6
      </div>
      <div
        className="hqQMRe"
      >
        7
      </div>
      <div
        className="hqQMRe"
      >
        8
      </div>
      <div
        className="hqQMRe"
      >
        9
      </div>
      <div
        className="hqQMRe"
      >
        10
      </div>
      <div
        className="hqQMRe"
      >
        11
      </div>
      <div
        className="hqQMRe"
      >
        12
      </div>
      <div
        className="hqQMRe"
      >
        13
      </div>
      <div
        className="hqQMRe"
      >
        14
      </div>
      <div
        className="hqQMRe"
      >
        15
      </div>
      <div
        className="hqQMRe"
      >
        16
      </div>
      <div
        className="hqQMRe"
      >
        17
      </div>
      <div
        className="sFYwZ"
      >
        18
      </div>
      <div
        className="hqQMRe"
      >
        19
      </div>
      <div
        className="hqQMRe"
      >
        20
      </div>
      <div
        className="hqQMRe"
      >
        21
      </div>
      <div
        className="hqQMRe"
      >
        22
      </div>
      <div
        className="hqQMRe"
      >
        23
      </div>
      <div
        className="hqQMRe"
      >
        24
      </div>
      <div
        className="hqQMRe"
      >
        25
      </div>
      <div
        className="hqQMRe"
      >
        26
      </div>
      <div
        className="hqQMRe"
      >
        27
      </div>
      <div
        className="hqQMRe"
      >
        28
      </div>
      <div
        className="hqQMRe"
      >
        29
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x pan-y",
      }
    }
  >
    <div
      className="bVXAeq"
      style={
        Object {
          "marginTop": -600,
        }
      }
    >
      <div
        className="hqQMRe"
      >
        00
      </div>
      <div
        className="hqQMRe"
      >
        01
      </div>
      <div
        className="hqQMRe"
      >
        02
      </div>
      <div
        className="hqQMRe"
      >
        03
      </div>
      <div
        className="hqQMRe"
      >
        04
      </div>
      <div
        className="hqQMRe"
      >
        05
      </div>
      <div
        className="hqQMRe"
      >
        06
      </div>
      <div
        className="hqQMRe"
      >
        07
      </div>
      <div
        className="hqQMRe"
      >
        08
      </div>
      <div
        className="hqQMRe"
      >
        09
      </div>
      <div
        className="hqQMRe"
      >
        10
      </div>
      <div
        className="hqQMRe"
      >
        11
      </div>
      <div
        className="hqQMRe"
      >
        12
      </div>
      <div
        className="hqQMRe"
      >
        13
      </div>
      <div
        className="hqQMRe"
      >
        14
      </div>
      <div
        className="sFYwZ"
      >
        15
      </div>
      <div
        className="hqQMRe"
      >
        16
      </div>
      <div
        className="hqQMRe"
      >
        17
      </div>
      <div
        className="hqQMRe"
      >
        18
      </div>
      <div
        className="hqQMRe"
      >
        19
      </div>
      <div
        className="hqQMRe"
      >
        20
      </div>
      <div
        className="hqQMRe"
      >
        21
      </div>
      <div
        className="hqQMRe"
      >
        22
      </div>
      <div
        className="hqQMRe"
      >
        23
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x pan-y",
      }
    }
  >
    <div
      className="bVXAeq"
      style={
        Object {
          "marginTop": -1200,
        }
      }
    >
      <div
        className="hqQMRe"
      >
        00
      </div>
      <div
        className="hqQMRe"
      >
        01
      </div>
      <div
        className="hqQMRe"
      >
        02
      </div>
      <div
        className="hqQMRe"
      >
        03
      </div>
      <div
        className="hqQMRe"
      >
        04
      </div>
      <div
        className="hqQMRe"
      >
        05
      </div>
      <div
        className="hqQMRe"
      >
        06
      </div>
      <div
        className="hqQMRe"
      >
        07
      </div>
      <div
        className="hqQMRe"
      >
        08
      </div>
      <div
        className="hqQMRe"
      >
        09
      </div>
      <div
        className="hqQMRe"
      >
        10
      </div>
      <div
        className="hqQMRe"
      >
        11
      </div>
      <div
        className="hqQMRe"
      >
        12
      </div>
      <div
        className="hqQMRe"
      >
        13
      </div>
      <div
        className="hqQMRe"
      >
        14
      </div>
      <div
        className="hqQMRe"
      >
        15
      </div>
      <div
        className="hqQMRe"
      >
        16
      </div>
      <div
        className="hqQMRe"
      >
        17
      </div>
      <div
        className="hqQMRe"
      >
        18
      </div>
      <div
        className="hqQMRe"
      >
        19
      </div>
      <div
        className="hqQMRe"
      >
        20
      </div>
      <div
        className="hqQMRe"
      >
        21
      </div>
      <div
        className="hqQMRe"
      >
        22
      </div>
      <div
        className="hqQMRe"
      >
        23
      </div>
      <div
        className="hqQMRe"
      >
        24
      </div>
      <div
        className="hqQMRe"
      >
        25
      </div>
      <div
        className="hqQMRe"
      >
        26
      </div>
      <div
        className="hqQMRe"
      >
        27
      </div>
      <div
        className="hqQMRe"
      >
        28
      </div>
      <div
        className="hqQMRe"
      >
        29
      </div>
      <div
        className="sFYwZ"
      >
        30
      </div>
      <div
        className="hqQMRe"
      >
        31
      </div>
      <div
        className="hqQMRe"
      >
        32
      </div>
      <div
        className="hqQMRe"
      >
        33
      </div>
      <div
        className="hqQMRe"
      >
        34
      </div>
      <div
        className="hqQMRe"
      >
        35
      </div>
      <div
        className="hqQMRe"
      >
        36
      </div>
      <div
        className="hqQMRe"
      >
        37
      </div>
      <div
        className="hqQMRe"
      >
        38
      </div>
      <div
        className="hqQMRe"
      >
        39
      </div>
      <div
        className="hqQMRe"
      >
        40
      </div>
      <div
        className="hqQMRe"
      >
        41
      </div>
      <div
        className="hqQMRe"
      >
        42
      </div>
      <div
        className="hqQMRe"
      >
        43
      </div>
      <div
        className="hqQMRe"
      >
        44
      </div>
      <div
        className="hqQMRe"
      >
        45
      </div>
      <div
        className="hqQMRe"
      >
        46
      </div>
      <div
        className="hqQMRe"
      >
        47
      </div>
      <div
        className="hqQMRe"
      >
        48
      </div>
      <div
        className="hqQMRe"
      >
        49
      </div>
      <div
        className="hqQMRe"
      >
        50
      </div>
      <div
        className="hqQMRe"
      >
        51
      </div>
      <div
        className="hqQMRe"
      >
        52
      </div>
      <div
        className="hqQMRe"
      >
        53
      </div>
      <div
        className="hqQMRe"
      >
        54
      </div>
      <div
        className="hqQMRe"
      >
        55
      </div>
      <div
        className="hqQMRe"
      >
        56
      </div>
      <div
        className="hqQMRe"
      >
        57
      </div>
      <div
        className="hqQMRe"
      >
        58
      </div>
      <div
        className="hqQMRe"
      >
        59
      </div>
    </div>
  </MockReactHammerJS>
  <div
    className="kbtxNP"
  />
  <div
    className="eZHUat"
  />
</div>
`;

exports[`Storyshots DatetimePickerDialog API 1`] = `
<div>
  <input
    className="jWbJOn"
    kind="primary"
    onClick={[Function]}
    readOnly={true}
    value="2016-05-18T07:30:31.722Z"
  />
</div>
`;

exports[`Storyshots Dialog API 1`] = `
<div>
  <div
    onClick={[Function]}
  >
    Click to OPEN!
  </div>
</div>
`;

exports[`Storyshots DomAlign API 1`] = `
<div>
  <div>
    Target node
  </div>
  <div>
    Source node
  </div>
</div>
`;

exports[`Storyshots Heading API 1`] = `
<h1
  className="khhwSD"
>
  Level 1
</h1>
`;

exports[`Storyshots Heading With color props 1`] = `
<div>
  <h2
    className="hYsLQk"
    color="black"
  >
    Level 2 
    black
  </h2>
  <h2
    className="hMMWfV"
    color="grayBase"
  >
    Level 2 
    grayBase
  </h2>
  <h2
    className="wysyv"
    color="grayDark"
  >
    Level 2 
    grayDark
  </h2>
  <h2
    className="eDlSGk"
    color="grayLight"
  >
    Level 2 
    grayLight
  </h2>
  <h2
    className="iDodem"
    color="white"
  >
    Level 2 
    white
  </h2>
  <h2
    className="eDlSGk"
    color="default"
  >
    Level 2 
    default
  </h2>
  <h2
    className="ewKygI"
    color="primary"
  >
    Level 2 
    primary
  </h2>
  <h2
    className="jBhbxQ"
    color="success"
  >
    Level 2 
    success
  </h2>
  <h2
    className="iYcHQ"
    color="error"
  >
    Level 2 
    error
  </h2>
  <h2
    className="bGhNdb"
    color="warning"
  >
    Level 2 
    warning
  </h2>
</div>
`;

exports[`Storyshots Heading With level props 1`] = `
<div>
  <h1
    className="khhwSD"
  >
    h
    1
     - Level 
    1
       (
    2.46rem
     = 
    31.98px
    )
  </h1>
  <h2
    className="hNqZOT"
  >
    h
    2
     - Level 
    2
       (
    1.69rem
     = 
    21.97px
    )
  </h2>
  <h3
    className="kaxFLM"
  >
    h
    3
     - Level 
    3
       (
    1.38rem
     = 
    17.939999999999998px
    )
  </h3>
  <h4
    className="jSuFAn"
  >
    h
    4
     - Level 
    4
       (
    1.15rem
     = 
    14.95px
    )
  </h4>
  <h5
    className="eyeiJn"
  >
    h
    5
     - Level 
    5
       (
    1rem
     = 
    13px
    )
  </h5>
  <h6
    className="eyeiJn"
  >
    h
    6
     - Level 
    6
       (
    1rem
     = 
    13px
    )
  </h6>
</div>
`;

exports[`Storyshots Hr API 1`] = `
<hr
  className="iAugwC"
/>
`;

exports[`Storyshots Hr With children 1`] = `
<div
  className="biEMBf"
>
  <hr
    className="iAugwC"
  />
  <div
    className="KXFgb"
  >
    String
  </div>
  <hr
    className="iAugwC"
  />
</div>
`;

exports[`Storyshots Icon [mcs-lite-icon] API 1`] = `
<svg
  fill="currentColor"
  height="1em"
  preserveAspectRatio="xMidYMid meet"
  viewBox="0 0 24 24"
  width="1em"
>
  <path
    d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
  />
</svg>
`;

exports[`Storyshots Icon [mcs-lite-icon] Spin Icon 1`] = `
<div
  className="ftRJdL"
>
  <svg
    fill="currentColor"
    height="1em"
    preserveAspectRatio="xMidYMid meet"
    viewBox="0 0 24 24"
    width="1em"
  >
    <path
      d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"
      opacity=".3"
    />
    <path
      d="M12 4c4.4 0 8 3.6 8 8h2c0-5.5-4.5-10-10-10v2z"
    />
  </svg>
</div>
`;

exports[`Storyshots Img API 1`] = `
<div
  className="haXnLh"
>
  <div
    className="ccOdku"
    size="cover"
    src="http://placehold.it/350x150"
  />
</div>
`;

exports[`Storyshots Img With height override 1`] = `
<div
  className="jwuuYs"
  size="cover"
  src="http://placehold.it/350x150"
/>
`;

exports[`Storyshots Img With size props 1`] = `
<div
  className="haXnLh"
>
  <div
    className="jUQfeJ"
    size="contain"
    src="http://placehold.it/350x150"
  />
</div>
`;

exports[`Storyshots Input API 1`] = `
<input
  className="jWbJOn"
  kind="primary"
  placeholder="placeholder"
/>
`;

exports[`Storyshots Input With kind props 1`] = `
<div
  className="cZlPqe"
>
  <input
    className="jLdfOf"
    kind="default"
    placeholder="default"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="primary"
  />
  <input
    className="luvMa"
    kind="success"
    placeholder="success"
  />
  <input
    className="hnHoAq"
    kind="error"
    placeholder="error"
  />
  <input
    className="bsbPqO"
    kind="warning"
    placeholder="warning"
  />
</div>
`;

exports[`Storyshots Input With type props 1`] = `
<div
  className="cZlPqe"
>
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="text"
    type="text"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="email"
    type="email"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="number"
    type="number"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="password"
    type="password"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="tel"
    type="tel"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="search"
    type="search"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="month"
    type="month"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="week"
    type="week"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="date"
    type="date"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="color"
    type="color"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="file"
    type="file"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="radio"
    type="radio"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="time"
    type="time"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="url"
    type="url"
  />
  <input
    className="jWbJOn"
    kind="primary"
    placeholder="range"
    type="range"
  />
</div>
`;

exports[`Storyshots InputGroup API 1`] = `
<div
  className="gQrROo"
>
  <div
    className="jaAZmb"
  >
    <button
      className="fqCsyW"
    >
      Button 1
    </button>
    <button
      className="DxFsx"
    >
      Button 2
    </button>
  </div>
  <div
    className="jaAZmb"
  >
    <button
      className="JGlsS"
    >
      Button 1
    </button>
    <button
      className="eMqgsi"
    >
      Button 2
    </button>
  </div>
  <div
    className="jaAZmb"
  >
    <button
      className="fqCsyW"
    >
      Button 1
    </button>
    <button
      className="DxFsx"
    >
      Button 2
    </button>
    <button
      className="XOtSZ"
    >
      Button 3
    </button>
  </div>
  <div
    className="jaAZmb"
  >
    <button
      className="fqCsyW"
    >
      Button 1
    </button>
    <button
      className="eMqgsi"
    >
      Button 2
    </button>
    <button
      className="XOtSZ"
    >
      Button 3
    </button>
  </div>
  <div
    className="jaAZmb"
  >
    <button
      className="fqCsyW"
    >
      大於
    </button>
    <input
      className="jWbJOn"
      kind="primary"
      placeholder="預設值：20"
    />
  </div>
  <div
    className="jaAZmb"
  >
    <input
      className="jWbJOn"
      kind="primary"
      placeholder="Input 1"
    />
    <button
      className="fqCsyW"
    >
      Button 1
    </button>
  </div>
  <div
    className="jaAZmb"
  >
    <button
      className="fqCsyW"
    >
      Button 1
    </button>
    <input
      className="jWbJOn"
      kind="primary"
      placeholder="Input 1"
    />
    <button
      className="fqCsyW"
    >
      Button 2
    </button>
  </div>
  <div
    className="jaAZmb"
  >
    <button
      className="fqCsyW"
    >
      之間
    </button>
    <input
      className="jWbJOn"
      kind="primary"
      placeholder="預設值：0"
    />
    <button
      className="fqCsyW"
    >
      和
    </button>
    <input
      className="jWbJOn"
      kind="primary"
      placeholder="預設值：100"
    />
  </div>
</div>
`;

exports[`Storyshots InputRange API 1`] = `
<input
  className="hdhnFx"
  kind="primary"
  type="range"
/>
`;

exports[`Storyshots InputRange With kind props 1`] = `
<div
  className="cZlPqe"
>
  <input
    className="kBSwKq"
    kind="default"
    type="range"
  />
  <input
    className="hdhnFx"
    kind="primary"
    type="range"
  />
  <input
    className="jXdUnH"
    kind="success"
    type="range"
  />
  <input
    className="ilYUjW"
    kind="error"
    type="range"
  />
  <input
    className="jfqTuL"
    kind="warning"
    type="range"
  />
</div>
`;

exports[`Storyshots Menu API for Menu 1`] = `
<div
  className="cwnYBS"
>
  Children
</div>
`;

exports[`Storyshots Menu API for MenuItem 1`] = `
<div
  className="ftUprM"
>
  MenuItem
</div>
`;

exports[`Storyshots Menu Combination 1`] = `
<div
  className="kRUrap"
>
  <div
    className="ftUprM"
    onClick={[Function]}
  >
    MenuItem 1
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}
  >
    MenuItem Content 2
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}
  >
    <h1
      className="khhwSD"
    >
      MenuItem Heading 1
    </h1>
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}
  >
    <p
      className="gVViGF"
    >
      MenuItem P
    </p>
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}
  >
    <p
      className="hrGHNS"
      color="error"
    >
      MenuItem P error
    </p>
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}
  >
    <a
      className="DvAuM"
      color="primary"
    >
      MenuItem A
    </a>
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}
  >
    <b
      className="dbJQUp"
    >
      MenuItem B
    </b>
  </div>
  <div
    className="ftUprM"
    onClick={[Function]}
  >
    <svg
      fill="currentColor"
      height="1em"
      preserveAspectRatio="xMidYMid meet"
      viewBox="0 0 24 24"
      width="1em"
    >
      <path
        d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm9-10h1v10h-1V9zm-4 0h2v10h-2V9zM8 9h1v10H8V9zm7.5-5l-1-1h-5l-1 1H5v2h14V4h-3.5z"
      />
    </svg>
  </div>
</div>
`;

exports[`Storyshots MobileContentWrapper API 1`] = `
<div
  className="dfXHhG"
>
  <div
    className="llkJXV"
  >
    With max-width
  </div>
</div>
`;

exports[`Storyshots MobileDeviceCard API 1`] = `
<div
  className="bJJQOv"
>
  <div
    className="jhSFQr"
  >
    <div
      className="hAprVT"
      size="cover"
      src="https://img.mediatek.com/600/mtk.linkit/productBanner.png"
    />
  </div>
  <div
    className="cvAcKZ"
  >
    <h4
      className="ezDjUV"
      color="black"
    >
      <MockReactTextTruncate
        line={4}
        text="範例 B 的測試裝置"
        truncateText=" ..."
      />
    </h4>
  </div>
</div>
`;

exports[`Storyshots MobileDeviceCard Override height 1`] = `
<div
  className="fscmZo bJJQOv"
>
  <div
    className="jhSFQr"
  >
    <div
      className="hAprVT"
      size="cover"
      src="https://img.mediatek.com/600/mtk.linkit/productBanner.png"
    />
  </div>
  <div
    className="cvAcKZ"
  >
    <h4
      className="ezDjUV"
      color="black"
    >
      <MockReactTextTruncate
        line={4}
        text="範例 B 的測試裝置"
        truncateText=" ..."
      />
    </h4>
  </div>
</div>
`;

exports[`Storyshots MobileFixedFooter API 1`] = `
<footer
  className="jHdxNL"
>
  <div
    className="dfXHhG"
  >
    <div
      className="fliFWR"
    >
      <button
        className="eMqgsi"
      >
        Cancel
      </button>
      <button
        className="JGlsS"
      >
        Submit
      </button>
    </div>
  </div>
</footer>
`;

exports[`Storyshots MobileHeader API 1`] = `
<header
  className="dNRrjG"
>
  <div
    className="jPhnUD"
  >
    <div
      className="dLdvuC"
    >
      <div
        className="gzrXWO"
      >
        <a
          className="jtiRp"
        >
          <svg
            fill="currentColor"
            height="1em"
            preserveAspectRatio="xMidYMid meet"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
            />
          </svg>
        </a>
      </div>
      <div
        className="gIIDkH"
      >
        <h3
          className="bmMTAH"
          color="white"
        >
          <b
            className="dbJQUp"
          >
            Device List
          </b>
        </h3>
      </div>
      <div
        className="ibwtzP"
      />
    </div>
  </div>
</header>
`;

exports[`Storyshots MobileHeader With right props 1`] = `
<header
  className="dNRrjG"
>
  <div
    className="jPhnUD"
  >
    <div
      className="dLdvuC"
    >
      <div
        className="gzrXWO"
      >
        <div
          className="jtiRp"
        >
          <svg
            fill="currentColor"
            height="1em"
            preserveAspectRatio="xMidYMid meet"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
            />
          </svg>
        </div>
      </div>
      <div
        className="gIIDkH"
      >
        <h3
          className="bmMTAH"
          color="white"
        >
          <b
            className="dbJQUp"
          >
            Device List
          </b>
        </h3>
      </div>
      <div
        className="ibwtzP"
      >
        <a
          className="jtiRp"
        >
          <svg
            fill="currentColor"
            height="1em"
            preserveAspectRatio="xMidYMid meet"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M15.5 14h-.8l-.3-.3c1-1.1 1.6-2.6 1.6-4.2C16 5.9 13.1 3 9.5 3S3 5.9 3 9.5 5.9 16 9.5 16c1.6 0 3.1-.6 4.2-1.6l.3.3v.8l5 5 1.5-1.5-5-5zm-6 0C7 14 5 12 5 9.5S7 5 9.5 5 14 7 14 9.5 12 14 9.5 14z"
            />
          </svg>
        </a>
      </div>
    </div>
  </div>
</header>
`;

exports[`Storyshots Overlay API 1`] = `
<div>
  <a
    className="DvAuM"
    color="primary"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
  >
    Hover me
  </a>
</div>
`;

exports[`Storyshots Overlay Dropdown Menu 1`] = `
<div
  className="dhGIaz"
>
  <div>
    <button
      className="fqCsyW"
      onClick={[Function]}
    >
      Button
    </button>
  </div>
  <div>
    <button
      className="fqCsyW"
      onClick={[Function]}
    >
      Button
    </button>
  </div>
  <div>
    <button
      className="fqCsyW"
      onClick={[Function]}
    >
      Button
    </button>
  </div>
</div>
`;

exports[`Storyshots P API 1`] = `
<p
  className="gVViGF"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur esse dolore incididunt incididunt aliquip pariatur est minim officia sit. Nulla pariatur duis duis quis commodo cupidatat voluptate enim culpa elit adipisicing do cupidatat sint anim. Cillum elit magna occaecat proident sit cupidatat ad quis sunt id culpa culpa. Ad duis nulla in incididunt amet consequat officia ad voluptate voluptate. Pariatur eiusmod ullamco cupidatat non magna officia aute magna deserunt qui aute dolor eu. Qui amet non ex cillum sunt ad velit consequat ipsum velit.
</p>
`;

exports[`Storyshots P Nested children with div 1`] = `
<div
  className="gVViGF"
>
  <div>
    <span>
      Qui amet non ex cillum sunt ad velit consequat ipsum velit.
    </span>
  </div>
</div>
`;

exports[`Storyshots P With color props 1`] = `
<div>
  <div
    className="cqMgnG"
    color="black"
  >
    Paragraph 
    black
  </div>
  <div
    className="jyQfel"
    color="grayBase"
  >
    Paragraph 
    grayBase
  </div>
  <div
    className="iChNxS"
    color="grayDark"
  >
    Paragraph 
    grayDark
  </div>
  <div
    className="kUcDrP"
    color="grayLight"
  >
    Paragraph 
    grayLight
  </div>
  <div
    className="eJSHFJ"
    color="white"
  >
    Paragraph 
    white
  </div>
  <div
    className="kUcDrP"
    color="default"
  >
    Paragraph 
    default
  </div>
  <div
    className="hEzGry"
    color="primary"
  >
    Paragraph 
    primary
  </div>
  <div
    className="ciVPjB"
    color="success"
  >
    Paragraph 
    success
  </div>
  <div
    className="hrGHNS"
    color="error"
  >
    Paragraph 
    error
  </div>
  <div
    className="cWPeCi"
    color="warning"
  >
    Paragraph 
    warning
  </div>
</div>
`;

exports[`Storyshots Picker API 1`] = `
<div
  className="bPCADX"
>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x pan-y",
      }
    }
  >
    <div
      className="bVXAeq"
      style={
        Object {
          "marginTop": -0,
        }
      }
    >
      <div
        className="sFYwZ"
      >
        Apple
      </div>
      <div
        className="hqQMRe"
      >
        Pen
      </div>
      <div
        className="hqQMRe"
      >
        Apple pen
      </div>
      <div
        className="hqQMRe"
      >
        Pineapple
      </div>
    </div>
  </MockReactHammerJS>
  <MockReactHammerJS
    direction="DIRECTION_VERTICAL"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x pan-y",
      }
    }
  >
    <div
      className="bVXAeq"
      style={
        Object {
          "marginTop": -40,
        }
      }
    >
      <div
        className="hqQMRe"
      >
        PPAP
      </div>
      <div
        className="sFYwZ"
      >
        PAPA
      </div>
    </div>
  </MockReactHammerJS>
  <div
    className="kbtxNP"
  />
  <div
    className="eZHUat"
  />
</div>
`;

exports[`Storyshots PreventDrag API 1`] = `
<div>
  <img
    alt=""
    src="http://placehold.it/350x150"
  />
  <div
    className="fikKfg"
    onDragStart={[Function]}
    onDrop={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
  >
    <img
      alt=""
      src="http://placehold.it/350x150"
    />
  </div>
  <a
    href=""
  >
    Link content
  </a>
  <div
    className="fikKfg"
    onDragStart={[Function]}
    onDrop={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
  >
    <a
      href=""
    >
      Link content (PreventDrag)
    </a>
  </div>
</div>
`;

exports[`Storyshots PullToRefresh API 1`] = `
<div
  className="elSmSq"
>
  <MockReactHammerJS
    direction="DIRECTION_DOWN"
    onPan={[Function]}
    onPanEnd={[Function]}
    onPanStart={[Function]}
    options={
      Object {
        "touchAction": "pan-x pan-y",
      }
    }
  >
    <div
      className="hRcCPT"
      style={
        Object {
          "marginTop": 0,
        }
      }
    >
      <div
        className="kWdxnU"
      >
        <h2
          className="hMMWfV"
          color="grayBase"
        >
          <svg
            fill="currentColor"
            height="1em"
            preserveAspectRatio="xMidYMid meet"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M12 18.9l5-5h-3.8V5.1h-2.5v8.8H7l5 5z"
            />
          </svg>
        </h2>
      </div>
      <section
        className="imSnko"
      >
        <h1
          className="lhKeVk"
          color="white"
        >
          Pull me down
        </h1>
        <h3
          className="emBao"
          color="white"
        >
          (API will respond after 3 seconds.)
        </h3>
      </section>
    </div>
  </MockReactHammerJS>
</div>
`;

exports[`Storyshots Small API 1`] = `
<small
  className="gPtzLl"
>
  Small content
</small>
`;

exports[`Storyshots Small With color 1`] = `
<div
  className="hEzGry"
  color="primary"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="gPtzLl"
  >
     Small content 
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Small Within <P> 1`] = `
<div
  className="gVViGF"
>
  Nisi eu eiusmod cupidatat aute laboris commodo excepteur
  <small
    className="gPtzLl"
  >
     Small content 
  </small>
  incididunt incididunt aliquip pariatur est minim officia sit.
</div>
`;

exports[`Storyshots Spin API 1`] = `
<div
  className="ftRJdL"
>
  <div
    className="erQqRy"
  >
    Content
  </div>
</div>
`;

exports[`Storyshots StatusLight API 1`] = `
<svg
  className="gUywdC"
  color="grayDark"
  viewBox="0 0 20 20"
>
  <circle
    cx="10"
    cy="10"
    r="10"
  />
</svg>
`;

exports[`Storyshots StatusLight Custom width 1`] = `
<svg
  className="gnQYZP kUCVuq"
  color="warning"
  viewBox="0 0 20 20"
>
  <circle
    cx="10"
    cy="10"
    r="10"
  />
</svg>
`;

exports[`Storyshots StatusLight With color props 1`] = `
<div>
  <div>
    <svg
      className="cLuimq"
      color="black"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    black
  </div>
  <div>
    <svg
      className="ePEEdP"
      color="grayBase"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    grayBase
  </div>
  <div>
    <svg
      className="gUywdC"
      color="grayDark"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    grayDark
  </div>
  <div>
    <svg
      className="boZlWD"
      color="grayLight"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    grayLight
  </div>
  <div>
    <svg
      className="ggsUXl"
      color="white"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    white
  </div>
  <div>
    <svg
      className="boZlWD"
      color="default"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    default
  </div>
  <div>
    <svg
      className="kGHODW"
      color="primary"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    primary
  </div>
  <div>
    <svg
      className="jfcUeq"
      color="success"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    success
  </div>
  <div>
    <svg
      className="jvqUaW"
      color="error"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    error
  </div>
  <div>
    <svg
      className="kUCVuq"
      color="warning"
      viewBox="0 0 20 20"
    >
      <circle
        cx="10"
        cy="10"
        r="10"
      />
    </svg>
    warning
  </div>
</div>
`;

exports[`Storyshots Switch API 1`] = `
<div>
  <div
    checked={false}
    className="hiQQzp"
    kind="success"
  />
  <div
    checked={true}
    className="cDkFNS"
    kind="success"
  />
</div>
`;

exports[`Storyshots Switch Overriding style 1`] = `
<div
  checked={false}
  className="bKlAUX"
  kind="success"
  onClick={[Function]}
/>
`;

exports[`Storyshots Switch Stateful switch 1`] = `
<div
  checked={false}
  className="hiQQzp"
  kind="success"
  onClick={[Function]}
/>
`;

exports[`Storyshots Switch With kind props 1`] = `
<div>
  <div
    checked={true}
    className="dJHpgd"
    kind="default"
  />
  <div
    checked={true}
    className="jZopHz"
    kind="primary"
  />
  <div
    checked={true}
    className="cDkFNS"
    kind="success"
  />
  <div
    checked={true}
    className="hvcNTy"
    kind="error"
  />
  <div
    checked={true}
    className="fdHlIe"
    kind="warning"
  />
</div>
`;

exports[`Storyshots Switch With scaling 1`] = `
<div
  checked={false}
  className="hsuqHb"
  kind="primary"
  onClick={[Function]}
/>
`;

exports[`Storyshots Textarea API 1`] = `
<textarea
  className="YixGR"
  kind="primary"
  placeholder="placeholder"
  rows="3"
/>
`;

exports[`Storyshots Textarea With kind props 1`] = `
<div
  className="cZlPqe"
>
  <textarea
    className="gyTfaf"
    kind="default"
    placeholder="default"
  />
  <textarea
    className="YixGR"
    kind="primary"
    placeholder="primary"
  />
  <textarea
    className="hnKkLx"
    kind="success"
    placeholder="success"
  />
  <textarea
    className="cujISZ"
    kind="error"
    placeholder="error"
  />
  <textarea
    className="gIHRDP"
    kind="warning"
    placeholder="warning"
  />
</div>
`;

exports[`Storyshots Toast API 1`] = `
<div
  className="bvtktA"
  kind="primary"
>
  <p
    className="jqoaId"
    kind="primary"
  >
    Success! You have delete the item.
  </p>
</div>
`;

exports[`Storyshots Toast With kind props 1`] = `
<div
  className="iQMpYt"
>
  <div
    className="eqmIuR"
    kind="default"
  >
    <div
      className="cwldVm"
      kind="default"
    >
      default
       - You have delete the item.
    </div>
  </div>
  <div
    className="bvtktA"
    kind="primary"
  >
    <div
      className="jqoaId"
      kind="primary"
    >
      primary
       - You have delete the item.
    </div>
  </div>
  <div
    className="kEYedK"
    kind="success"
  >
    <div
      className="hKLoOD"
      kind="success"
    >
      success
       - You have delete the item.
    </div>
  </div>
  <div
    className="eenCjv"
    kind="error"
  >
    <div
      className="gMtsLM"
      kind="error"
    >
      error
       - You have delete the item.
    </div>
  </div>
  <div
    className="fjzXVx"
    kind="warning"
  >
    <div
      className="cZlcZb"
      kind="warning"
    >
      warning
       - You have delete the item.
    </div>
  </div>
</div>
`;
