// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should renders <DeviceList> correctly when Filter open 1`] = `
<div>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      myTestDevices
    </title>
  </HelmetWrapper>
  <MobileHeader
    leftChildren={
      <MobileHeaderIcon
        component={[Function]}
        to={[Function]}
      >
        <IconMenu
          size="1em"
        />
      </MobileHeaderIcon>
    }
    rightChildren={
      Array [
        <Transition
          component={false}
          enter={
              Object {
                  "marginLeft": 0,
                  "opacity": 1,
                }
          }
          leave={
              Object {
                  "marginLeft": 50,
                  "opacity": 0,
                }
          }
          onEnter={[Function]}
          onLeave={[Function]}
          runOnMount={true}
      >
          <Input
              autoFocus={true}
              focus={false}
              kind="primary"
              onChange={[Function]}
              placeholder="search"
              value=""
          />
      </Transition>,
        <ClickOutside
          onClick={[Function]}
      >
          <Styled(MobileHeaderIcon)
              active={true}
              onClick={[Function]}
          >
              <IconSearch
                  size="1em"
              />
          </Styled(MobileHeaderIcon)>
      </ClickOutside>,
      ]
    }
    title=""
  />
  <main>
    <PullToRefresh
      IconArrow={
        <Heading
          color="grayBase"
          level={2}
        >
          <IconGoDown
            size="1em"
          />
        </Heading>
      }
      IconLoading={
        <Heading
          color="grayBase"
          level={2}
        >
          <Spin>
            <IconLoading
              size="1em"
            />
          </Spin>
        </Heading>
      }
      isLoading={false}
      onPull={[Function]}
    >
      <Styled(MobileContentWrapper)>
        <PreventDrag>
          <Transition
            appear={
              Object {
                "marginTop": -20,
                "opacity": 0.8,
              }
            }
            component={[Function]}
            enter={
              Object {
                "marginTop": 0,
                "opacity": 1,
              }
            }
            leave={
              Object {
                "opacity": 0,
              }
            }
            onEnter={[Function]}
            onLeave={[Function]}
            runOnMount={true}
          />
        </PreventDrag>
        <Styled(P)>
          noDevice
        </Styled(P)>
      </Styled(MobileContentWrapper)>
    </PullToRefresh>
  </main>
</div>
`;

exports[`should renders <DeviceList> correctly with one device 1`] = `
<div>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      myTestDevices
    </title>
  </HelmetWrapper>
  <MobileHeader
    leftChildren={
      <MobileHeaderIcon
        component={[Function]}
        to={[Function]}
      >
        <IconMenu
          size="1em"
        />
      </MobileHeaderIcon>
    }
    rightChildren={
      Array [
        false,
        <ClickOutside
          onClick={[Function]}
      >
          <Styled(MobileHeaderIcon)
              active={false}
              onClick={[Function]}
          >
              <IconSearch
                  size="1em"
              />
          </Styled(MobileHeaderIcon)>
      </ClickOutside>,
      ]
    }
    title="myTestDevices"
  />
  <main>
    <PullToRefresh
      IconArrow={
        <Heading
          color="grayBase"
          level={2}
        >
          <IconGoDown
            size="1em"
          />
        </Heading>
      }
      IconLoading={
        <Heading
          color="grayBase"
          level={2}
        >
          <Spin>
            <IconLoading
              size="1em"
            />
          </Spin>
        </Heading>
      }
      isLoading={false}
      onPull={[Function]}
    >
      <Styled(MobileContentWrapper)>
        <PreventDrag>
          <Transition
            appear={
              Object {
                "marginTop": -20,
                "opacity": 0.8,
              }
            }
            component={[Function]}
            enter={
              Object {
                "marginTop": 0,
                "opacity": 1,
              }
            }
            leave={
              Object {
                "opacity": 0,
              }
            }
            onEnter={[Function]}
            onLeave={[Function]}
            runOnMount={true}
          >
            <StyledLink
              to={[Function]}
            >
              <MobileDeviceCard
                image="/images/deviceImageURL"
                title="deviceName"
              />
            </StyledLink>
          </Transition>
        </PreventDrag>
      </Styled(MobileContentWrapper)>
    </PullToRefresh>
  </main>
</div>
`;

exports[`should renders <DeviceList> correctly without devices 1`] = `
<div>
  <HelmetWrapper
    defer={true}
    encodeSpecialCharacters={true}
  >
    <title>
      myTestDevices
    </title>
  </HelmetWrapper>
  <MobileHeader
    leftChildren={
      <MobileHeaderIcon
        component={[Function]}
        to={[Function]}
      >
        <IconMenu
          size="1em"
        />
      </MobileHeaderIcon>
    }
    rightChildren={
      Array [
        false,
        <ClickOutside
          onClick={[Function]}
      >
          <Styled(MobileHeaderIcon)
              active={false}
              onClick={[Function]}
          >
              <IconSearch
                  size="1em"
              />
          </Styled(MobileHeaderIcon)>
      </ClickOutside>,
      ]
    }
    title="myTestDevices"
  />
  <main>
    <PullToRefresh
      IconArrow={
        <Heading
          color="grayBase"
          level={2}
        >
          <IconGoDown
            size="1em"
          />
        </Heading>
      }
      IconLoading={
        <Heading
          color="grayBase"
          level={2}
        >
          <Spin>
            <IconLoading
              size="1em"
            />
          </Spin>
        </Heading>
      }
      isLoading={false}
      onPull={[Function]}
    >
      <Styled(MobileContentWrapper)>
        <PreventDrag>
          <Transition
            appear={
              Object {
                "marginTop": -20,
                "opacity": 0.8,
              }
            }
            component={[Function]}
            enter={
              Object {
                "marginTop": 0,
                "opacity": 1,
              }
            }
            leave={
              Object {
                "opacity": 0,
              }
            }
            onEnter={[Function]}
            onLeave={[Function]}
            runOnMount={true}
          />
        </PreventDrag>
        <Styled(P)>
          noDevice
        </Styled(P)>
      </Styled(MobileContentWrapper)>
    </PullToRefresh>
  </main>
</div>
`;
