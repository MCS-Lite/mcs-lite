// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should renders <ImageCustom> correctly 1`] = `
<Transition
  component={false}
  enter={
    Object {
      "opacity": 1,
    }
  }
  leave={
    Object {
      "opacity": 0.5,
    }
  }
  onEnter={[Function]}
  onLeave={[Function]}
  runOnMount={true}
>
  <pure(styled.div)>
    <pure(Styled(ProgressiveImage))
      placeholder="img_customizationX60.png"
      src="img_customization.svg"
    />
    <div>
      <ScrollParallax
        always={true}
        animation={
          Object {
            "playScale": Array [
              0,
              0.5,
            ],
            "x": -105,
            "y": 85,
          }
        }
        component={[Function]}
        style={
          Object {
            "transform": "translate(-120px, 85px)",
          }
        }
      />
    </div>
    <div>
      <ScrollParallax
        always={true}
        animation={
          Object {
            "playScale": Array [
              0,
              0.5,
            ],
            "y": 35,
          }
        }
        component={[Function]}
        style={
          Object {
            "transform": "translateY(0px)",
          }
        }
      />
    </div>
    <div>
      <ScrollParallax
        always={true}
        animation={
          Object {
            "playScale": Array [
              0,
              0.5,
            ],
            "x": 80,
            "y": 22,
          }
        }
        component={[Function]}
        style={
          Object {
            "transform": "translate(95px, 5px)",
          }
        }
      />
    </div>
    <div>
      <ScrollParallax
        always={true}
        animation={
          Object {
            "playScale": Array [
              0,
              0.5,
            ],
            "x": 70,
            "y": 125,
          }
        }
        component={[Function]}
        style={
          Object {
            "transform": "translate(70px, 130px)",
          }
        }
      />
    </div>
  </pure(styled.div)>
</Transition>
`;
