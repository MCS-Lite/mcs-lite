// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should renders <RestartNotification> correctly 1`] = `
.c4 {
  box-sizing: border-box;
  box-shadow: 0 1px 5px 0 rgba(0,0,0,0.2);
  border-radius: 3px;
  background-color: #FFFFFF;
  overflow: hidden;
}

.c7 {
  margin: 0;
  font-size: 1rem;
  color: currentColor;
}

.c3 {
  border: 1px solid #F39A1E;
  background-color: rgba(255,255,255,0.9);
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 10px 20px;
  color: #F39A1E;
  background-color: rgba(243,154,30,0.1);
}

.c0 {
  height: 32px;
  margin: -20px -20px 20px -20px;
}

.c1 {
  position: fixed;
  right: 0;
  left: 150px;
}

.c2 {
  border: none;
  box-shadow: none;
}

.c2 > .c5 {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

<RestartNotification
  getMessages={[Function]}
  onClick={[Function]}
>
  <styled.div>
    <div
      className="c0"
    >
      <styled.div>
        <div
          className="c1"
        >
          <Transition
            component={false}
            enter={
              Object {
                "opacity": 1,
                "translateY": 0,
              }
            }
            leave={
              Object {
                "opacity": 0.5,
                "translateY": -10,
              }
            }
            onEnter={[Function]}
            onLeave={[Function]}
            runOnMount={true}
          >
            <Component
              defaultStyles={
                Array [
                  Object {
                    "data": <Styled(Toast)
                      kind="warning"
                >
                      <div>
                            restartRequired
                      </div>
                      <A
                            color="primary"
                            onClick={[Function]}
                      >
                            restart
                      </A>
                </Styled(Toast)>,
                    "key": "StyledToast",
                    "style": Object {
                      "opacity": 0.5,
                      "translateY": -10,
                    },
                  },
                ]
              }
              didLeave={[Function]}
              styles={
                Array [
                  Object {
                    "data": <Styled(Toast)
                      kind="warning"
                >
                      <div>
                            restartRequired
                      </div>
                      <A
                            color="primary"
                            onClick={[Function]}
                      >
                            restart
                      </A>
                </Styled(Toast)>,
                    "key": "StyledToast",
                    "style": Object {
                      "opacity": Object {
                        "damping": 26,
                        "precision": 0.01,
                        "stiffness": 170,
                        "val": 1,
                      },
                      "translateY": Object {
                        "damping": 26,
                        "precision": 0.01,
                        "stiffness": 170,
                        "val": 0,
                      },
                    },
                  },
                ]
              }
              willEnter={[Function]}
              willLeave={[Function]}
            >
              <Styled(Toast)
                key="StyledToast"
                kind="warning"
                style={
                  Object {
                    "opacity": 0.5,
                    "undefined": "translateY(-10px) ",
                  }
                }
              >
                <Toast
                  className="c2"
                  kind="warning"
                  style={
                    Object {
                      "opacity": 0.5,
                      "undefined": "translateY(-10px) ",
                    }
                  }
                >
                  <Styled(Card)
                    className="c2"
                    kind="warning"
                    style={
                      Object {
                        "opacity": 0.5,
                        "undefined": "translateY(-10px) ",
                      }
                    }
                  >
                    <Card
                      className="c2 c3"
                      innerRef={undefined}
                      kind="warning"
                      style={
                        Object {
                          "opacity": 0.5,
                          "undefined": "translateY(-10px) ",
                        }
                      }
                    >
                      <div
                        className="c2 c3 c4"
                        kind="warning"
                        style={
                          Object {
                            "opacity": 0.5,
                            "undefined": "translateY(-10px) ",
                          }
                        }
                      >
                        <Styled(P)
                          kind="warning"
                        >
                          <P
                            className="c5 c6"
                            innerRef={undefined}
                            kind="warning"
                          >
                            <Component
                              className="c5 c6 c7"
                              kind="warning"
                            >
                              <div
                                className="c5 c6 c7"
                                kind="warning"
                              >
                                <div>
                                  restartRequired
                                </div>
                                <A
                                  color="primary"
                                  onClick={[Function]}
                                />
                              </div>
                            </Component>
                          </P>
                        </Styled(P)>
                      </div>
                    </Card>
                  </Styled(Card)>
                </Toast>
              </Styled(Toast)>
            </Component>
          </Transition>
        </div>
      </styled.div>
    </div>
  </styled.div>
</RestartNotification>
`;
