// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render with ADD_USER_TYPE_BATCH form - batch 1`] = `
<FormGroup>
  <Label
    htmlFor="uploadCSV"
    required={true}
  >
    uploadCSV
  </Label>
  <styled.div>
    <Input
      accept=".csv,text/csv"
      focus={false}
      id="csv"
      kind="primary"
      onChange={[Function]}
      required={true}
      type="file"
    />
    <InputGroup>
      <Input
        focus={false}
        kind="primary"
        onChange={[Function]}
        placeholder="uploadCSV.placeholder"
        readOnly={true}
        type="text"
        value=""
      />
      <Button
        active={false}
        block={false}
        component="button"
        disabled={false}
        kind="primary"
        onClick={[Function]}
        round={false}
        size="normal"
        square={false}
      >
        uploadCSV.button
      </Button>
    </InputGroup>
  </styled.div>
</FormGroup>
`;

exports[`should render with ADD_USER_TYPE_BATCH form - one 1`] = `
<FormGroup>
  <Label
    htmlFor="userName"
    required={true}
  >
    userName
  </Label>
  <Input
    focus={false}
    id="userName"
    kind="primary"
    onChange={[Function]}
    placeholder="userName.placeholder"
    required={true}
    type="text"
    value=""
  />
  <Label
    htmlFor="email"
    required={true}
  >
    email
  </Label>
  <Input
    focus={false}
    id="email"
    kind="primary"
    onChange={[Function]}
    placeholder="email.placeholder"
    required={true}
    type="email"
    value=""
  />
  <Label
    htmlFor="password"
    required={true}
  >
    password
  </Label>
  <Input
    focus={false}
    id="password"
    kind="primary"
    onChange={[Function]}
    placeholder="password.placeholder"
    required={true}
    type="password"
    value=""
  />
</FormGroup>
`;

exports[`should render with delete footer - Add 1`] = `
<styled.div>
  <A
    color="primary"
    onClick={[Function]}
  >
    <IconAdd
      size={18}
    />
    <div>
      addUser
    </div>
  </A>
</styled.div>
`;

exports[`should render with delete footer - Delete 1`] = `
<styled.div>
  <A
    color="primary"
    onClick={[Function]}
  >
    <IconDelete
      size={18}
    />
    <div>
      deleteUser
    </div>
  </A>
</styled.div>
`;

exports[`should renders <User> correctly 1`] = `
<div>
  <HelmetWrapper
    encodeSpecialCharacters={true}
  >
    <title>
      userManagement
    </title>
  </HelmetWrapper>
  <DashboardTitle
    title="userManagement"
  />
  <Styled(CommonDialog)
    component="form"
    onHide={[Function]}
    onSubmit={[Function]}
    show={false}
  >
    <header>
      addUser
    </header>
    <main>
      <Label
        required={true}
      >
        addUserType
      </Label>
      <SpaceTop
        height={5}
      />
      <styled.div>
        <label
          htmlFor="one"
        >
          <input
            checked={true}
            id="one"
            onChange={[Function]}
            type="radio"
            value="one"
          />
          <span>
            addUserType.one
          </span>
        </label>
        <label
          htmlFor="batch"
        >
          <input
            checked={false}
            id="batch"
            onChange={[Function]}
            type="radio"
            value="batch"
          />
          <span>
            addUserType.batch
          </span>
        </label>
      </styled.div>
      <SpaceTop
        height={10}
      />
      <FormGroup>
        <Label
          htmlFor="userName"
          required={true}
        >
          userName
        </Label>
        <Input
          focus={false}
          id="userName"
          kind="primary"
          onChange={[Function]}
          placeholder="userName.placeholder"
          required={true}
          type="text"
          value=""
        />
        <Label
          htmlFor="email"
          required={true}
        >
          email
        </Label>
        <Input
          focus={false}
          id="email"
          kind="primary"
          onChange={[Function]}
          placeholder="email.placeholder"
          required={true}
          type="email"
          value=""
        />
        <Label
          htmlFor="password"
          required={true}
        >
          password
        </Label>
        <Input
          focus={false}
          id="password"
          kind="primary"
          onChange={[Function]}
          placeholder="password.placeholder"
          required={true}
          type="password"
          value=""
        />
      </FormGroup>
    </main>
    <footer>
      <Button
        active={false}
        block={false}
        component="button"
        disabled={false}
        kind="default"
        onClick={[Function]}
        round={false}
        size="normal"
        square={false}
      >
        cancel
      </Button>
      <Button
        active={false}
        block={false}
        component="input"
        disabled={false}
        kind="primary"
        round={false}
        size="normal"
        square={false}
        type="submit"
        value="save"
      />
    </footer>
  </Styled(CommonDialog)>
  <Styled(CommonDialog)
    component="form"
    onHide={[Function]}
    onSubmit={[Function]}
    show={false}
  >
    <header>
      edit
    </header>
    <main>
      <styled.div>
        <TabItem
          active={true}
          color="primary"
          onClick={[Function]}
          value="changePassword"
        >
          changePassword
        </TabItem>
        <TabItem
          active={false}
          color="primary"
          onClick={[Function]}
          value="accountStatus"
        >
          accountStatus
        </TabItem>
      </styled.div>
      <FormGroup>
        <Label
          htmlFor="newPassword1"
          required={true}
        >
          newPassword1
        </Label>
        <Input
          focus={false}
          id="newPassword1"
          kind="primary"
          onChange={[Function]}
          placeholder="newPassword1.placeholder"
          required={true}
          type="password"
          value=""
        />
        <Label
          htmlFor="newPassword2"
          required={true}
        >
          newPassword2
        </Label>
        <Input
          focus={false}
          id="newPassword2"
          kind="primary"
          onChange={[Function]}
          placeholder="newPassword2.placeholder"
          required={true}
          type="password"
          value=""
        />
      </FormGroup>
    </main>
    <footer>
      <Button
        active={false}
        block={false}
        component="button"
        disabled={false}
        kind="default"
        onClick={[Function]}
        round={false}
        size="normal"
        square={false}
      >
        cancel
      </Button>
      <Button
        active={false}
        block={false}
        component="input"
        disabled={false}
        kind="primary"
        round={false}
        size="normal"
        square={false}
        type="submit"
        value="save"
      />
    </footer>
  </Styled(CommonDialog)>
  <InjectIntl(withPropsOnChange(DialogConfirm))
    onCancel={[Function]}
    onSubmit={[Function]}
    show={false}
  >
    delete.confirm
  </InjectIntl(withPropsOnChange(DialogConfirm))>
  <SpaceTop
    height={20}
  />
  <styled.div>
    <InputGroup>
      <Input
        focus={false}
        kind="primary"
        onChange={[Function]}
        placeholder="inputUsernameEmail"
        value=""
      />
      <Button
        active={false}
        block={false}
        component="button"
        disabled={false}
        kind="primary"
        round={false}
        size="normal"
        square={true}
      >
        <IconSearch
          size={18}
        />
      </Button>
    </InputGroup>
    <A
      color="primary"
      onClick={[Function]}
    >
      clearFilter
    </A>
  </styled.div>
  <SpaceTop
    height={10}
  />
  <Table
    checkedList={Array []}
    data={
      Array [
        Object {
          "email": "email1",
          "isActive": true,
          "userId": "user1",
          "userName": "userName1",
        },
        Object {
          "email": "email2",
          "isActive": false,
          "userId": "user2",
          "userName": "userName2",
        },
      ]
    }
    getMessages={[Function]}
    onCheckedListChange={[Function]}
    onEditClick={[Function]}
  />
  <styled.div>
    <A
      color="primary"
      onClick={[Function]}
    >
      <IconAdd
        size={18}
      />
      <div>
        addUser
      </div>
    </A>
  </styled.div>
</div>
`;
