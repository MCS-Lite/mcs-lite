// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should handle check all in checkedHeaderRenderer 1`] = `
<input
  checked={false}
  onChange={[Function]}
  type="checkbox"
/>
`;

exports[`should handle ckeck item in checkedCellRenderer 1`] = `
<input
  checked={false}
  onChange={[Function]}
  type="checkbox"
/>
`;

exports[`should handle emailCellRenderer with isActive status 1`] = `
<P
  color="black"
>
  email1
</P>
`;

exports[`should handle emailCellRenderer with isActive status 2`] = `
<P
  color="grayDark"
>
  email1
</P>
`;

exports[`should handle noRowsRenderer 1`] = `
<styled.div>
  noRows
</styled.div>
`;

exports[`should handle onEditClick in editCellRenderer 1`] = `
<Styled(IconEdit)
  onClick={[Function]}
  size={18}
/>
`;

exports[`should handle onSort 1`] = `
Array [
  Object {
    "email": "1",
    "userId": "1",
    "userName": "1",
  },
  Object {
    "email": "2",
    "userId": "2",
    "userName": "2",
  },
]
`;

exports[`should handle onSort 2`] = `
Array [
  Object {
    "email": "2",
    "userId": "2",
    "userName": "2",
  },
  Object {
    "email": "1",
    "userId": "1",
    "userName": "1",
  },
]
`;

exports[`should handle uncheck all in checkedHeaderRenderer 1`] = `
<input
  checked={true}
  onChange={[Function]}
  type="checkbox"
/>
`;

exports[`should handle unckeck item in checkedCellRenderer 1`] = `
<input
  checked={true}
  onChange={[Function]}
  type="checkbox"
/>
`;

exports[`should handle userNameCellRenderer 1`] = `
<P
  color="grayDark"
>
  userName1
</P>
`;

exports[`should handle userNameCellRenderer with isActive status 1`] = `
<P
  color="black"
>
  userName1
</P>
`;

exports[`should handle userNameCellRenderer with isActive status 2`] = `
<P
  color="grayDark"
>
  userName1
</P>
`;

exports[`should renders <Table> with data 1`] = `
.c0 > * {
  outline: none;
}

.c0 .ReactVirtualized__Table__headerRow {
  background-color: #FAFAFA;
  color: #999A94;
  font-weight: normal;
  border-bottom: 1px solid #F1F2F7;
  padding-right: 0 !important;
}

.c0 .ReactVirtualized__Table__headerColumn {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 .ReactVirtualized__Table__row {
  border-bottom: 1px solid #F1F2F7;
}

.c0 .ReactVirtualized__Table__sortableHeaderColumn {
  outline: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

<Table
  checkedList={Array []}
  data={
    Array [
      Object {
        "email": "email1",
        "userId": "user1",
        "userName": "userName1",
      },
      Object {
        "email": "email2",
        "userId": "user2",
        "userName": "userName2",
      },
    ]
  }
  getMessages={[Function]}
  onCheckedListChange={[Function]}
  onEditClick={[Function]}
>
  <WindowScroller>
    <AutoSizer
      disableHeight={true}
    >
      <Styled(Table)
        headerHeight={30}
        height={-100}
        noRowsRenderer={[Function]}
        rowCount={2}
        rowGetter={[Function]}
        rowHeight={50}
        sort={[Function]}
        sortBy="userName"
        sortDirection="ASC"
        width={100}
      >
        <Table
          className="c0"
          headerHeight={30}
          height={-100}
          noRowsRenderer={[Function]}
          rowCount={2}
          rowGetter={[Function]}
          rowHeight={50}
          sort={[Function]}
          sortBy="userName"
          sortDirection="ASC"
          width={100}
        >
          <div>
            <Column
              cellRenderer={[Function]}
              dataKey="userId"
              flexShrink={0}
              headerRenderer={[Function]}
              width={14}
            >
              <div />
            </Column>
            <Column
              cellRenderer={[Function]}
              dataKey="userName"
              flexGrow={1}
              label="name"
              width={300}
            >
              <div />
            </Column>
            <Column
              cellRenderer={[Function]}
              dataKey="email"
              flexGrow={1}
              label="email"
              width={300}
            >
              <div />
            </Column>
            <Column
              cellRenderer={[Function]}
              dataKey="userId"
              flexShrink={0}
              width={40}
            >
              <div />
            </Column>
          </div>
        </Table>
      </Styled(Table)>
    </AutoSizer>
  </WindowScroller>
</Table>
`;

exports[`should renders styled-components 1`] = `
Array [
  .c1 > * {
  outline: none;
}

.c1 .ReactVirtualized__Table__headerRow {
  background-color: #FAFAFA;
  color: #999A94;
  font-weight: normal;
  border-bottom: 1px solid #F1F2F7;
  padding-right: 0 !important;
}

.c1 .ReactVirtualized__Table__headerColumn {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 .ReactVirtualized__Table__row {
  border-bottom: 1px solid #F1F2F7;
}

.c1 .ReactVirtualized__Table__sortableHeaderColumn {
  outline: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c0 {
  color: #00A1DE;
  cursor: pointer;
}

.c2 {
  text-align: center;
  padding-top: 40px;
}

<div>
    <Styled(IconEdit)>
        <IconEdit
            className="c0"
            size="1em"
        />
    </Styled(IconEdit)>
    <Styled(Table)>
        <Table
            className="c1"
        >
            <div />
        </Table>
    </Styled(Table)>
    <styled.div>
        <div
            className="c2"
        />
    </styled.div>
</div>,
  <div />,
  .c0 {
  text-align: center;
  padding-top: 40px;
}

<div
    className="c0"
/>,
]
`;
